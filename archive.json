{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-07-07T07:43:50.549502+00:00",
  "repo": "ietf-rats-wg/eat",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "ready to close",
      "description": "",
      "color": "bfdadc"
    },
    {
      "name": "new claim",
      "description": "",
      "color": "006b75"
    },
    {
      "name": "Last Call blocking",
      "description": "",
      "color": "006b75"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "MDU6SXNzdWUzMzYzMzExNDY=",
      "title": "Manufacturer performing validation -- \"should\" or \"must\"",
      "url": "https://github.com/ietf-rats-wg/eat/issues/2",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Some comments so far in my reading (which is not yet complete):\r\n\r\n The Manufacturer.  The company that made the entity.  This may be a\r\n      chip vendor, a circuit board module vendor or a vendor of finished\r\n      consumer products.\r\n\r\nGiven that it may be three (or more) entities, and they each have different\r\nagendas, I think that it might be worth being specific about each level.\r\n\r\n  In this case the manufacturer should\r\n  perform the verification, because any release of the key material\r\n  would enable a participant other than the entity to create valid\r\n  signed EATs.\r\n\r\ns/manufacturer should/manufacturer MUST/",
      "createdAt": "2018-06-27T18:00:09Z",
      "updatedAt": "2021-08-31T17:26:39Z",
      "closedAt": "2021-08-31T17:26:39Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We determined that definition of the trusted endpoint would be out of scope for RATS, at least initially. Normative requirements on how to manufacture a RATS device seems to fit the definition of what is out of scope.",
          "createdAt": "2019-07-22T18:05:57Z",
          "updatedAt": "2019-07-22T18:05:57Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "We can close this because the section this pertains to will be removed and go into the architecture document. Also as Ned says, normative requirements on how to manufacture are out of scope.",
          "createdAt": "2019-10-04T16:10:22Z",
          "updatedAt": "2019-10-04T16:10:22Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #129 ",
          "createdAt": "2021-08-31T17:26:39Z",
          "updatedAt": "2021-08-31T17:26:39Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "MDU6SXNzdWUzMzYzMzE3MzQ=",
      "title": "Add claims for public keys and similar",
      "url": "https://github.com/ietf-rats-wg/eat/issues/3",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "new claim"
      ],
      "body": "(From David Wheeler)\r\n\r\nWhat seems to be missing from the proposed structure is the ability to attach new key material into the EAT structure, with an attestation claim. The attestation claim can be that it was generated on the device, or generated inside the TEE and bound/sealed to the TEE. And perhaps even a purpose for the key material. A new attestation key, for example; or a special signing/authorization key for a particular application.\r\n \r\nMany times, IMHO, it is useful to generate a new key that is attested in some way, and then future operations use that key. In fact, OTrP/TEEP has this implication, with the AIK keys for new installed Apps, but (IMO) it is not really that clearly spelled out, although I think the intention is clear.\r\n \r\nOther attestation claims are also useful \u2013 the identity and cryptographic hash of the code of a particular TEE application; a DH public key to establish an encrypted channel; the set of root CA\u2019s this TEE will trust; \u2026",
      "createdAt": "2018-06-27T18:02:04Z",
      "updatedAt": "2020-11-25T18:25:27Z",
      "closedAt": "2020-11-25T18:25:27Z",
      "comments": [
        {
          "author": "mathias-arm",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It seems to me this effort is relevant to the issue: https://datatracker.ietf.org/doc/draft-ietf-ace-cwt-proof-of-possession/",
          "createdAt": "2019-04-25T18:09:11Z",
          "updatedAt": "2019-04-25T18:09:11Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Attestation is different than proof of possession it is more like proof of protection or proof of integrity. In the TPM there is an added semantic that the key can only sign (attest to) data objects that are under the control of the TPM (TEE?). This avoids a possible confused deputy attack. If a key was not generated inside the trusted environment then it is possible the key could have been exposed to an attacker. This would make it less trustworthy as an attestation key because the key potentially could sign evidence that didn't pertain to the attester.",
          "createdAt": "2019-07-22T18:12:37Z",
          "updatedAt": "2019-07-22T18:12:37Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed with PR #71 ",
          "createdAt": "2020-11-25T18:25:27Z",
          "updatedAt": "2020-11-25T18:25:27Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "MDU6SXNzdWUzMzYzMzI1MTc=",
      "title": "Should there be both \"restricted\" and \"secure restricted\" security levels",
      "url": "https://github.com/ietf-rats-wg/eat/issues/4",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See seclevel discussion in mail list archive: https://mailarchive.ietf.org/arch/browse/eat/",
      "createdAt": "2018-06-27T18:04:43Z",
      "updatedAt": "2021-08-02T17:47:51Z",
      "closedAt": "2021-08-02T17:47:51Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The link to mailarchive doesn't appear to show messages related to this issue. Difficult to get context. My feedback related to levels is there isn't a clear use case or security model for the levels defined here. For example, the Bell-LaPadula security model defines security levels which are meaningful in that context. However, it isn't possible to map the levels defined in EAT because BL levels also have compartments and require a TCB boundary definition. These elements are not defined by EAT. ",
          "createdAt": "2019-10-17T21:51:36Z",
          "updatedAt": "2019-10-17T21:51:36Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The right link to the previous discussion that seems worth reading.\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/eat/cCalQh6WIePUYgZr_amp6FfOHc4/",
          "createdAt": "2020-11-14T17:56:11Z",
          "updatedAt": "2020-11-14T17:56:11Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This claim is oriented around resistance to attack. There seems to be some consensus around that the discussion in the mail archive. This claim is also in line with other efforts like that in FIDO.\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/eat/cCalQh6WIePUYgZr_amp6FfOHc4/\r\n\r\nBell-LaPadula doesn't seem to be about resistance to attack and doesn't seem useful here.",
          "createdAt": "2020-11-14T17:59:29Z",
          "updatedAt": "2020-11-14T17:59:29Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The proposal for this open issue is to reduce to three security levels from four.\r\n\r\nAlternatively we could go to five by adding a \"system services\" level that is roughly equivalent to root on Linux.",
          "createdAt": "2020-11-14T18:31:58Z",
          "updatedAt": "2020-11-14T18:31:58Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #116 ",
          "createdAt": "2021-08-02T17:47:51Z",
          "updatedAt": "2021-08-02T17:47:51Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "MDU6SXNzdWU0NTA0MDE0MzU=",
      "title": "Add guidance on registration of unused/lightly-used claims",
      "url": "https://github.com/ietf-rats-wg/eat/issues/9",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Section 5 contains guidance on the registration of EAT claims using the CWT registry.  There should be suggested guidance to the expert reviewers to avoid registration of claims intended to be used in EAT that will not achieve widespread adoption.\r\n\r\nSee https://mailarchive.ietf.org/arch/msg/rats/jBCYPK2hly554HGYTXZXa2t_AGw. ",
      "createdAt": "2019-05-30T16:45:01Z",
      "updatedAt": "2019-07-24T20:48:19Z",
      "closedAt": "2019-07-24T20:48:18Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There needs to be guidance on what \"lightly\", \"wide-spread\" and \"will be\" are intended to portray. ",
          "createdAt": "2019-07-22T18:14:16Z",
          "updatedAt": "2019-07-22T18:14:16Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "As per consensus at IETF 105, it was decided that there does not need to be additional guidance on the use of the CWT/JWT registries.  Therefore this issue is closed.",
          "createdAt": "2019-07-24T20:48:18Z",
          "updatedAt": "2019-07-24T20:48:18Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "MDU6SXNzdWU0NTA0MDQxNjM=",
      "title": "Add guidance on registration of claims corresponding to YANG objects",
      "url": "https://github.com/ietf-rats-wg/eat/issues/10",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "See https://mailarchive.ietf.org/arch/msg/rats/jBCYPK2hly554HGYTXZXa2t_AGw.\r\n\r\nFuture claims could be added that correspond directly to YANG objects (https://tools.ietf.org/html/rfc6020).  There should be guidance in the document as to how such objects can be reflected in the CWT claims registry.\r\n\r\nFor CBOR claims, this could be as simple as providing a reference to https://datatracker.ietf.org/doc/draft-ietf-core-yang-cbor/.  It should be confirmed whether https://tools.ietf.org/html/rfc7951 is sufficient to address future JWT claims.",
      "createdAt": "2019-05-30T16:51:28Z",
      "updatedAt": "2022-12-12T19:32:18Z",
      "closedAt": "2022-12-12T19:32:17Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Possibly it doesn't make sense to provide guidance unless it is thought to be needed by draft-birkholz-rats-basic-yang-module-01  and/or draft-fedorkow-rats-network-device-attestation-00 or if there is a use case that provides context for understanding how EAT tokens are used in the context of YANG encodings. Possibly, the information models in both EAT and YANG define claims that are semantically the same/similar. But the WG seems to be in favor of allowing this or at least relying on readers of the drafts to spot semantic differences. Even so, if no use case requires use of EAT (CBOR/JSON) and YANG encodings then possibly there is no compelling need to define this now.",
          "createdAt": "2019-10-17T22:07:28Z",
          "updatedAt": "2019-10-17T22:07:28Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith \r\n\r\nI assume that there will be YANG claims that correspond to TPM information fields (as there already are in draft-birkholz-rats-basic-yang-module).  Having the guidance on how to add YANG claims to an EAT token (without actually specifying those claims) could allow developers to basically pick and choose which TPM information fields they would like if they wanted to enrich an EAT token, as opposed to sending an entire TPM attestation along with the EAT. ",
          "createdAt": "2019-10-17T22:58:50Z",
          "updatedAt": "2019-10-17T22:58:50Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\ufeff\r\n\ufeffThe challenge is who signs the EAT token if legacy TPM doesn\u2019t know how to sign an EAT. Does it still make sense to say the same thing in an EAT if it is also said in the TPM Evidence?\r\n\r\nSent from my iPhone\r\n\r\nOn Oct 17, 2019, at 6:58 PM, gmandyam <notifications@github.com> wrote:\r\n\r\n\ufeff\r\n\r\n@nedmsmith<https://github.com/nedmsmith>\r\n\r\nI assume that there will be YANG claims that correspond to TPM information fields (as there already are in draft-birkholz-rats-basic-yang-module). Having the guidance on how to add YANG claims to an EAT token (without actually specifying those claims) could allow developers to basically pick and choose which TPM information fields they would like if they wanted to enrich an EAT token, as opposed to sending an entire TPM attestation along with the EAT.\r\n\r\n\u2014\r\nYou are receiving this because you were mentioned.\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/eat/issues/10?email_source=notifications&email_token=ABPMCSFWLJR7EUR3EW7WQB3QPDU2XA5CNFSM4HRGZT22YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEBRZNWQ#issuecomment-543397594>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABPMCSFUZDO65ZPY66EYB7DQPDU2XANCNFSM4HRGZT2Q>.\r\n",
          "createdAt": "2019-10-18T05:17:50Z",
          "updatedAt": "2019-10-18T05:17:50Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">\ufeffThe challenge is who signs the EAT token if legacy TPM doesn\u2019t know how to sign an EAT. Does it still make sense to say the same thing in an EAT if it is also said in the TPM Evidence?\r\n\r\nIf one was to attempt such an operation, then I think it would look a lot like the  signing operation described in the webauthn specification - see https://www.w3.org/TR/webauthn/#tpm-attestation.  In that case, a digest is created of the data to be signed and the digest is presented to the TPM in the TPMS_ATTEST.extraData field.  So any RP that would try to verify the EAT token would have to know what digest to expect.    If there is any information contained in the EAT token that is dynamic in nature (e.g. location in a mobile device), then I don't know how that would work.\r\n\r\nThat is why I think that if an implementation requires information equivalence between the TPM attestation and EAT, it is preferable to add the desired TPM information fields to the EAT (e.g. via a YANG claim) rather than the other way.",
          "createdAt": "2019-10-22T17:39:24Z",
          "updatedAt": "2019-10-22T17:39:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The architectural question relates to what environment is the \u201cAttesting env\u201d and whether or not that environment is able to support an IETF RATS format (CBOR, JSON, YANG). The TPM versions support binary and in TPM2 an optional X.509 (BER) format. If the expectation of RATS is that an EAT token is needed that encapsulates the TPM attested evidence, then one should ask whether the thing creating the EAT is an \u201cAttesting\u201d environment. If it is, but isn\u2019t a TPM then the use cases (or some other specification) should inform as to whether that makes sense. Having a spec that says \u201csomething that might not be an attesting env should create an EAT except for the fact that the spec mandates it\u201d doesn\u2019t seem right.\r\n\r\nIf the idea is to use the TPMS_ATTEST.extraData field to cause the TPM (aka attesting env) to sign the EAT. However the TPM may refuse to sign with an attestation key because these keys refuse to sign data that is opaque (to the attesting env). Even so, it would be\r\n\r\nThe correct use of TPMS_ATTEST.extraData would be as a nonce to show freshness of the attestation event. This could be an EAT.nonce value. I\u2019m having difficulty understanding the use case where the EAT contains an encapsulation of the TPM signed Evidence.\r\n\r\n-Ned\r\n\r\nOn 10/22/19, 10:39 AM, \"gmandyam\" <notifications@github.com<mailto:notifications@github.com>> wrote:\r\n\r\n\r\nThe challenge is who signs the EAT token if legacy TPM doesn\u2019t know how to sign an EAT. Does it still make sense to say the same thing in an EAT if it is also said in the TPM Evidence?\r\n\r\nIf one was to attempt such an operation, then I think it would look a lot like the signing operation described in the webauthn specification - see https://www.w3.org/TR/webauthn/#tpm-attestation. In that case, a digest is created of the data to be signed and the digest is presented to the TPM in the TPMS_ATTEST.extraData field. So any RP that would try to verify the EAT token would have to know what digest to expect. If there is any information contained in the EAT token that is dynamic in nature (e.g. location in a mobile device), then I don't know how that would work.\r\n\r\nThat is why I think that if an implementation requires information equivalence between the TPM attestation and EAT, it is preferable to add the desired TPM information fields to the EAT (e.g. via a YANG claim) rather than the other way.\r\n\r\n\u2014\r\nYou are receiving this because you were mentioned.\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/eat/issues/10?email_source=notifications&email_token=ABPMCSEWNORPHJEZM5GEJN3QP43E3A5CNFSM4HRGZT22YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEB6ST3A#issuecomment-545073644>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABPMCSBPF636LGY44OBPCEDQP43E3ANCNFSM4HRGZT2Q>.\r\n",
          "createdAt": "2019-10-22T18:01:04Z",
          "updatedAt": "2019-10-22T18:01:04Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The TPM discussion aside, it seems this is about how to relate definitions of YANG objects to claims in CBOR or JSON and vice versa.\r\n\r\nLooks to me YANG objects are defined in YANG modules and that there are a LOT of them. There's no registry. It looks like a real chore to reconcile all the YANG objects with CWT/JWT claims. Does that sound right?\r\n\r\nA use case here might be one were the Verifier receives some attestation evidence in YANG format and needs to produce attestation results in EAT format. Having the same claims or similar claims in both would make that work much better.\r\n\r\nIs there a YANG module for attestation? We could limit ourselves to that and some reconciliation might be doable.\r\n",
          "createdAt": "2021-08-04T07:37:31Z",
          "updatedAt": "2021-08-04T07:37:31Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed per discussion at virtual interim December 12, 2023",
          "createdAt": "2022-12-12T19:32:17Z",
          "updatedAt": "2022-12-12T19:32:17Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "MDU6SXNzdWU0NjM5MzMxNDg=",
      "title": "Should minimum size of UEID be larger than 128 bits?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/12",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Ben commented that 128 bits is not enough. Is my analysis correct?\r\n\r\n128 bits (16 bytes) is enough for one trillion humans to each have one trillion devices and the probability of collision less than a trillion (log base 10 of 2^ 128 = 38; log base 10 of a trillion is 12; 3 * 12 < 38) So 128 bits seems like enough, but take it out to 256 bits because SHA-256 is popular and good and there is some extra margin.",
      "createdAt": "2019-07-03T20:12:32Z",
      "updatedAt": "2020-11-03T18:35:33Z",
      "closedAt": "2020-11-03T18:35:33Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Simply anticipating a namespace large enough to create a universally unique value doesn't ensure there will not be collisions. Often there is a namespace authority that applies a formula for testing uniqueness / collisions. This implies the namespace authority plays a role. For example, X.509 serial numbers are unique within the context of the issuing CA. The issuing CA is the namespace authority. The EUID definition implies namespace authorities exist for example the first 8 bytes of an IMEI identifies the mobile equipment vendor. Presumably the serial numbers are chosen by the vendor. \r\nIt isn't clear that all EUIDs will have bits reserved for namespace authorities and that there will be some way to register them.",
          "createdAt": "2019-07-22T18:28:00Z",
          "updatedAt": "2019-07-22T18:28:00Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "PR #35 includes a full probabilistic analysis rather than the poor one in my comment above.\r\n\r\n@nedmsmith -- the details in the EAT draft propose several types of UEIDs, some based on existing on device ID schemes guaranteed by a central database and one based purely on cryptographic quality large random numbers.",
          "createdAt": "2019-10-07T04:17:19Z",
          "updatedAt": "2019-10-07T04:18:23Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #35",
          "createdAt": "2020-02-29T16:51:04Z",
          "updatedAt": "2020-02-29T16:51:04Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWU0Njc4ODYxODM=",
      "title": "Add privacy considerations for location claim",
      "url": "https://github.com/ietf-rats-wg/eat/issues/13",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-07-14T21:23:58Z",
      "updatedAt": "2020-11-30T20:47:37Z",
      "closedAt": "2020-11-30T20:47:37Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #85",
          "createdAt": "2020-11-30T20:47:36Z",
          "updatedAt": "2020-11-30T20:47:36Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "MDU6SXNzdWU0Njg0MzQwNzQ=",
      "title": "CDDL in section 4.4.1 for location is wrong",
      "url": "https://github.com/ietf-rats-wg/eat/issues/14",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "missing \"=\"\r\n",
      "createdAt": "2019-07-16T03:52:30Z",
      "updatedAt": "2019-07-17T03:58:30Z",
      "closedAt": "2019-07-17T03:58:29Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed and pushed.",
          "createdAt": "2019-07-17T03:58:29Z",
          "updatedAt": "2019-07-17T03:58:29Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "MDU6SXNzdWU0Njg0MzQ5ODY=",
      "title": "should / must consistency",
      "url": "https://github.com/ietf-rats-wg/eat/issues/15",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Last Call blocking"
      ],
      "body": "",
      "createdAt": "2019-07-16T03:57:08Z",
      "updatedAt": "2021-11-10T14:55:47Z",
      "closedAt": "2021-11-10T14:55:47Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Recommend closing this issue as there has not been any specific proposals related to the existing specification language.  If there are remaining should/must/SHOULD/MUST issues with the specification then it should be addressed based on Last Call feedback.",
          "createdAt": "2021-10-31T20:53:22Z",
          "updatedAt": "2021-10-31T20:53:22Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as per discussion at IETF 112.",
          "createdAt": "2021-11-10T14:55:47Z",
          "updatedAt": "2021-11-10T14:55:47Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "MDU6SXNzdWU0Njg1NjkxMTU=",
      "title": "Definition and usage of the term 'entity'",
      "url": "https://github.com/ietf-rats-wg/eat/issues/16",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In section 1.2, it seems odd that the definition of the term \"entity\" is limited to things that implement this draft. The last sentence of this section and the definition of \"The Entity\" in section 1.3 bear this out. Generally, 'entity' is used pretty loosely throughout the draft.",
      "createdAt": "2019-07-16T10:15:16Z",
      "updatedAt": "2022-01-05T21:19:41Z",
      "closedAt": "2022-01-05T21:19:41Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The architecture and terminology draft should define 'entity' and other terms that are consistently used within related drafts. Given they are progressing at different rates, it may be appropriate for EAT draft to qualify its use of terms at least temporarily. ",
          "createdAt": "2019-07-22T19:12:23Z",
          "updatedAt": "2019-07-22T19:12:23Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This can be closed because of the expectation that the architecture document will define entity.",
          "createdAt": "2019-10-04T16:12:39Z",
          "updatedAt": "2019-10-04T16:12:39Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agree.\r\n\r\nArchitecture defines Entity as:\r\n   Entity:  a user, organization, device or computing environment.\r\n\r\n   Principal:  an Entity that implements RATS Roles and creates provable\r\n      Claims or Attestation Results (see [ABLP] and [Lampson2007]).\r\n\r\nIf these semantics align with expected EAT semantics then it seems like the issue can be closed.\r\n\r\n-Ned\r\n\r\nOn 10/4/19, 9:12 AM, \"Laurence Lundblade\" <notifications@github.com<mailto:notifications@github.com>> wrote:\r\n\r\n\r\nThis can be closed because of the expectation that the architecture document will define entity.\r\n\r\n\u2014\r\nYou are receiving this because you commented.\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/eat/issues/16?email_source=notifications&email_token=ABPMCSBZKEW6N5ABYPX6NODQM5TPTA5CNFSM4ID7KXSKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAMEYSQ#issuecomment-538463306>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABPMCSCQC6PK3Q7OLEKVG63QM5TPTANCNFSM4ID7KXSA>.\r\n",
          "createdAt": "2019-10-04T17:22:41Z",
          "updatedAt": "2019-10-04T17:22:41Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "EAT and Architecture are absolutely NOT aligned on the term entity. See my recent email comments on the architecture document.\r\n\r\nMy basis for closure is that the architecture document will define some term that is the is used to refer to the subject of the attestation. Maybe we shouldn't close this until the architecture doc starts tracking issues formally.",
          "createdAt": "2019-10-04T17:27:32Z",
          "updatedAt": "2019-10-04T17:27:32Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The architecture defines:\r\n\r\n  *   Entity:  a user, organization, device or computing environment.\r\n  *   Principal:  an Entity that implements RATS Roles and creates provable Claims or Attestation Results (see [ABLP] and [Lampson2007]).\r\n  *   Attesting Computing Environment:  a Computing Environment capable of monitoring and attesting a target Computing Environment.\r\n  *   Attested Computing Environment:  a target Computing Environment that is monitored and attested by an Attesting Computing Environment.\r\n\r\nThe attested computing environment is the subject of attestation which clearly is creating provable claims.\r\n\r\nThe \u2018attested\u2019 environment may be less clearly a Principal. At one point the list suggested the architecture should define a term \u201ctarget of attestation\u201d or \u201cattestation target\u201d (or something similar). The term \u201cattested computing environment\u201d seems close to this. Do we think the attested environment is semantically the same as \u201csubject of the attestation\u201d?\r\n\r\nUsing Lampson\u2019s definition of Principal, an expression of attributes (aka claims) is itself a principal.\r\n\r\nThere are lots of cases where \u2018entity\u2019 is used to refer to organizations and users (see https://csrc.nist.gov/glossary/term/entity ). Given the broad use of the term to mean: a \u201cuser, organization, device or process\u201d it might not make sense for RATs to change its scope. The RATS Arch used the term \u201ccomputing environment\u201d instead of process because not every computing environment has an operating system.\r\n\r\nAn \u201cattested computing environment\u201d is clearly intended to be a \u201ccomputing environment\u201d and hence is an Entity according to the arch draft.\r\n\r\nIf the EAT draft\u2019s use of entity is semantically equal to the architecture draft use of \u201cattested computing environment\u201d then possibly it makes sense for the EAT draft to begin using this term instead?\r\n\r\nThe architecture draft potentially could be more clear as to whether an \u201cAttested computing environment\u201d is both an entity and a principal or just an entity. It seems clear that an \u201cattesting computing environment\u201d is a Principal.\r\n\r\nNed\r\n\r\nOn 10/4/19, 10:27 AM, \"Laurence Lundblade\" <notifications@github.com<mailto:notifications@github.com>> wrote:\r\n\r\n\r\nEAT and Architecture are absolutely NOT aligned on the term entity. See my recent email comments on the architecture document.\r\n\r\nMy basis for closure is that the architecture document will define some term that is the is used to refer to the subject of the attestation. Maybe we shouldn't close this until the architecture doc starts tracking issues formally.\r\n\r\n\u2014\r\nYou are receiving this because you commented.\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/eat/issues/16?email_source=notifications&email_token=ABPMCSG6S47KPNKHPDRK3TDQM54ILA5CNFSM4ID7KXSKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAMLBKY#issuecomment-538489003>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABPMCSAPK5BFFBWNGO2SLZTQM54ILANCNFSM4ID7KXSA>.\r\n",
          "createdAt": "2019-10-04T17:56:42Z",
          "updatedAt": "2019-10-04T17:56:42Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "On Fri, Oct 4, 2019 at 1:56 PM Smith, Ned <ned.smith@intel.com> wrote:\n\n> The architecture defines:\n>\n>    - Entity:  a user, organization, device or computing environment.\n>    - Principal:  an Entity that implements RATS Roles and creates\n>    provable Claims or Attestation Results (see [ABLP] and [Lampson2007]).\n>    - Attesting Computing Environment:  a Computing Environment capable of\n>    monitoring and attesting a target Computing Environment.\n>    - Attested Computing Environment:  a target Computing Environment that\n>    is monitored and attested by an Attesting Computing Environment.\n>\n>\n>\n> The attested computing environment is the subject of attestation which\n> clearly is creating provable claims.\n>\n>\n>\n> The \u2018attested\u2019 environment may be less clearly a Principal. At one point\n> the list suggested the architecture should define a term \u201ctarget of\n> attestation\u201d or \u201cattestation target\u201d (or something similar). The term\n> \u201cattested computing environment\u201d seems close to this. Do we think the\n> attested environment is semantically the same as \u201csubject of the\n> attestation\u201d?\n>\n>\n>\n> Using Lampson\u2019s definition of Principal, an expression of attributes (aka\n> claims) is itself a principal.\n>\n>\n>\n> There are lots of cases where \u2018entity\u2019 is used to refer to organizations\n> and users (see https://csrc.nist.gov/glossary/term/entity ). Given the\n> broad use of the term to mean: a \u201cuser, organization, device or process\u201d it\n> might not make sense for RATs to change its scope. The RATS Arch used the\n> term \u201ccomputing environment\u201d instead of process because not every computing\n> environment has an operating system.\n>\n>\n>\n> An \u201cattested computing environment\u201d is clearly intended to be a \u201ccomputing\n> environment\u201d and hence is an Entity according to the arch draft.\n>\n\nAnd from a review of the EAT draft (again), I am reading this as the\nattestation based on the installed code with the attestation performed at\nboot to match what was installed.  This would verify that the code was what\nthe system administrator installed and configured.  As opposed to code\nbeing attested by the creator, which might be done with the same format,\nbut would assure the code was as he creator expected.\n\nI'm asking about this clarification in light of supply chain and the flow\ndocument:\nhttps://datatracker.ietf.org/doc/draft-fedorkow-rats-network-device-attestation/?include_text=1\n\nDoes the supply chain use case hold in these definitions or is there some\nreason why we might not care about attestations on code from the originator\nthat might include code it relies upon when chained attestations are\nconsidered?  This would expand out the definition of entity as well.\n\n\n>\n> If the EAT draft\u2019s use of entity is semantically equal to the architecture\n> draft use of \u201cattested computing environment\u201d then possibly it makes sense\n> for the EAT draft to begin using this term instead?\n>\n>\n>\n> The architecture draft potentially could be more clear as to whether an\n> \u201cAttested computing environment\u201d is both an entity and a principal or just\n> an entity. It seems clear that an \u201cattesting computing environment\u201d is a\n> Principal.\n>\n\nIs EAT limited to 'attested computing environments' or a broader definition\nof entity?\n\nKathleen\n\n\n>\n> Ned\n>\n>\n>\n> On 10/4/19, 10:27 AM, \"Laurence Lundblade\" <notifications@github.com>\n> wrote:\n>\n>\n>\n> EAT and Architecture are absolutely NOT aligned on the term entity. See my\n> recent email comments on the architecture document.\n>\n> My basis for closure is that the architecture document will define some\n> term that is the is used to refer to the subject of the attestation. Maybe\n> we shouldn't close this until the architecture doc starts tracking issues\n> formally.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ietf-rats-wg/eat/issues/16?email_source=notifications&email_token=ABPMCSG6S47KPNKHPDRK3TDQM54ILA5CNFSM4ID7KXSKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAMLBKY#issuecomment-538489003>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABPMCSAPK5BFFBWNGO2SLZTQM54ILANCNFSM4ID7KXSA>\n> .\n> _______________________________________________\n> RATS mailing list\n> RATS@ietf.org\n> https://www.ietf.org/mailman/listinfo/rats\n>\n\n\n-- \n\nBest regards,\nKathleen\n",
          "createdAt": "2019-10-04T19:17:05Z",
          "updatedAt": "2019-10-04T19:17:05Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "See inline [nms]\r\n\r\nOn 10/4/19, 12:17 PM, \"Kathleen Moriarty\" <kathleen.moriarty.ietf@gmail.com<mailto:kathleen.moriarty.ietf@gmail.com>> wrote:\r\n\r\n\r\n\r\nOn Fri, Oct 4, 2019 at 1:56 PM Smith, Ned <ned.smith@intel.com<mailto:ned.smith@intel.com>> wrote:\r\nThe architecture defines:\r\n\r\n\u00b7 Entity:  a user, organization, device or computing environment.\r\n\r\n\u00b7 Principal:  an Entity that implements RATS Roles and creates provable Claims or Attestation Results (see [ABLP] and [Lampson2007]).\r\n\r\n\u00b7 Attesting Computing Environment:  a Computing Environment capable of monitoring and attesting a target Computing Environment.\r\n\r\n\u00b7 Attested Computing Environment:  a target Computing Environment that is monitored and attested by an Attesting Computing Environment.\r\n\r\nThe attested computing environment is the subject of attestation which clearly is creating provable claims.\r\n\r\nThe \u2018attested\u2019 environment may be less clearly a Principal. At one point the list suggested the architecture should define a term \u201ctarget of attestation\u201d or \u201cattestation target\u201d (or something similar). The term \u201cattested computing environment\u201d seems close to this. Do we think the attested environment is semantically the same as \u201csubject of the attestation\u201d?\r\n\r\nUsing Lampson\u2019s definition of Principal, an expression of attributes (aka claims) is itself a principal.\r\n\r\nThere are lots of cases where \u2018entity\u2019 is used to refer to organizations and users (see https://csrc.nist.gov/glossary/term/entity ). Given the broad use of the term to mean: a \u201cuser, organization, device or process\u201d it might not make sense for RATs to change its scope. The RATS Arch used the term \u201ccomputing environment\u201d instead of process because not every computing environment has an operating system.\r\n\r\nAn \u201cattested computing environment\u201d is clearly intended to be a \u201ccomputing environment\u201d and hence is an Entity according to the arch draft.\r\n\r\nAnd from a review of the EAT draft (again), I am reading this as the attestation based on the installed code with the attestation performed at boot to match what was installed.  This would verify that the code was what the system administrator installed and configured.  As opposed to code being attested by the creator, which might be done with the same format, but would assure the code was as he creator expected.\r\n\r\nI'm asking about this clarification in light of supply chain and the flow document:\r\nhttps://datatracker.ietf.org/doc/draft-fedorkow-rats-network-device-attestation/?include_text=1\r\n\r\nDoes the supply chain use case hold in these definitions or is there some reason why we might not care about attestations on code from the originator that might include code it relies upon when chained attestations are considered?  This would expand out the definition of entity as well.\r\n[nms] The RATS architecture describes the \u201cattestations on code from the originator\u201d as \u201cEndorsements\u201d from \u201cAsserters\u201d. The architecture tries to avoid using the term \u201cattestation\u201d in this context as collection of reference values (Endorsements) isn\u2019t the same as providing proof and evidence (and the charter ruled this out of scope for now). The NIST definition of Entity includes supply chain entities (aka Asserters).\r\n\r\nIf the RATS charter were updated to allow definition of \u201cEndorsements\u201d it might make sense to propose using JWT/CWT as a binding. The Architecture draft defines endorsements [here] as a specialization of Claims. Claims in Evidence can be semantically linked to claims in Endorsements. This is intentional so that verification is less susceptible to semantic misdirection.\r\n[here]\r\n\r\n  *   Endorsements are reference Claims about the environment protecting the Attesters capabilities to create believable Evidence (e.g. the type of protection for an attestation key).  It answers the question \"why Evidence is believable\".\r\n\r\n\r\nIf the EAT draft\u2019s use of entity is semantically equal to the architecture draft use of \u201cattested computing environment\u201d then possibly it makes sense for the EAT draft to begin using this term instead?\r\n\r\nThe architecture draft potentially could be more clear as to whether an \u201cAttested computing environment\u201d is both an entity and a principal or just an entity. It seems clear that an \u201cattesting computing environment\u201d is a Principal.\r\n\r\nIs EAT limited to 'attested computing environments' or a broader definition of entity?\r\n\r\nKathleen\r\n\r\n\r\nNed\r\n\r\nOn 10/4/19, 10:27 AM, \"Laurence Lundblade\" <notifications@github.com<mailto:notifications@github.com>> wrote:\r\n\r\n\r\nEAT and Architecture are absolutely NOT aligned on the term entity. See my recent email comments on the architecture document.\r\n\r\nMy basis for closure is that the architecture document will define some term that is the is used to refer to the subject of the attestation. Maybe we shouldn't close this until the architecture doc starts tracking issues formally.\r\n\r\n\u2014\r\nYou are receiving this because you commented.\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/eat/issues/16?email_source=notifications&email_token=ABPMCSG6S47KPNKHPDRK3TDQM54ILA5CNFSM4ID7KXSKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAMLBKY#issuecomment-538489003>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABPMCSAPK5BFFBWNGO2SLZTQM54ILANCNFSM4ID7KXSA>.\r\n_______________________________________________\r\nRATS mailing list\r\nRATS@ietf.org<mailto:RATS@ietf.org>\r\nhttps://www.ietf.org/mailman/listinfo/rats\r\n\r\n\r\n--\r\n\r\nBest regards,\r\nKathleen\r\n",
          "createdAt": "2019-10-04T19:53:33Z",
          "updatedAt": "2019-10-04T19:53:33Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "On Fri, Oct 4, 2019 at 3:53 PM Smith, Ned <ned.smith@intel.com> wrote:\n\n> See inline [nms]\n>\n>\n>\n> On 10/4/19, 12:17 PM, \"Kathleen Moriarty\" <\n> kathleen.moriarty.ietf@gmail.com> wrote:\n>\n>\n>\n>\n>\n>\n>\n> On Fri, Oct 4, 2019 at 1:56 PM Smith, Ned <ned.smith@intel.com> wrote:\n>\n> The architecture defines:\n>\n> \u00b7 Entity:  a user, organization, device or computing environment.\n>\n> \u00b7 Principal:  an Entity that implements RATS Roles and creates provable\n> Claims or Attestation Results (see [ABLP] and [Lampson2007]).\n>\n> \u00b7 Attesting Computing Environment:  a Computing Environment capable of\n> monitoring and attesting a target Computing Environment.\n>\n> \u00b7 Attested Computing Environment:  a target Computing Environment that is\n> monitored and attested by an Attesting Computing Environment.\n>\n>\n>\n> The attested computing environment is the subject of attestation which\n> clearly is creating provable claims.\n>\n>\n>\n> The \u2018attested\u2019 environment may be less clearly a Principal. At one point\n> the list suggested the architecture should define a term \u201ctarget of\n> attestation\u201d or \u201cattestation target\u201d (or something similar). The term\n> \u201cattested computing environment\u201d seems close to this. Do we think the\n> attested environment is semantically the same as \u201csubject of the\n> attestation\u201d?\n>\n>\n>\n> Using Lampson\u2019s definition of Principal, an expression of attributes (aka\n> claims) is itself a principal.\n>\n>\n>\n> There are lots of cases where \u2018entity\u2019 is used to refer to organizations\n> and users (see https://csrc.nist.gov/glossary/term/entity ). Given the\n> broad use of the term to mean: a \u201cuser, organization, device or process\u201d it\n> might not make sense for RATs to change its scope. The RATS Arch used the\n> term \u201ccomputing environment\u201d instead of process because not every computing\n> environment has an operating system.\n>\n>\n>\n> An \u201cattested computing environment\u201d is clearly intended to be a \u201ccomputing\n> environment\u201d and hence is an Entity according to the arch draft.\n>\n>\n>\n> And from a review of the EAT draft (again), I am reading this as the\n> attestation based on the installed code with the attestation performed at\n> boot to match what was installed.  This would verify that the code was what\n> the system administrator installed and configured.  As opposed to code\n> being attested by the creator, which might be done with the same format,\n> but would assure the code was as he creator expected.\n>\n>\n>\n> I'm asking about this clarification in light of supply chain and the flow\n> document:\n>\n>\n> https://datatracker.ietf.org/doc/draft-fedorkow-rats-network-device-attestation/?include_text=1\n>\n>\n>\n> Does the supply chain use case hold in these definitions or is there some\n> reason why we might not care about attestations on code from the originator\n> that might include code it relies upon when chained attestations are\n> considered?  This would expand out the definition of entity as well.\n>\n> [nms] The RATS architecture describes the \u201cattestations on code from the\n> originator\u201d as \u201cEndorsements\u201d from \u201cAsserters\u201d. The architecture tries to\n> avoid using the term \u201cattestation\u201d in this context as collection of\n> reference values (Endorsements) isn\u2019t the same as providing proof and\n> evidence (and the charter ruled this out of scope for now). The NIST\n> definition of Entity includes supply chain entities (aka Asserters).\n>\n>\n>\n> If the RATS charter were updated to allow definition of \u201cEndorsements\u201d it\n> might make sense to propose using JWT/CWT as a binding.\n>\n\nCould an endorsement be a form of attestation so the charter does not need\nto be updated?  If we wind up with lots of formats, it'll be impossible to\nmanage with code being used by an entity for which they each chose their\nown format. From the submitted flow draft that covers this scenario, I'm\nnot sure the terminology was clear enough on the point to separate those\nout and intentionally exclude endorsements.\n\n\n> The Architecture draft defines endorsements [here] as a specialization of\n> Claims. Claims in Evidence can be semantically linked to claims in\n> Endorsements. This is intentional so that verification is less susceptible\n> to semantic misdirection.\n>\n> [here]\n>\n>    - Endorsements are reference Claims about the environment protecting\n>    the Attesters capabilities to create believable Evidence (e.g. the type of\n>    protection for an attestation key).  It answers the question \"why Evidence\n>    is believable\".\n>\n>\n>\nThis was helpful, thank you.\nKathleen\n\n>\n>\n> If the EAT draft\u2019s use of entity is semantically equal to the architecture\n> draft use of \u201cattested computing environment\u201d then possibly it makes sense\n> for the EAT draft to begin using this term instead?\n>\n>\n>\n> The architecture draft potentially could be more clear as to whether an\n> \u201cAttested computing environment\u201d is both an entity and a principal or just\n> an entity. It seems clear that an \u201cattesting computing environment\u201d is a\n> Principal.\n>\n>\n>\n> Is EAT limited to 'attested computing environments' or a broader\n> definition of entity?\n>\n>\n>\n> Kathleen\n>\n>\n>\n>\n>\n> Ned\n>\n>\n>\n> On 10/4/19, 10:27 AM, \"Laurence Lundblade\" <notifications@github.com>\n> wrote:\n>\n>\n>\n> EAT and Architecture are absolutely NOT aligned on the term entity. See my\n> recent email comments on the architecture document.\n>\n> My basis for closure is that the architecture document will define some\n> term that is the is used to refer to the subject of the attestation. Maybe\n> we shouldn't close this until the architecture doc starts tracking issues\n> formally.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ietf-rats-wg/eat/issues/16?email_source=notifications&email_token=ABPMCSG6S47KPNKHPDRK3TDQM54ILA5CNFSM4ID7KXSKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAMLBKY#issuecomment-538489003>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABPMCSAPK5BFFBWNGO2SLZTQM54ILANCNFSM4ID7KXSA>\n> .\n>\n> _______________________________________________\n> RATS mailing list\n> RATS@ietf.org\n> https://www.ietf.org/mailman/listinfo/rats\n>\n>\n>\n>\n> --\n>\n>\n>\n> Best regards,\n>\n> Kathleen\n>\n\n\n-- \n\nBest regards,\nKathleen\n",
          "createdAt": "2019-10-04T20:02:35Z",
          "updatedAt": "2019-10-04T20:02:35Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "TL;DR yes, endorsements are a \"form of attestation\", but they are not attestation evidence. Endorsements are part of the attestation provisioning workflows.\r\n\r\n\r\nDuring the chartering, the proponents made their case for a complete inclusion of remote attestation procedures and the resulting consensus was to do phases via chartering. There was a split into the \"attestation evidence workflows\", which is currently chartered, and the \"attestation provisioning workflows\", which is not currently chartered.\r\n\r\nIn achieving this compromise, the proponents where also adamant about including both workflows in the architecture I-D from the very beginning (as an \"exception\" so to speak) and luckily this also reached consensus - otherwise the document would not really make sense.\r\n\r\nTo answer your question: yes, endorsements are a \"form of attestation\". Nevertheless they are not attestation evidence, but part of the attestation provisioning workflows. This is also the reason why the RATS terminology is rather complex. To simply \"attest to something\" or \"conduct attestation\" is semantically mixing two quite separate and distinct workflows.\r\n\r\nThe authors of the architecture I-D are very invested in unifying as much as they can in this first phase though. Currently, the architecture I-D defines Evidence, Endorsements & Reference Values to be composed of Claims. The context gives them different scope, audience and intent, e.g. Attestation Evidence in the form of an EAT. That means we are using assertions and claims basically as synonyms, which is a bit tricky because in the IETF a Claim is a specialization of assertion and a data model concept used in web tokens. In RATS and especially in the RATS EAT I-D, Claims MAY be key value pairs in JWT or CWT that can be registered in IANA registries, but Claims MAY also be assertions that are represented in other data models (most prominently attributes in pub-key/identity or attribute certificates and YANG modules).\r\n\r\n\"Winding up with lots of formats\": We surely want to prevent that, but we have to take into account what is used today globally.\r\n\r\n\"Terminology in the submitted flow draft that covers this scenario\": While draft-fedorkow-rats-network-device-attestation makes use of concepts such as IDevID, LDevID, IAK and LAK, it does not elaborate on Endorsements and EK, which is okay, because they are.. well, currently out-of-scope. I know (obviously) that draft-birkholz-rats-tuda does use endorsement documents and corresponding endorsement keys, but that work was started before the chartering of RATS.",
          "createdAt": "2019-10-04T21:44:49Z",
          "updatedAt": "2019-10-04T21:44:49Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@laurencelundblade, @henkbirkholz, @nedmsmith \r\n\r\nEntity does not seem to have been explicitly defined in the Architecture doc.  Can we keep the current entity description in https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat#section-1.3 as it stands?  If so, then we can potentially tag this issue as 'wontfix'.",
          "createdAt": "2021-08-24T04:11:19Z",
          "updatedAt": "2021-08-24T04:11:19Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Various other comments on this term. Have a plan to fix it with reference to RFC4949.",
          "createdAt": "2021-12-22T20:07:52Z",
          "updatedAt": "2021-12-22T20:07:52Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #148 ",
          "createdAt": "2022-01-05T21:19:41Z",
          "updatedAt": "2022-01-05T21:19:41Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "MDU6SXNzdWU0Njg1NzAyOTg=",
      "title": "SHOULD or MUST re: cryptographic verifiability",
      "url": "https://github.com/ietf-rats-wg/eat/issues/17",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Last Call blocking"
      ],
      "body": "This is possibly subsumed by issue 15. In section 1.2, why state \"the attestation should be cryptographically verifiable by the EAT consumer\"? Is the intent that some EAT consumers won't recognize the root of trust or that some EATs need not be cryptographically verifiable at all? If the former, maybe change from should to MUST and add qualifying words about root of trust for relying parties. ",
      "createdAt": "2019-07-16T10:17:55Z",
      "updatedAt": "2021-10-31T20:47:07Z",
      "closedAt": "2021-10-31T20:47:07Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Issue #23 seems to assert that claims are optional (except where Verifier policies make them mandatory). Issue #15 may have to do with how claims are packaged and attested (e.g. signed). It is possible for signing to take place at the data layer (aka via a signed manifest structure) or at a protocol layer (aka TLS). If the requirement for attestation is that claims MUST be signed. It seems there could be flexibility regarding what layer the signature is applied (protocol or data structure). It would not (likely) make sense to sign using the same key twice simply to satisfy normative that places the signing at the data structure layer.",
          "createdAt": "2019-07-22T19:10:02Z",
          "updatedAt": "2019-07-22T19:10:02Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Section 1.2 is intended as general introductory text to help the reader orient. \r\n\r\nMy proposed solution here is to remove the \"should\" and generally soften into more descriptive language. ",
          "createdAt": "2019-07-23T16:01:13Z",
          "updatedAt": "2019-07-23T16:01:13Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Have not seen a proposal on this issue.  In my opinion, the language \"should be cryptographically verifiable\" is also desirable as it can cover future use cases such as UCCS (unsigned EAT's).  Closing.",
          "createdAt": "2021-10-31T20:47:07Z",
          "updatedAt": "2021-10-31T20:47:07Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "MDU6SXNzdWU0NzA1MDgwMTU=",
      "title": "Consider adding verification procedures",
      "url": "https://github.com/ietf-rats-wg/eat/issues/18",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Guidance on verification procedures not covered in document.  It is touched upon in Sec. 1.3, but not to the level described in comparable specifications (see https://www.w3.org/TR/webauthn/#defined-attestation-formats).",
      "createdAt": "2019-07-19T19:39:58Z",
      "updatedAt": "2021-08-23T20:31:37Z",
      "closedAt": "2021-08-23T20:31:36Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The architecture draft should define the scope of verification semantics in terms of 'duties' and if it is appropriate for the Attester to be allowed to specify 'verification procedures' that the Verifier should follow. Verifiers are presumed to be authoritative entities regarding evaluation of evidence. It isn't clear if there is a goal to define interoperability between multiple verifier entities (something that isn't currently anticipated by the architecture IMO.)",
          "createdAt": "2019-07-22T19:02:17Z",
          "updatedAt": "2019-07-22T19:02:17Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "EAT inherits verification procedures from JWT and CWT so no need for it in the EAT document. \r\n\r\nWe could add some things over and above CWT and JWT, but I don't see anything obvious.\r\n\r\nStuff could also go in the architecture document or in individual profile documents.\r\n\r\n",
          "createdAt": "2019-07-23T15:49:28Z",
          "updatedAt": "2019-07-23T15:49:28Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@laurencelundblade @nedmsmith \r\n\r\nI had some motivations for raising this issue:\r\n\r\na) To improve readability of the document by grouping all verification guidance into one section.  This would apply even if we think the guidance can be limited to \"Use COSE verification procedures\" and/or \"the verifier can ignore claims that it has no interest in or cannot interpret\" (as crude examples).\r\n\r\nb) Since EAT is a CWT (or JWT - still to be confirmed by group), it inherits the claim set from CWT.  There are some claims in CWT whose relationship to EAT claims is not obvious and could be subject to varying interpretations.  Some examples:\r\n    i. aud claim.  If present, does the verifier have to have a relationship with the entity identified by 'aud'?    Should the token be rejected if the verifier does not recognize 'aud'?\r\n   ii. iat and age/uptime claims.  Should the verifier treat iat independently of age/uptime, or can the verifier cast them to a common timeline?  This may affect how the verifier assesses the claims in the context of security (e.g. stale location state with respect to when the token was created).\r\n\r\nWe don't need to be prescriptive, but we can provide general guidance in the processing of claims.\r\n\r\nc) Verification of nested EATs and aggregated EATs.  If different verifiers are employed for different EAT's in a nested or aggregated structure, how do the verifiers interoperate?  Note that this may be better handled in the architecture doc, but the -01 version of the document treats the verifier as a monolith.  I believe this is also the nature the comment by @nedmsmith above.",
          "createdAt": "2019-07-23T16:37:40Z",
          "updatedAt": "2019-07-23T16:37:40Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Saying this in a different way -- EAT inherits verification from CWT (and JWT). It would only not inherit if we explicitly said so. I don't think we should do that.\r\n\r\nNote that the verification text in CWT and JWT result in a valid map payload. It doesn't go into anything about the claims details at all.\r\n\r\nIt seems we have an overload on the word \"verify\" in that some of the larger RATS architecture docs use the term for checking that the claims have acceptable values. \r\nThis is different from the verification in CWT and JWT. \r\n\r\nSo net-net, I don't think the EAT draft should discuss either forms of verification.\r\n\r\nI think the issue of claims meaning being different in the EAT context is an issue and you should file a separate GitHub issue for it.\r\n\r\n",
          "createdAt": "2019-07-23T18:07:16Z",
          "updatedAt": "2019-07-23T18:07:16Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "+1 on a) and b)\r\n\r\nRegarding c) the TEEP WG observed yesterday that there can be multiple TEEs in a platform/device each having the ability to attest to something. That implies there will be different keys used to attest to claims (assertions) that are specific to the respective TEE. It was also observed that there will be a mix of vendor specific and vendor independent claims that could be asserted. I expect there will be vendor specific opaque values that only a vendor-specific verifier will be able to crack. All of the above needs to be conveyed by the attestation mechanisms. Verifiers will need to be able to navigate the complexity somehow.\r\n\r\nOn 7/23/19, 12:37 PM, \"gmandyam\" <notifications@github.com<mailto:notifications@github.com>> wrote:\r\n\r\n\r\n@laurencelundblade<https://github.com/laurencelundblade> @nedmsmith<https://github.com/nedmsmith>\r\n\r\nI had some motivations for raising this issue:\r\n\r\na) To improve readability of the document by grouping all verification guidance into one section. This would apply even if we think the guidance can be limited to \"Use COSE verification procedures\" and/or \"the verifier can ignore claims that it has no interest in or cannot interpret\" (as crude examples).\r\n\r\nb) Since EAT is a CWT (or JWT - still to be confirmed by group), it inherits the claim set from CWT. There are some claims in CWT whose relationship to EAT claims is not obvious and could be subject to varying interpretations. Some examples:\r\ni. aud claim. If present, does the verifier have to have a relationship with the entity identified by 'aud'? Should the token be rejected if the verifier does not recognize 'aud'?\r\nii. iat and age/uptime claims. Should the verifier treat iat independently of age/uptime, or can the verifier cast them to a common timeline? This may affect how the verifier assesses the claims in the context of security (e.g. stale location state with respect to when the token was created).\r\n\r\nWe don't need to be prescriptive, but we can provide general guidance in the processing of claims.\r\n\r\nc) Verification of nested EATs and aggregated EATs. If different verifiers are employed for different EAT's in a nested or aggregated structure, how do the verifiers interoperate? Note that this may be better handled in the architecture doc, but the -01 version of the document treats the verifier as a monolith. I believe this is also the nature the comment by @nedmsmith<https://github.com/nedmsmith> above.\r\n\r\n\u2014\r\nYou are receiving this because you were mentioned.\r\nReply to this email directly, view it on GitHub<https://github.com/ietf-rats-wg/eat/issues/18?email_source=notifications&email_token=ABPMCSFGOFUATI4ZWIRC5ZDQA4XVNA5CNFSM4IFLG3C2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2TWW5I#issuecomment-514288501>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABPMCSG3GPY76XZ3ZJFQR73QA4XVNANCNFSM4IFLG3CQ>.\r\n",
          "createdAt": "2019-07-24T14:14:03Z",
          "updatedAt": "2019-07-24T14:14:03Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Depending on the disposition of https://github.com/ietf-rats-wg/eat/issues/27, this issue may become moot.  If the operating models section is removed, then the role of verification doesn't need to be discussed anywhere else in the document.",
          "createdAt": "2019-08-08T00:39:06Z",
          "updatedAt": "2019-08-08T00:39:06Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Can be closed because CWT and JWT cover this. Any additional coverage will go in the architecture or other documents.",
          "createdAt": "2019-10-04T16:24:36Z",
          "updatedAt": "2019-10-04T16:24:36Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing it.",
          "createdAt": "2019-10-04T16:43:51Z",
          "updatedAt": "2019-10-04T16:43:51Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree that any residual verification procedures (i.e. those that are not already covered in RFC 8392 and RFC 7519) could go into an architecture doc.  The current architecture doc (-02 of https://datatracker.ietf.org/doc/draft-birkholz-rats-architecture/) does not have such a section yet, however.",
          "createdAt": "2019-10-04T16:52:03Z",
          "updatedAt": "2019-10-04T16:52:03Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing again. Not sure why it is still open.\r\n\r\nTo reiterate, the signature verification parts are covered by CWT and JWT. The evidence verification is covered by discussion of appraisal in the architecture document.\r\n",
          "createdAt": "2021-08-23T20:31:36Z",
          "updatedAt": "2021-08-23T20:31:36Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "MDU6SXNzdWU0NzA1Mjk4MTc=",
      "title": "Should ephemeral keys be allowed for signing EAT's?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/19",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "As per https://mailarchive.ietf.org/arch/msg/rats/d4GYkpwEMmh0VjD3Gmjd1h82Wpc -\r\n\r\n> \"The EAT is always signed by the attestation key material provisioned by the manufacturer.\"\r\n>This seems to prevent nested_eat use cases (e.g., cloud workloads with container/VM entities) where the outer EAT is signed with an \"ephemeral\" attestation key associated with the instance that is itself attested by the inner EAT signed with the AKM.  I suggest removing the sentence. ",
      "createdAt": "2019-07-19T20:29:19Z",
      "updatedAt": "2021-08-31T17:24:59Z",
      "closedAt": "2021-08-31T17:24:59Z",
      "comments": [
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "Given the growing range of use cases for EAT, the alternative to manufacturer provisioned keys may not just be ephemeral keys, but could be keys obtained via an enrollment operation into some service and securely stored e.g. for anonymization reasons or to reflect a set of claims relevant to some service interaction. Agree that the simplest solution here may be to just drop this sentence but consider also whether the rest of the para, starting \"In all operating models, the manufacturer provisions some secret attestation key material...\" needs revising. I like the idea of a separate security section which could discuss the trust alternatives for the signing key.",
          "createdAt": "2019-07-22T13:32:03Z",
          "updatedAt": "2019-07-22T13:32:03Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A stronger definition of what is meant by 'ephemeral' may be required. This relates to Issue 24.",
          "createdAt": "2019-07-22T18:52:32Z",
          "updatedAt": "2019-07-22T18:52:32Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Pretty sure the resolution here is to remove most of the operational and architectural model text so EAT is just claims definitions like CWT and JWT.\r\n\r\nDiscussion of key material can go in other documents or profiles.",
          "createdAt": "2019-10-01T13:46:05Z",
          "updatedAt": "2019-10-01T13:46:05Z"
        },
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "That would be an ideal resolution",
          "createdAt": "2019-10-01T15:34:08Z",
          "updatedAt": "2019-10-01T15:34:08Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This can be closed because this will go into the architecture document and profiles.",
          "createdAt": "2019-10-04T16:19:57Z",
          "updatedAt": "2019-10-04T16:19:57Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #129",
          "createdAt": "2021-08-31T17:24:59Z",
          "updatedAt": "2021-08-31T17:24:59Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "MDU6SXNzdWU0NzA3OTgxOTQ=",
      "title": "Typo issues with -01",
      "url": "https://github.com/ietf-rats-wg/eat/issues/20",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "They can be addressed in a -02 version.\r\n\r\nSec. 3:  Change \"\"It also mentions several claims defined by CWT and JWT are  particularly important for EAT.\" to 'that are particularly important'\r\n\r\nSec. 3:  Correct \"* All claims are optional * No claims are mandatory *.\"  Redundant.\r\n\r\nSec. 3.11:  \"Typically, one will be the device-wide EAT that is low to medium  security and another from a Secure Element or similar that is high security.\u201d  Consider changing \"Typically\" to \"For example\".\r\n\r\nSec. 3.11:  \"The contents of the \"eat\" claim must be a fully signed, ...\".  \"eat\" claim should be \"nested_eat\" claim. ",
      "createdAt": "2019-07-21T16:13:41Z",
      "updatedAt": "2019-07-22T17:52:37Z",
      "closedAt": "2019-07-22T17:52:36Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I fixed the last two and pushed to GitHub.\r\n\r\nI like the first two the way they are.\r\n",
          "createdAt": "2019-07-22T17:23:00Z",
          "updatedAt": "2019-07-22T17:23:00Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Update: fixe the first one now that I see the missing \"that\".\r\n\r\nHave created a separate issue for claim optionality: https://github.com/ietf-rats-wg/eat/issues/23\r\n",
          "createdAt": "2019-07-22T17:52:36Z",
          "updatedAt": "2019-07-22T17:52:36Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "MDU6SXNzdWU0NzA3OTgzODk=",
      "title": "RAND UEID's - minimum requirements to prevent clashes from different manufacturers",
      "url": "https://github.com/ietf-rats-wg/eat/issues/21",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Current text (-01) does not state assumptions on rand generation that would be necessary to minimize the probability of collisions from different manufacturers.  This could be added to the Security Considerations section.",
      "createdAt": "2019-07-21T16:15:51Z",
      "updatedAt": "2020-11-03T18:34:58Z",
      "closedAt": "2020-11-03T18:34:58Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "An attacker might purposefully reuse an existing EUID (random or not). The security of attestation should not depend on a convention for whether the generation algorithm includes entropy. Even if values are guessable, there should be an understanding by the Verifier for how to detect that the value is authentic / spoofed. The entity (vendor) creating the EUID is not motivated to issue duplicates. Whether they select a method based on entropy or assigned values should be a vendor specific choice (IMO).",
          "createdAt": "2019-07-22T18:42:48Z",
          "updatedAt": "2019-07-22T18:42:48Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith Addressing your comment from July 22, 2019. The relying party has to trust the UEID based on the fact that it was signed by the attester. They trust the attester because of endorsements. There's nothing more that can be done.\r\n\r\nThe vendor can choose the type they want, random, MAC address.... They can even switch from one day to the next.",
          "createdAt": "2020-02-29T16:57:18Z",
          "updatedAt": "2020-02-29T16:57:18Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe this is fixed with #35",
          "createdAt": "2020-02-29T16:57:31Z",
          "updatedAt": "2020-02-29T16:57:31Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "MDU6SXNzdWU0NzA4MDEwMTk=",
      "title": "Sec. 3.7.6 (-01):  Should debug disable states be an array or a choice option?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/22",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Sec. 2.2.2 of RFC 8610 allows for a choice expression based on a '/' delimiter between options.  In order to avoid expression of potentially conflicting debug disable states (e.g. debug full permanent disable being true while debug disabled since boot being false), this could be an alternative.",
      "createdAt": "2019-07-21T16:45:47Z",
      "updatedAt": "2020-11-03T18:34:28Z",
      "closedAt": "2020-11-03T18:34:28Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think I agree with this with the concept being that you claim the highest level of debug disable that is true for the device at the moment. That means selecting a higher level of debug disabling requires all the lower levels of debug disabling are true. \r\n",
          "createdAt": "2019-10-04T17:48:24Z",
          "updatedAt": "2019-10-04T17:48:24Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #36 ",
          "createdAt": "2020-03-19T18:09:02Z",
          "updatedAt": "2020-03-19T18:09:14Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "MDU6SXNzdWU0NzEyMjI1NjM=",
      "title": "Claims optionality and profiles",
      "url": "https://github.com/ietf-rats-wg/eat/issues/23",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Current text:\r\n* All claims are optional\r\n* No claims are mandatory\r\n* All claims that are not understood by implementations MUST be ignored\r\n\r\n\u2022Should profiles be allowed to override this?\r\n\u2022Should there be text that says they can?\r\n\u2022How does this relate to JWT/CWT optionality?",
      "createdAt": "2019-07-22T17:49:50Z",
      "updatedAt": "2021-08-08T06:46:39Z",
      "closedAt": "2021-08-08T06:46:39Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Verifier policies ultimately determine which claims matter and how to respond appropriately. Saying \"all claims are optional\" is different from saying \"all claims not understood by implementations MUST be ignored\". The latter potentially contradicts verifier policy that may NOT wish to process unknown claims as these may have obligatory requirements to protecting the confidentiality or integrity.\r\n\r\nDefinition of Verifier policies may be out of scope for RATS, though it should be anticipated that Verifiers have them.",
          "createdAt": "2019-07-22T18:49:12Z",
          "updatedAt": "2019-07-22T18:49:12Z"
        },
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "The intent of proposing the use of a referenced profile in draft-tschofenig-rats-psa-token is that it would be a description of the rules applied by the attesting implementation to the production of the EAT. A verifier would use this document to understand how to implement sufficient verification. The document would be normally be human readable rather than machine readable, though the latter case is not eliminated.\r\nThe profile will contain a full description of the standard claims and custom claims included, their usage (incl optionality), expected token signing, and any any verification specifics e.g. token structure such as submod usage.",
          "createdAt": "2019-07-23T09:51:57Z",
          "updatedAt": "2019-07-23T09:51:57Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "CWT text seems pretty good:\r\n>Specific applications of CWTs will require implementations to\r\n   understand and process some claims in particular ways.  However, in\r\n   the absence of such requirements, all claims that are not understood\r\n   by implementations MUST be ignored.",
          "createdAt": "2019-07-23T19:05:44Z",
          "updatedAt": "2019-07-23T19:05:44Z"
        },
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "I agree that the CWT text makes sense. \r\nIn trying to answer your queries posed in the initial Issue it seems to raise the question of whether there should be a mechanism for an implementation to declare the exact nature of its operation. What I probably should have added to my comment above is the suggestion that EAT should include a standard claim for 'profile' which would support such a mechanism. Previously that seemed supplementary to this specific issue but I'm not sure by what other form of submission you would like that proposal?\r\n",
          "createdAt": "2019-07-24T09:10:40Z",
          "updatedAt": "2019-07-24T09:10:40Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "We can close this because there is consensus that the CWT and JWT text for optionality is fine and because there is a separate issue for profiles, #32",
          "createdAt": "2019-10-04T16:18:39Z",
          "updatedAt": "2019-10-04T16:18:39Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "#121 is needed to address this. The CWT wording is short but critically addressed Ned's point above.",
          "createdAt": "2021-08-02T06:38:26Z",
          "updatedAt": "2021-08-02T06:38:26Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #121 ",
          "createdAt": "2021-08-08T06:46:39Z",
          "updatedAt": "2021-08-08T06:46:39Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWU0NzEyNDk0ODg=",
      "title": "Should there be key usage constraints for attestation?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/24",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It isn't clear whether an key used for attestation is restricted to signing evidence that is controlled by a trusted environment. The risk of not having constraints is the key may be subject to a confused deputy attack where claims are presented as opaque data that then receive a signature and a verifier presumes the attester made the claims. \r\n\r\nShould it be mandatory for EAT claims to reside within the security perimeter of a trusted environment such as a TEEP TEE / TEEP Agent?",
      "createdAt": "2019-07-22T18:33:52Z",
      "updatedAt": "2021-05-27T17:32:27Z",
      "closedAt": "2021-05-27T17:32:27Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we must allow EATs to be generated in any environment, even Android apps, Windows Apps and such. \r\n\r\nSigning key protection requirements are for user case policy documents, certification and such. Probably these should come from organizations like FIDO, GP and TCG, not IETF. \r\n\r\nSimilarly, whether the key is used to sign attestation and whether the all the things is signs are as authentic as expected is a policy thing. \r\n\r\nHowever, I DO think EAT should allow signing and labeling of claims from outside the main protection boundary. This is in the current draft as a \"submod\". Note that this is not pegging security to any absolute level, just indicating some claims have different security than others.\r\n\r\n",
          "createdAt": "2019-07-23T13:50:34Z",
          "updatedAt": "2019-07-23T13:50:34Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Where you thinking of defining a new key use type for attestation? That could be in PKIX and/or COSE and/or JSON Web Key.\r\n\r\nAlternatively it could be a security recommendation that attestation keys are only used for attestation.\r\n\r\nFIDO has this notion of separation. FIDO has some enforcement through its certification program. IETF has no such program, so the best IETF can do is text in the security considerations section.\r\n",
          "createdAt": "2019-10-11T17:02:03Z",
          "updatedAt": "2019-10-11T17:02:03Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Attestation might be big enough and important enough to add a key op type for it here in the key op type registry for JWS and COSE https://www.iana.org/assignments/jose/jose.xhtml#web-key-operations but I'm not convinced yet. Unless there is some expression for support for this, I'm going to close this issue.",
          "createdAt": "2021-05-20T22:49:24Z",
          "updatedAt": "2021-05-20T22:49:24Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this since there is no further concern expressed.",
          "createdAt": "2021-05-27T17:32:27Z",
          "updatedAt": "2021-05-27T17:32:27Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "MDU6SXNzdWU0NzgxOTUwNzc=",
      "title": "Boot state text corrections:  ver. -01",
      "url": "https://github.com/ietf-rats-wg/eat/issues/25",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Sec.'s 3.7.3, 3.7.4 and 3.7.5 start out with the term \"this claim\".  These are actually not claims as per the definition in Sec. 3.7, but boolean values included in the boot_state claim.    ",
      "createdAt": "2019-08-08T00:27:48Z",
      "updatedAt": "2020-11-03T18:25:50Z",
      "closedAt": "2020-11-03T18:25:50Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed. Wording should be fixed.",
          "createdAt": "2019-10-04T16:34:09Z",
          "updatedAt": "2019-10-04T16:34:09Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #36 ",
          "createdAt": "2020-02-29T16:48:43Z",
          "updatedAt": "2020-02-29T16:48:43Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "MDU6SXNzdWU0NzgxOTU1MDI=",
      "title": "The list of claims in 4.5 does not match the list in 4.4.1",
      "url": "https://github.com/ietf-rats-wg/eat/issues/26",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-08-08T00:29:46Z",
      "updatedAt": "2020-11-09T21:37:06Z",
      "closedAt": "2020-11-09T21:37:06Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, submods is missing.",
          "createdAt": "2019-10-04T16:42:47Z",
          "updatedAt": "2019-10-04T16:42:47Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This was fixed with the CDDL build stuff from Thomas",
          "createdAt": "2020-11-09T21:37:06Z",
          "updatedAt": "2020-11-09T21:37:06Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "MDU6SXNzdWU0NzgxOTcwMDU=",
      "title": "Remove Sec. 1.3 EAT Operating Models (ver. -01)",
      "url": "https://github.com/ietf-rats-wg/eat/issues/27",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Last Call blocking"
      ],
      "body": "2 reasons:\r\n\r\na) Neither RFC 8392 (CWT) nor RFC 7519 (JWT) have operational models.  Since EAT is derived from these specifications, it would be desirable to maintain consistency.\r\n\r\nb) This topic is better covered in an architecture specification. ",
      "createdAt": "2019-08-08T00:37:34Z",
      "updatedAt": "2021-08-31T17:24:37Z",
      "closedAt": "2021-08-31T17:24:37Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Can be closed because the plan is to move this to architecture",
          "createdAt": "2019-10-04T16:21:23Z",
          "updatedAt": "2019-10-04T16:21:23Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #129",
          "createdAt": "2021-08-31T17:24:37Z",
          "updatedAt": "2021-08-31T17:24:37Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "MDU6SXNzdWU1MDA5MTI0MzQ=",
      "title": "Add a claim definition for SW inventory",
      "url": "https://github.com/ietf-rats-wg/eat/issues/30",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "new claim"
      ],
      "body": "The claim would list SW on the entity. It would probably include name the name and version of each SW component.  This is probably a complicated claim to define.\r\n\r\nSee also issue #31 \r\n\r\nThis might include a signer ID like https://tools.ietf.org/html/draft-tschofenig-rats-psa-token-02 does",
      "createdAt": "2019-10-01T13:53:31Z",
      "updatedAt": "2021-05-28T18:29:37Z",
      "closedAt": "2021-05-28T18:29:37Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "There was good humming in favor of this in Singapore.\r\n\r\nThis seems like the obvious choice: https://tools.ietf.org/html/draft-ietf-sacm-coswid-13\r\n\r\nI'm planning to make a pull request",
          "createdAt": "2019-11-20T23:58:00Z",
          "updatedAt": "2019-11-20T23:58:00Z"
        },
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "I agree CoSWID does seem an obvious choice and would meet the needs of many scenarios. Beware though that on a constrained system CoSWID has considerable structural overhead, especially if the SW module being described is as a result of discovery e.g. a firmware module during measured boot where only minimal information is available to populate the claim. I'm aware there are some discussions underway which would reduce the 'considerable' description I used above but it will need to come down significantly to be workable for this purpose.",
          "createdAt": "2020-12-11T15:10:18Z",
          "updatedAt": "2020-12-11T15:11:42Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed with #102 ",
          "createdAt": "2021-05-28T18:29:37Z",
          "updatedAt": "2021-05-28T18:29:37Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "MDU6SXNzdWU1MDA5MTU2MDg=",
      "title": "Add a claim definition for SW measurement and/or integrity status",
      "url": "https://github.com/ietf-rats-wg/eat/issues/31",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "new claim"
      ],
      "body": "This claim would list measurements made on parts of the entity. Typically a measurement is a hash of some region. This may by SW component or it may be more of a run time integrity measuring memory images.\r\n\r\nFor TEE-based implementations, it is possible to evaluate the measurement on the device and only list the integrity status as a Boolean rather than a measurement. \r\n\r\nSee also issue #30 ",
      "createdAt": "2019-10-01T13:58:09Z",
      "updatedAt": "2021-05-28T18:31:20Z",
      "closedAt": "2021-05-28T18:31:20Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The claim should either be a measurement claim or a boolean claim corresponding to some sort of status being asserted. There shouldn't be an assumption that all TEEs work a certain way. The TEE status claim should be discussed separately from this claim IMO.",
          "createdAt": "2019-12-03T18:59:21Z",
          "updatedAt": "2019-12-03T18:59:21Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed with #102 ",
          "createdAt": "2021-05-28T18:31:20Z",
          "updatedAt": "2021-05-28T18:31:20Z"
        }
      ]
    },
    {
      "number": 32,
      "id": "MDU6SXNzdWU1MDA5NDg2MDk=",
      "title": "Add claim to name profile used by the token",
      "url": "https://github.com/ietf-rats-wg/eat/issues/32",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "new claim"
      ],
      "body": "Profiles are very concrete, use case specific, documents that say which claims are mandatory and which are optional and other.  For example there might be a profile for payments, one for automotive, one for a specific IoT industry and such. This claim would name the profile in use for this token, perhaps with a reference to its defining document. \r\n\r\nThis is used in https://tools.ietf.org/html/draft-tschofenig-rats-psa-token-02",
      "createdAt": "2019-10-01T14:47:57Z",
      "updatedAt": "2021-01-11T06:16:01Z",
      "closedAt": "2021-01-11T06:16:01Z",
      "comments": [
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "Some further background on the profiles document, from the discussions that lead to its inclusion in the PSA token doc.  The intent behind a profile document is that its a (human readable) description of the token. It would normally contain:\r\n - Details of the token signing\r\n- The list of expected standard EAT claims used\r\n- The list of any Custom claims used\r\n- The status of the claims (optional / mandatory / recommended)\r\n- A full description of the semantic usage of the claims.\r\n- Any information required to perform verification of claims.\r\n- Any expected structure (e.g. submods) that may need to be understood to interpret the token\r\n\r\nThere is a question on how profiles would be located if not just assumed to be informational to an existing RP/supplier relationship. One possibility might be to form a new IANA registry containing a mapping of profiles names (as used in this claim) to locations. Another might be for this claim structure to either be a text string identifying the document or a URL to the location.",
          "createdAt": "2019-10-03T08:57:22Z",
          "updatedAt": "2019-10-03T08:57:22Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Proposed #86 to address this.\r\n",
          "createdAt": "2020-12-09T04:59:54Z",
          "updatedAt": "2020-12-09T04:59:54Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "#86 addresses this",
          "createdAt": "2021-01-11T06:16:01Z",
          "updatedAt": "2021-01-11T06:16:01Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "MDU6SXNzdWU1MDA5NDk0Mjk=",
      "title": "HW Version claim",
      "url": "https://github.com/ietf-rats-wg/eat/issues/33",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "new claim"
      ],
      "body": "https://tools.ietf.org/html/draft-tschofenig-rats-psa-token-02 defines this in terms of EAN-13. This seems like a good thing to do.",
      "createdAt": "2019-10-01T14:49:16Z",
      "updatedAt": "2020-11-20T19:00:19Z",
      "closedAt": "2020-11-20T19:00:19Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed with #68 ",
          "createdAt": "2020-11-20T19:00:19Z",
          "updatedAt": "2020-11-20T19:00:19Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "MDU6SXNzdWU1MDA5NTEyODU=",
      "title": "Add boot seed claim",
      "url": "https://github.com/ietf-rats-wg/eat/issues/34",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "new claim"
      ],
      "body": "This is a random value that is generated each time the entity boots. \r\n\r\nhttps://tools.ietf.org/html/draft-tschofenig-rats-psa-token-02 defines this.",
      "createdAt": "2019-10-01T14:52:09Z",
      "updatedAt": "2021-05-25T06:17:40Z",
      "closedAt": "2021-05-25T06:17:40Z",
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It should be clearly documented that the seed value isn't a secret (if that is the case?). If so, then it would be more correct to call it a 'salt' rather than a 'seed'. A seed that seeds a PRNG or a key gen function is a secret since PRNGs have deterministic results given the same seed. ",
          "createdAt": "2019-12-03T19:03:07Z",
          "updatedAt": "2019-12-03T19:03:07Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Added in -06 draft. \r\n\r\nPrivate/public concern of Ned's is clearly addressed.\r\n\r\nA fix for the section number for it is coming in the -10 draft.\r\n",
          "createdAt": "2021-05-25T06:17:40Z",
          "updatedAt": "2021-05-25T06:17:40Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "MDU6SXNzdWU1MDc5NDMwODE=",
      "title": "Sort out cti, jti and nonce claims from CWT and JWT",
      "url": "https://github.com/ietf-rats-wg/eat/issues/37",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Which CWT / JWT field is really the nonce?",
      "createdAt": "2019-10-16T15:54:41Z",
      "updatedAt": "2020-11-03T18:26:28Z",
      "closedAt": "2020-11-03T18:26:28Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #42",
          "createdAt": "2020-02-29T17:02:39Z",
          "updatedAt": "2020-02-29T17:02:39Z"
        }
      ]
    },
    {
      "number": 38,
      "id": "MDU6SXNzdWU1MDc5NDQ0NzU=",
      "title": "OEM claim improvements",
      "url": "https://github.com/ietf-rats-wg/eat/issues/38",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "ready to close"
      ],
      "body": "Need references to IEEE OUI and to fill in details",
      "createdAt": "2019-10-16T15:57:03Z",
      "updatedAt": "2020-11-03T18:26:14Z",
      "closedAt": "2020-11-03T18:26:14Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #41 ",
          "createdAt": "2020-02-29T16:59:07Z",
          "updatedAt": "2020-02-29T16:59:07Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "MDU6SXNzdWU1MDc5NDQ5NDc=",
      "title": "Origination claim needs refinement",
      "url": "https://github.com/ietf-rats-wg/eat/issues/39",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-10-16T15:57:49Z",
      "updatedAt": "2021-05-29T20:36:49Z",
      "closedAt": "2021-05-29T20:36:49Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Removed claim in #87",
          "createdAt": "2021-05-29T20:36:49Z",
          "updatedAt": "2021-05-29T20:36:49Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "MDU6SXNzdWU1MDc5NDU1MTg=",
      "title": "Add examples of submod and nested EAT tokens",
      "url": "https://github.com/ietf-rats-wg/eat/issues/40",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Last Call blocking"
      ],
      "body": "",
      "createdAt": "2019-10-16T15:58:50Z",
      "updatedAt": "2021-10-20T20:14:41Z",
      "closedAt": "2021-10-20T20:14:41Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "#132 ",
          "createdAt": "2021-10-09T19:11:37Z",
          "updatedAt": "2021-10-09T19:11:37Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #132, though it wouldn't hurt to have a little more, maybe doubly nested.",
          "createdAt": "2021-10-20T20:14:40Z",
          "updatedAt": "2021-10-20T20:14:40Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "MDU6SXNzdWU1MTYxNzgzMTU=",
      "title": "Claims that go from verifier to relying party",
      "url": "https://github.com/ietf-rats-wg/eat/issues/44",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "EAT is used to convey claims from the entity / device to the verifier, but it can also be used to convey the output of the verifier to the relying party.\r\n\r\nFor example, the input to the verifier may be software measurements. The output of the verifier might be a Boolean that the measurements were correct. \r\n\r\nAlso, some implicit claims might be made explicit. For example, if the verifier knows that the device will never send an attestation is the boot and debug state are not locked down, then the verifier can add those claims.",
      "createdAt": "2019-11-01T15:20:55Z",
      "updatedAt": "2020-11-20T19:40:19Z",
      "closedAt": "2020-11-20T19:40:19Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Supplanted by #63",
          "createdAt": "2020-11-20T19:40:18Z",
          "updatedAt": "2020-11-20T19:40:18Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "MDU6SXNzdWU1MjY5NDYxMjM=",
      "title": "Align oemid and UEID with IDevID?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/45",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RIV uses IDevID which has a manufacturer and serial number. If this goes into attestation result then maybe it should be expressible in EAT.\r\n",
      "createdAt": "2019-11-22T02:15:32Z",
      "updatedAt": "2021-06-03T21:41:40Z",
      "closedAt": "2021-06-03T21:41:40Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #101",
          "createdAt": "2021-06-03T21:41:40Z",
          "updatedAt": "2021-06-03T21:41:40Z"
        }
      ]
    },
    {
      "number": 46,
      "id": "MDU6SXNzdWU1MjcyODIzMDc=",
      "title": "(Signed) CoSWID, (Signed) ISO SWID & SUIT Manifest Claims",
      "url": "https://github.com/ietf-rats-wg/eat/issues/46",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-11-22T16:06:16Z",
      "updatedAt": "2021-05-28T18:29:00Z",
      "closedAt": "2021-05-28T18:29:00Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Proposal:\r\n\r\nWrite-up for Claim Definitions for inclusion in drat-ietf-rats-eat (OR separate EAT flavor I-D as on option to expedite wglc/adoption process):\r\n\r\nAt minimum, nine additional CWT/EAT Claims MUST be defined.\r\n\r\n1. Unsigned CoSWID Evidence Claim (including corresponding Security Consideration)\r\n2. Signed CoSWID Evidence Claim including corresponding COSE guidance and Security Consideration)\r\n3. Unsigned CoSWID Payload Claim (including at minimum corresponding Security Consideration)\r\n4. Signed CoSWID Payload Claim (including at minimum corresponding COSE guidance and Security Consideration)\r\n5. Unsigned ISO SWID Evidence Claim (including at minimum corresponding Security Consideration)\r\n6. Signed ISO SWID Evidence Claim (including at minimum corresponding NIST SR 8060 guidance and Security Consideration)\r\n7. Unsigned ISO SWID Payload Claim (including at minimum corresponding Security Consideration)\r\n8. Signed ISO SWID Evidence Claim (including at minimum corresponding NIST SR 8060 guidance and Security Consideration), ad\r\n9. SUIT Manifest Claim (potentially signed and including corresponding Security Consideration)\r\n\r\nDave Waltermire and Henk Birkholz discussed this proposal with respect to:\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/sacm/qrliM4reggLvDu0ft9ianypYFLM\r\nand\r\nhttps://mailarchive.ietf.org/arch/msg/rats/HKUTLMy843rcnhdjnLvnLx9NUuE\r\nrespectively.\r\n\r\nThe proposal includes the notion to avoid blocking or delaying changes to CBOR tag & content-type definitions of corresponding I-D via additions to the EAT Claim Definition set. Therefore expediting related I-D progress and assuring interoperability between SUIT, SACM & RATS at the same time.",
          "createdAt": "2019-11-22T16:30:46Z",
          "updatedAt": "2019-11-22T16:30:46Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "What is the difference between \"Evidence\" claims and \"Payload\" claims?",
          "createdAt": "2019-11-22T22:37:00Z",
          "updatedAt": "2019-11-22T22:37:00Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Both term in the context of *SWID are defined here:\r\n\r\nhttps://tools.ietf.org/html/draft-ietf-sacm-coswid-13#section-2.3\r\n\r\nthere is an corresponding answer with more details in the rats email list here:\r\n\r\nhttps://mailarchive.ietf.org/arch/msg/rats/kn_fOc0qofTvyKlUvod1BSgpO3o",
          "createdAt": "2019-11-24T15:55:23Z",
          "updatedAt": "2019-11-24T15:55:23Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "#102",
          "createdAt": "2021-03-30T16:24:45Z",
          "updatedAt": "2021-03-30T16:24:45Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed with #102 ",
          "createdAt": "2021-05-28T18:29:00Z",
          "updatedAt": "2021-05-28T18:29:00Z"
        }
      ]
    },
    {
      "number": 49,
      "id": "MDU6SXNzdWU1NjM5ODU4Njg=",
      "title": "Disallow floating point time stamps in EAT?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/49",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The nbf, exp and iat claims in CWT are allowed to be floating point. EAT inherits from them.\r\n\r\nFloating point is not universally supported by CPUs, particularly small ones for IoT. Even if the CPU supports it, the compiler and OS might not (I\u2019ve seen this happen once).\r\n\r\nI don\u2019t think fractional seconds are of any value for these claims, so we are forcing EAT decoders to support this for no good reason. I\u2019m not sure why CWT allowed floating point for these claims other than just inheriting from the CBOR epoch time format.\r\n\r\nIt is possible to use SW to decode a float and turn it into an integral value, but that is not fun to write and seems a waste.\r\n\r\nI\u2019d like to specify in EAT that floating point is not allowed for these claims.\r\n\r\n(Separately, we do need floating point for GPS location, but that claim will be used much less frequently and it is a good reason for using floating point).",
      "createdAt": "2020-02-12T13:02:55Z",
      "updatedAt": "2020-11-23T22:24:36Z",
      "closedAt": "2020-11-23T22:24:36Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Resolved by #61",
          "createdAt": "2020-11-23T22:24:36Z",
          "updatedAt": "2020-11-23T22:24:36Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "MDU6SXNzdWU1NjQ2NTUwNjY=",
      "title": "Are latitude and longitude optional in location claim?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/50",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clearly most part of the location claim are optional. For example you don't have to specify speed.  Should latitude and longitude also be optional? Can you just specify altitude if you want to?\r\n",
      "createdAt": "2020-02-13T12:37:39Z",
      "updatedAt": "2020-11-30T19:30:22Z",
      "closedAt": "2020-11-30T19:30:22Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "No. They should not. They are not optional for CBOR tag 103, nor for the W3C Geolocation API.",
          "createdAt": "2020-11-30T19:30:22Z",
          "updatedAt": "2020-11-30T19:30:22Z"
        }
      ]
    },
    {
      "number": 51,
      "id": "MDU6SXNzdWU1NjQ2NjY5Mzk=",
      "title": "Should issuer, subject and audience claims allow URI tag?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/51",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RFC8392 doesn't say whether the URI tag #6.32 should or should not be used on the issuer, subject and audience claims. Without it the decoder would use a URI syntax matcher to decide between it being text or a URI.",
      "createdAt": "2020-02-13T13:00:19Z",
      "updatedAt": "2021-05-27T17:25:26Z",
      "closedAt": "2021-05-27T17:25:26Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #107 ",
          "createdAt": "2021-05-27T17:25:26Z",
          "updatedAt": "2021-05-27T17:25:26Z"
        }
      ]
    },
    {
      "number": 53,
      "id": "MDU6SXNzdWU1NjQ2OTk0NzU=",
      "title": "Sort out CWT and COSE tag usage",
      "url": "https://github.com/ietf-rats-wg/eat/issues/53",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "When should the CWT and COSE tags be used with an EAT?",
      "createdAt": "2020-02-13T13:56:06Z",
      "updatedAt": "2020-11-27T18:42:27Z",
      "closedAt": "2020-11-27T18:42:27Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #67 ",
          "createdAt": "2020-11-27T18:42:27Z",
          "updatedAt": "2020-11-27T18:42:27Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "MDU6SXNzdWU1NjY4OTk3Mzc=",
      "title": "Accommodate \"GP unendorsed\" tokens",
      "url": "https://github.com/ietf-rats-wg/eat/issues/54",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Consider making an EAT a \"CWT Claims Set\" as defined in CWT (and JWT) to accommodate GP's desired for unsigned tokens.",
      "createdAt": "2020-02-18T13:39:54Z",
      "updatedAt": "2020-11-27T18:42:08Z",
      "closedAt": "2020-11-27T18:42:08Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #67 and the eventual publication of Henk's UCCS draft.",
          "createdAt": "2020-11-27T18:42:08Z",
          "updatedAt": "2020-11-27T18:42:08Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "MDU6SXNzdWU1NzIyNzg2NjE=",
      "title": "Clarify on seclevel/security-level in example",
      "url": "https://github.com/ietf-rats-wg/eat/issues/55",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Re:  https://tools.ietf.org/html/draft-ietf-rats-eat-03#appendix-A.2\r\n\r\n'seclevel' is showing up in the example.  Two issues:\r\n\r\na) seclevel is actually security-level in the current doc.\r\n\r\nb) For a submod is not providing attestation info in the form of an (endorsed) EAT, is there any value in providing security-level?  If it is there, what entity is performing the security level assessment?",
      "createdAt": "2020-02-27T18:42:27Z",
      "updatedAt": "2020-03-28T21:10:04Z",
      "closedAt": "2020-03-28T21:10:04Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed a). \r\n\r\nb) is the same as #58",
          "createdAt": "2020-03-19T18:19:40Z",
          "updatedAt": "2020-03-19T18:19:40Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Close and will track via https://github.com/ietf-rats-wg/eat/issues/58",
          "createdAt": "2020-03-28T21:10:03Z",
          "updatedAt": "2020-03-28T21:10:03Z"
        }
      ]
    },
    {
      "number": 57,
      "id": "MDU6SXNzdWU1NzQ5NDEwMDI=",
      "title": "Consider 'context' claim",
      "url": "https://github.com/ietf-rats-wg/eat/issues/57",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://tools.ietf.org/html/draft-mandyam-rats-qwestoken-00#section-3.3\r\n\r\nAn optional context claim can provide information on intended usage to the recipient of the attestation token.",
      "createdAt": "2020-03-03T21:01:32Z",
      "updatedAt": "2020-11-30T19:46:17Z",
      "closedAt": "2020-11-30T19:46:17Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged #60 and closed.",
          "createdAt": "2020-11-30T19:46:17Z",
          "updatedAt": "2020-11-30T19:46:17Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "MDU6SXNzdWU1ODM5NTk3MzI=",
      "title": "Who assigns the security level of a submodule?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/58",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "",
      "createdAt": "2020-03-18T19:39:58Z",
      "updatedAt": "2022-08-11T19:06:50Z",
      "closedAt": "2022-08-11T19:06:50Z",
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "My assumption that only the creator of the EAT that includes the nested structure can ultimately in charge of assigning a \"security-level\" (I am not super happy with that concept to begin with). There can be claims about the... claimed \"security level\" inside the nested structure itself, of course. But only trust relationships / trust decisions of the EAT creator that embeds these nested structures can provide a basis to convey a notion of trustworthiness here, I think. Thoughts? ",
          "createdAt": "2020-11-11T11:03:36Z",
          "updatedAt": "2020-11-11T11:03:36Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "security level is removed.",
          "createdAt": "2022-08-11T19:06:50Z",
          "updatedAt": "2022-08-11T19:06:50Z"
        }
      ]
    },
    {
      "number": 63,
      "id": "MDU6SXNzdWU2NDM4Nzg3ODE=",
      "title": "EAT document should say it can be used for Attestation Results",
      "url": "https://github.com/ietf-rats-wg/eat/issues/63",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/ietf-rats-wg/architecture/issues/92 topic 3 has some points about EAT.\r\n\r\nTopic 3: EAT. If accurate, I'd like to see a clear acknowledgement that the Verifier may need to act as an Attester for the Relying Party since I'd like to then see specifically how the IETF EAT specification covers this circumstance. In other words, for an EAT that represents an AttestationResult, would the Evidence for the Verifier be embedded or discovered? If embedded, how are submods distinguished for the Verifier's Evidence versus the AttestationResult's embedded claims, including nested EAT's?",
      "createdAt": "2020-06-23T14:15:00Z",
      "updatedAt": "2021-05-20T18:20:59Z",
      "closedAt": "2021-05-20T18:20:58Z",
      "comments": [
        {
          "author": "gkostal",
          "authorAssociation": "NONE",
          "body": "@mcr , thanks for opening this issue in EAT based on a portion of an issue I opened against the architecture document.  \r\n\r\nI would title this issue ***\"EAT guidance on how to share the information used to establish trust of Verifier by a Relying Party?\"***\r\n\r\nUsing the nomenclature of the IETF RATS Architecture document, I believe the following is true:\r\n1. EAT defines the claims used as \"Evidence\" or \"Attestation Results\" in the [RATS architecture diagram](https://www.ietf.org/id/draft-ietf-rats-architecture-04.html#name-architectural-overview)\r\n1. The \"Verifier\" in the RATS architecture can be a separate entity from the Relying Party.  Hence, it's necessary that the Verifier be able to provide information to the Relying Party to establish this trust.  The [Trust Model](https://www.ietf.org/id/draft-ietf-rats-architecture-04.html#name-trust-model) section in the RATS Architecture document discusses this requirement.\r\n1. This information may take the form of \"Evidence\" describing the Verifier's execution environment, which is distinct from the \"Evidence\" it analyzes to produce a specific \"Attestation Result\".\r\n\r\nMany (most? all?) \"Verifiers\" will need to share this trust establishing information with Relying Parties.  A Relying Party may work with more than one \"Verifier\".  Is it in scope for EAT to give some guidance on how a Verifier shares this information?  If not EAT, is it (or should it be) in scope for any other standardization process?  Left unaddressed, each Verifier will implement an ad-hoc mechanism, leaving Relying Parties unable to trust EAT tokens without first writing vendor specific logic for each Verifier they work with.\r\n",
          "createdAt": "2020-06-26T16:15:50Z",
          "updatedAt": "2020-06-26T16:15:50Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I strongly recommend not to mix conceptual messages here. While composite evidence can include attestation results and vice versa, I think that actually makes it even more important to differentiate theses very clearly and consistently. Yes, we need a corresponding definition of Claims for CWT and (CWT Claims Sets maybe) in order to create unified Attestation Results. Alas, if we start to mix many different meanings under the \"catch-all\" concept that is EAT, it will become harder and harder to figure out what an EAT instance is actually intended to represent and facilitate. Trust in understanding the meaning of an EAT is quite vital to RATS.",
          "createdAt": "2020-11-11T10:56:54Z",
          "updatedAt": "2020-11-11T10:56:54Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Very many EAT claims will be passed through the Verifier to the RP. After all the original EAT design didn't distinguish the Verifier from the RP. It would be silly and confusing to redefine each claim for Results when they are already defined for Evidence.\r\n\r\nThere will of course be some claims that don't belong in evidence and vice versa. Maybe some claims will have slightly different semantics as Results than as Evidence, but I can't think of anything obvious so far.\r\n\r\nWe could use Giri's context claim (see #60) to distinguish results from evidence. We'd add a new value to indicate the EAT is Attestation Results. That or we have a new, perhaps mandatory claim, that says whether the EAT (CWT, JWT or UCCS) is Evidence or Results.\r\n",
          "createdAt": "2020-11-20T19:23:35Z",
          "updatedAt": "2020-11-20T19:23:35Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This supplants #44",
          "createdAt": "2020-11-20T19:39:57Z",
          "updatedAt": "2020-11-20T19:39:57Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Proposal to address this in #103 ",
          "createdAt": "2021-03-30T17:12:56Z",
          "updatedAt": "2021-03-30T17:12:56Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #103 ",
          "createdAt": "2021-05-20T18:20:58Z",
          "updatedAt": "2021-05-20T18:20:58Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "MDU6SXNzdWU2NDQ3ODY3OTQ=",
      "title": "looking for example of EAT with PCR quote",
      "url": "https://github.com/ietf-rats-wg/eat/issues/64",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It would be good to have a clear example on how to carry a TPM-2 style PCR Quote in as an example of evidence carried by EAT.\r\n",
      "createdAt": "2020-06-24T17:31:11Z",
      "updatedAt": "2021-08-21T19:16:41Z",
      "closedAt": "2021-08-21T19:16:41Z",
      "comments": [
        {
          "author": "tomoveu",
          "authorAssociation": "NONE",
          "body": "Indeed @mcr . Thank you for rising this issue. Would be great to have an example how a TPM2 Quote fits with EAT or RATS in general. Open-source code that we can see and test.",
          "createdAt": "2020-07-01T17:33:00Z",
          "updatedAt": "2020-07-01T17:33:00Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Hi Dimi, \r\nwith respect to running code, at the moment we decompose TPM structures in https://github.com/Fraunhofer-SIT/charra\r\n\r\nThe corresponding CBOR items are currently composed according to the following CDDL spec:\r\n\r\nhttps://ietf-rats.github.io/draft-birkholz-rats-reference-interaction-model/draft-birkholz-rats-reference-interaction-model.html#section-appendix.a\r\n\r\nThe arrays used include label notation for the human reader. These can be used 1:1 as Claim definitions for EAT today (via a nested Claims Set) called tpm2-quote-request and tpm2-quote response, for example.\r\n\r\nIf there is demand for that, it would be relatively straight forward for us to add corresponding CDDL in the EAT style that  to the I-D. Everything needed is already defined in that section.\r\n\r\n",
          "createdAt": "2020-07-01T17:43:15Z",
          "updatedAt": "2020-07-01T17:43:15Z"
        },
        {
          "author": "tomoveu",
          "authorAssociation": "NONE",
          "body": "Thank you, Henk!\r\n\r\nHere is the recording of your explanation on the TPMdev call - [https://developers.tpm.dev/posts/7112151](https://developers.tpm.dev/posts/7112151) Made things very clear.\r\n\r\nThe link to the document(Appendix A) also helped a lot. What exactly do you think can go in Appendix B as a format regarding TPM2 Quote & EAT?\r\n\r\nps: I tried tagging you on the post in the forum, but it seems you do not have an account there or maybe you use a nickname and I could not recognize you",
          "createdAt": "2020-07-01T22:28:27Z",
          "updatedAt": "2020-07-01T22:30:26Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "https://mailarchive.ietf.org/arch/msg/rats/q4yiqt7I6qkk49bwwrkul2u6mFg/",
          "createdAt": "2021-08-21T19:16:41Z",
          "updatedAt": "2021-08-21T19:16:41Z"
        }
      ]
    },
    {
      "number": 65,
      "id": "MDU6SXNzdWU3MjQ5NTUxNjg=",
      "title": "nested token submods should be byte-string wrapped",
      "url": "https://github.com/ietf-rats-wg/eat/issues/65",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Right now, the second type of submod, the embedding of a full signed EAT token inside surrounding token is \"direct\".\r\n\r\nI think it needs to be wrapped in a byte string to make it reasonable to implement. When decoding the surrounding token, the nested token will be returned as a byte string that can be easily passed to the COSE/CWT/EAT decoder as these will typically take a byte string as input. \r\n\r\nIf it is not a byte string, then you have to convince the CBOR decoder to return the CWT Tag as a byte string even though it is not a byte string or the same or related instance of the CBOR decoder used to decode the outside EAT must be used to decode the inside EAT.\r\n\r\nNo semantics would change. This is only for a practical consideration of the APIs used for decoding CBOR, COSE, CWT and EAT.",
      "createdAt": "2020-10-19T20:34:05Z",
      "updatedAt": "2020-11-27T18:43:41Z",
      "closedAt": "2020-11-27T18:43:41Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #67 ",
          "createdAt": "2020-11-27T18:43:41Z",
          "updatedAt": "2020-11-27T18:43:41Z"
        }
      ]
    },
    {
      "number": 74,
      "id": "MDU6SXNzdWU3NDMwNzExMzE=",
      "title": "Extensibility of claims' semantics",
      "url": "https://github.com/ietf-rats-wg/eat/issues/74",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "If I wanted to expand the semantics of \"Debug Disable\" or \"Security Level\" with my own local semantics, how would I do that?\r\n\r\nShould I create a new claim?  Or could I extend the claim\u2019s type?  If the latter, how? \r\n\r\nIt\u2019d be useful that the doc explicitly stated the rules of this game.\r\n",
      "createdAt": "2020-11-14T20:10:56Z",
      "updatedAt": "2020-11-25T18:26:45Z",
      "closedAt": "2020-11-25T18:26:45Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@laurencelundblade  [comment on the mailing list](https://mailarchive.ietf.org/arch/msg/rats/DVCR2E_Dozx0JhHz9Pd5w3RdADU/) :\r\n\r\n\r\nI don\u2019t think these should be extensible. You can\u2019t make up\r\nyour own corporate bond rating category or restaurant hygene\r\nrating category and such. If that is allowed the scheme becomes\r\nmuch less useful. \r\n\r\nI\u2019ve added text for that in this PR #73  . It says that when you can\u2019t live\r\nwith the defined security level schema, omit the claim, make up\r\nyour own claim or do both.\r\n\r\nAlso, see this old but unresolved discussion #4 on security level.\r\nOne thing nice about a very simple three-level scheme is that it\r\nbecomes clear this is a very rough top-level characterization only.\r\n```",
          "createdAt": "2020-11-14T20:18:08Z",
          "updatedAt": "2020-11-14T20:20:34Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed with #82 and #73 ",
          "createdAt": "2020-11-25T18:26:45Z",
          "updatedAt": "2020-11-25T18:26:45Z"
        }
      ]
    },
    {
      "number": 75,
      "id": "MDU6SXNzdWU3NDMwNzExOTk=",
      "title": "Nonce missing from JSON labels",
      "url": "https://github.com/ietf-rats-wg/eat/issues/75",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "There\u2019s a typo in Section 4.3.1: the \u201cnonce\u201d label is missing.\r\n",
      "createdAt": "2020-11-14T20:11:15Z",
      "updatedAt": "2020-11-20T19:37:27Z",
      "closedAt": "2020-11-20T19:37:27Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@laurencelundblade [comment on the mailing list](https://mailarchive.ietf.org/arch/msg/rats/DVCR2E_Dozx0JhHz9Pd5w3RdADU/):\r\n\r\nThe JWT nonce was already in the IANA registry for JWT. I added CDDL for it and note that some of the CDDL in EAT is for things defined elsewhere before there was CDDL.  See this PR #72 .",
          "createdAt": "2020-11-14T20:22:09Z",
          "updatedAt": "2020-11-14T20:22:09Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed with merge of #72 ",
          "createdAt": "2020-11-20T19:37:27Z",
          "updatedAt": "2020-11-20T19:37:27Z"
        }
      ]
    },
    {
      "number": 76,
      "id": "MDU6SXNzdWU3NDMwNzEzOTY=",
      "title": "JSON:CBOR equivalency",
      "url": "https://github.com/ietf-rats-wg/eat/issues/76",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The JSON story is nearly OK, except for two things:\r\n* the Submods claim where the JSON:CBOR equivalency is broken by allowing unbounded\r\nint keys in CBOR that can't have an equivalent in JSON;\r\n* the StringOrURI type whose semantics can\u2019t be preserved when transcoding.\r\n\r\n(Possibly the former could be addressed by only allowing string labels, the latter by declaring we only deal with strings.)\r\n",
      "createdAt": "2020-11-14T20:12:28Z",
      "updatedAt": "2020-11-20T19:03:26Z",
      "closedAt": "2020-11-20T19:03:26Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@laurencelundblade [comment on the mailing list](https://mailarchive.ietf.org/arch/msg/rats/DVCR2E_Dozx0JhHz9Pd5w3RdADU/):\r\n\r\nPushed a fix for StringOrURI to master.\r\n\r\nMade submodule names string only as part of this PR #67 . Was thinking that they should only be strings myself. \r\n",
          "createdAt": "2020-11-14T20:23:45Z",
          "updatedAt": "2020-11-14T20:23:45Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Also this fix: https://github.com/ietf-rats-wg/eat/commit/c39f92f49675a27aa67ed3ba65143cbfc002c38f",
          "createdAt": "2020-11-20T19:03:26Z",
          "updatedAt": "2020-11-20T19:03:26Z"
        }
      ]
    },
    {
      "number": 77,
      "id": "MDU6SXNzdWU3NDMwNzE0Njk=",
      "title": "CWT CDDL needs some adjusting",
      "url": "https://github.com/ietf-rats-wg/eat/issues/77",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The CDDL for CWT claims needs some adjusting: it\u2019d allow only one CWT claim at a time in the EAT map.\r\n\r\nScaling up a bit, we should probably have a CDDL socket for EAT extensions in the top-level map - and exercise this extension point starting from CWT claims.",
      "createdAt": "2020-11-14T20:12:55Z",
      "updatedAt": "2020-11-18T19:49:50Z",
      "closedAt": "2020-11-18T19:49:50Z",
      "comments": []
    },
    {
      "number": 78,
      "id": "MDU6SXNzdWU3NDMwNzE1Mzg=",
      "title": "Add normative language to the CBOR interop section",
      "url": "https://github.com/ietf-rats-wg/eat/issues/78",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The CBOR interoperability section should have RFC2119/8174 language where needed.  Please also double check that there are no copy-pasted requirements from other documents without an explicit ref -- e.g., the stray \"Duplicate map keys are not allowed.\" should have a ref to 7049.\r\n",
      "createdAt": "2020-11-14T20:13:19Z",
      "updatedAt": "2021-01-16T20:42:55Z",
      "closedAt": "2021-01-16T20:42:55Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #88 ",
          "createdAt": "2021-01-16T20:42:55Z",
          "updatedAt": "2021-01-16T20:42:55Z"
        }
      ]
    },
    {
      "number": 79,
      "id": "MDU6SXNzdWU3NDMwNzE2MjU=",
      "title": "Debug Disable naming considerations",
      "url": "https://github.com/ietf-rats-wg/eat/issues/79",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Here are a couple of typographic thoughts about Debug Disable claim.\r\n\r\nThe \"disable\" in \"Debug disable\" looks redundant: it'd be better renaming it as just \"Debug\" or \"Debug status\u201d.\r\n\r\nA bit more consistent wording wouldn\u2019t hurt too. e.g.:\r\n* \"Not disabled\" => \u201cenabled\u201d -- this, combined with the above suggestion, would move us from \"debug disable not disabled\" to a simpler to digest \"debug enabled\" :-)\r\n* \"Permanent disable\" => \"disabled permanently\"\r\n* \"Full permanent disable\" => \"disabled fully and permanently\"\r\n\r\n",
      "createdAt": "2020-11-14T20:13:47Z",
      "updatedAt": "2020-11-25T18:26:01Z",
      "closedAt": "2020-11-25T18:26:00Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed with #82 ",
          "createdAt": "2020-11-25T18:26:00Z",
          "updatedAt": "2020-11-25T18:26:00Z"
        }
      ]
    },
    {
      "number": 83,
      "id": "MDU6SXNzdWU3NTEwODM2MzQ=",
      "title": "location claim doesn't fully specify heading and speed",
      "url": "https://github.com/ietf-rats-wg/eat/issues/83",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "WGS84 seems only to cover latitude and longitude\r\n",
      "createdAt": "2020-11-25T19:58:27Z",
      "updatedAt": "2020-11-30T20:46:50Z",
      "closedAt": "2020-11-30T20:46:49Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Current text states \"The location coordinate claims are consistent with the WGS84 coordinate system\", which is in line with comparable standards such as https://www.w3.org/TR/geolocation-API/#coordinates_interface.  This does not mean that WGS84 defines exactly how implementations derive speed or altitude (WGS84 actually defines both geodetic and orthometric height).\r\n\r\nNote also that different implementations may leverage WGS84 coordinates, but allow for runtime configuration for how altitude calculation is performed.  See https://docs.microsoft.com/en-us/uwp/api/windows.devices.geolocation.altitudereferencesystem?view=winrt-19041 as an example.\r\n\r\nI would recommend that the EAT spec not be overly prescriptive in defining how derived values such as altitude and speed are actually calculated.",
          "createdAt": "2020-11-25T21:34:10Z",
          "updatedAt": "2020-11-25T21:34:10Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Corrected the title to say heading and speed, not altitude and speed, are the problem. There is no specification for heading and speed and no specification at all is a problem.\r\n\r\nI think this should just use tag 103 which seems to be a good simple WGS84-based specification of lat, long, altitude and accuracy. \r\n\r\nHeading and speed aren't really location. They should be in a different claim called \"travel\" or such.\r\n\r\nHeading and speed were included because Qualcomm's location API included them. They can still be included in a token, but as part of different claim.\r\n",
          "createdAt": "2020-11-27T20:22:00Z",
          "updatedAt": "2020-11-27T20:22:00Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">Heading and speed were included because Qualcomm's location API included them. They can still be included in a token, but as part of different claim\r\n\r\nActually that was not my intention when I wrote this section - these attributes were included to maintain compatibility with W3C geoloc API coordinates I/F (https://www.w3.org/TR/geolocation-API/#coordinates_interface), which dates back to 2008.  Maintaining compatibility with this interface has the additional benefit of allowing browsers to leverage existing geoloc. API permissions framework to suppress all geoloc-related information in the attestation if so required by the end user - see https://www.w3.org/TR/webauthn/#browser-permissions-framework-extensions for a description of a comparable example, the location extension in WebAuthn API.  \r\n\r\nNote also that the W3C Geoloc API has been defined at a level of abstraction beyond platform-specific location enablers (for better or worse).  If we go back to 2008, this meant that the positions I/F was meant to be compatible with BREW IPosdet (maybe this is what you were referring to as the \"Qualcomm location API\"?) and JSR 179.   The compatibility is still maintained with more recent enablers such as Android Location Manager.  So keeping compatibility with the W3C coordinates I/F should allow for maximum leverage across platforms.\r\n\r\nI would not recommend bifurcating this claim.",
          "createdAt": "2020-11-28T19:27:45Z",
          "updatedAt": "2020-11-28T19:27:45Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "OK. Fixed this up with #85 \r\nThanks for the W3C reference.\r\nI will merge this in a day or two as it seems straight forward and we are aligned.\r\n\r\nAlso, I started to implement tag 103, but have come to not like it because it allows *any number* format including things like decimal fractions. There is no need for anything but double and single precision float numbers here. Anything else just causes interoperability problems.",
          "createdAt": "2020-11-30T19:42:22Z",
          "updatedAt": "2020-11-30T19:42:22Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #85",
          "createdAt": "2020-11-30T20:46:49Z",
          "updatedAt": "2020-11-30T20:46:49Z"
        }
      ]
    },
    {
      "number": 91,
      "id": "MDU6SXNzdWU4MDc1NzEwNDI=",
      "title": "Modify wording for location claim",
      "url": "https://github.com/ietf-rats-wg/eat/issues/91",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As per sec. 3.13 of ver. 8:\r\n\r\nFrom Santeri Paavolainen:\r\n\r\n\"If the device is stationary, the heading is NaN (floating-point not-a-number).\"\r\n\r\nBut heading -- for some devices -- may be accurately determined even when the device is stationary. For example, a directional radio mast (permanent or adjustable orientation) is (at least hopefully) very stationary, but it includes an accurate directional indication.\r\n\r\nI would suggest writing this as\r\n\r\n\"If the device's heading can not be accurately determined, the heading is NaN (floating-point not-a-number).\"\r\n\r\nI would also point out that many devices may have an initial accurate heading, but it may drift over time if they are stationary even if they can be accurately positioned. For example, a gyrocompass without an orientation reset will lose its accuracy over time (i.e. it will drift, but the drift may be not consistent so in reality its the error that increases). Is there a consideration to include orientation accuracy in a way similar to positional accuracy?\r\n",
      "createdAt": "2021-02-12T21:53:53Z",
      "updatedAt": "2021-06-07T22:38:43Z",
      "closedAt": "2021-06-07T22:38:43Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Need to check in on what WGS84 says about this. Consistency with it is critical. Note also that the references to WGS84 are broken, even the Wikipedia ones.",
          "createdAt": "2021-05-20T22:39:19Z",
          "updatedAt": "2021-05-20T22:39:19Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Still haven't figured out where WGS84 is these days, but W3C definitely agrees with the text in the document NOT with the proposed wording. I would like to leave it as is unless some explanation is given for why this should diverge from W3C.\r\n",
          "createdAt": "2021-05-24T04:53:59Z",
          "updatedAt": "2021-05-24T04:54:10Z"
        }
      ]
    },
    {
      "number": 92,
      "id": "MDU6SXNzdWU4MTE3MTQzNTg=",
      "title": "sec level and debug state values should be strings in JSON",
      "url": "https://github.com/ietf-rats-wg/eat/issues/92",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "They should not be 1, 2, 3, but \"enabled\", \"restricted\" and such for the sake of human readability.",
      "createdAt": "2021-02-19T05:45:35Z",
      "updatedAt": "2021-05-27T17:31:30Z",
      "closedAt": "2021-05-27T17:31:30Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #106 ",
          "createdAt": "2021-05-27T17:31:29Z",
          "updatedAt": "2021-05-27T17:31:29Z"
        }
      ]
    },
    {
      "number": 94,
      "id": "MDU6SXNzdWU4MjAzMDIxODY=",
      "title": "json string names for age and timestamp in location",
      "url": "https://github.com/ietf-rats-wg/eat/issues/94",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "string names are not correct for JSON for parts of location",
      "createdAt": "2021-03-02T19:07:47Z",
      "updatedAt": "2021-05-27T17:31:11Z",
      "closedAt": "2021-05-27T17:31:11Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Actually seems like it is all of the location claim that is lacking string labels.\r\n\r\nThis is fixed in #106",
          "createdAt": "2021-05-25T19:08:21Z",
          "updatedAt": "2021-05-25T19:08:21Z"
        }
      ]
    },
    {
      "number": 95,
      "id": "MDU6SXNzdWU4MjIxOTE4OTU=",
      "title": "duplicate text in profile description",
      "url": "https://github.com/ietf-rats-wg/eat/issues/95",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "```suggestion\r\n```\r\nthese two lines are duplicates of L973-974\r\n\r\n_Originally posted by @thomas-fossati in https://github.com/ietf-rats-wg/eat/pull/93#discussion_r584310735_",
      "createdAt": "2021-03-04T14:36:38Z",
      "updatedAt": "2021-03-05T01:01:02Z",
      "closedAt": "2021-03-05T01:01:02Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by editing the .md file.  Did not edit PR since it was already merged.",
          "createdAt": "2021-03-05T01:01:02Z",
          "updatedAt": "2021-03-05T01:01:02Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "MDU6SXNzdWU4MjIxOTMzMTg=",
      "title": "profile OIDs (and URIs) should be \"absolute\"",
      "url": "https://github.com/ietf-rats-wg/eat/issues/96",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "```suggestion\r\nA profile is identified by either an absolute URI {{!RFC3896}} or\r\nan absolute OID (ASN.1 Type \"OBJECT IDENTIFIER\").\r\n```\r\n\r\n_Originally posted by @thomas-fossati in https://github.com/ietf-rats-wg/eat/pull/93#discussion_r584311652_",
      "createdAt": "2021-03-04T14:38:09Z",
      "updatedAt": "2021-03-26T17:07:29Z",
      "closedAt": "2021-03-26T17:07:29Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There are two reasons for this:\r\n1. a philosophical one: we want the profile claim to not clash;\r\n2. a technical one: by unwrapping the CBOR tag (i.e., `~oid`) the decoder looses the ability to distinguish between \"absolute\" OIDs and relative OIDs.  So, we need to explicitly say which type is legal.  Given point 1. above it's the absolute form that should be preferred.",
          "createdAt": "2021-03-04T14:42:38Z",
          "updatedAt": "2021-03-04T14:42:38Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Given point 1. above it's the absolute form that should be preferred.\r\n\r\nNote that this is not ideal since it removes the ability to express PENs in a succinct manner.\r\n",
          "createdAt": "2021-03-04T16:06:22Z",
          "updatedAt": "2021-03-04T16:06:22Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think I prefer the absolute for simplicity and because it doesn't save that much.\r\n\r\nConsider the PEN 50000.2 that might be used to indicate a profile. PEN assignments are up over 50,000 now. \r\n\r\nAs an absolute OID this is 1.3.6.1.4.1.50000.2 and encodes in 11 bytes.\r\n\r\nIf we allow use of the relative PEN, then by not unwrapping then we get 3 bytes for the tag and 6 bytes for the RDN for a total of 9. We're saving 2 bytes for PENs.  But this adds 3 bytes for absolute OIDs.\r\n\r\nIt is always possible to go between a PEN and an absolute OID because the PEN prefix is well known. Are there any use cases where we need relative OIDs where the prefix is not well known? Maybe there is some OID prefix for the whole token from some context outside the token? Probably not I think. That would also be taking EAT further down the ASN.1 path where I hope not to go.\r\n",
          "createdAt": "2021-03-04T17:32:03Z",
          "updatedAt": "2021-03-04T17:32:03Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> If we allow use of the relative PEN, then by not unwrapping then we get 3 bytes for the tag and 6 bytes for the RDN for a total of 9. We're saving 2 bytes for PENs. But this adds 3 bytes for absolute OIDs.\r\n\r\nI think it's two bytes for the tag not three, but that doesn't change the substance of your (very reasonable) conclusion.\r\n\r\n> Are there any use cases where we need relative OIDs where the prefix is not well known? Maybe there is some OID prefix for the whole token from some context outside the token? Probably not I think.\r\n\r\nI don't think so too.  Let's go with absolute then :-)\r\n\r\n",
          "createdAt": "2021-03-04T18:56:15Z",
          "updatedAt": "2021-03-04T18:56:15Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in https://github.com/ietf-rats-wg/eat/commit/41685066d17a580679e7bdb038d1a30042966920",
          "createdAt": "2021-03-26T17:07:29Z",
          "updatedAt": "2021-03-26T17:07:29Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "MDU6SXNzdWU4MjI2MzY2NDE=",
      "title": "Sec. 1.3:  revise language on root-of-trust",
      "url": "https://github.com/ietf-rats-wg/eat/issues/97",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\"It is assumed that any entity that can create an   EAT does so by means of a dedicated root-of-trust (RoT).\"\r\n\r\nRecommend removing this sentence all-together.  There are examples of attestations that are created in user space (e.g. Android SafetyNet).",
      "createdAt": "2021-03-05T00:49:37Z",
      "updatedAt": "2021-05-20T22:13:04Z",
      "closedAt": "2021-05-20T22:13:04Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed for draft -10.",
          "createdAt": "2021-05-20T22:13:04Z",
          "updatedAt": "2021-05-20T22:13:04Z"
        }
      ]
    },
    {
      "number": 98,
      "id": "MDU6SXNzdWU4MjI2Mzk3ODM=",
      "title": "Can UEID change during lifecycle of entity?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/98",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Sec. 3.4:  \"The UEID should be permanent.\"\r\n\r\nFIDO IoT Device Onboard spec uses GUID for UEID (https://fidoalliance.org/specs/FDO/FIDO-Device-Onboard-RD-v1.0-20201202.html#guid, https://fidoalliance.org/specs/FDO/FIDO-Device-Onboard-RD-v1.0-20201202.html#DevAttnProt).  However, the UEID is only permanent with respect to the lifecycle state of the entity.\r\n\r\nCurrent text is a 'should' requirement, so in one possible reading of the EAT doc the FIDO spec is compliant.  However, a clarification may be in order.\r\n\r\nSuggested additional text:  \r\n\r\n\"In some attestation situations, exposure of the permanent UEID creates an undesirable correlation between subsequent attestations.  In such situations, a temporary UEID of type RAND can be used so long as the EAT recipient can derive the generator of the EAT without the permanent UEID, such as by external mapping to the temporary UEID, or by using a signature with cryptographic indistinguishability.  The same device / entity should use a permanent UEID when such correlation is not an issue.\"\r\n\r\n",
      "createdAt": "2021-03-05T00:57:20Z",
      "updatedAt": "2021-06-03T21:41:18Z",
      "closedAt": "2021-06-03T21:41:18Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "What about a UEID and an SUEID, where the UEID is permanent and SUEID is semi-permanent? An EAT can have both, one, or the other. The RP use which ever one they want when there are both.\r\n\r\nSemi-permanent generally means that the UEID may change when a device changes owners, managers, is factory reset or such. To know exactly when it is reset consult the profile document.\r\n\r\nAnother privacy solution is to authenticate the RP and generate an RP-specific UEID. That is what Haven Token did.\r\n\r\nOthers may have other problems with the UEID permanence and maybe other solutions are possible for those other problems.\r\n",
          "createdAt": "2021-03-08T17:55:38Z",
          "updatedAt": "2021-03-08T17:55:38Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Coxed by #101",
          "createdAt": "2021-06-03T21:41:17Z",
          "updatedAt": "2021-06-03T21:41:17Z"
        }
      ]
    },
    {
      "number": 100,
      "id": "MDU6SXNzdWU4MzIyMjI4MjY=",
      "title": "Use normative language in profile expectations?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/100",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Last Call blocking"
      ],
      "body": "All the things in the profile are described as \"should\" right now.\r\n\r\nIf we are going to start using \"must\" then we are describing a formal protocol for creating profile documents to the degree that some profiles comply with EAT and some don't. That seems like an overreach and a tall order.\r\n\r\nMy leaning is to leave it as \"should\", but we can have a larger discussion about more formalism here. Maybe do this by filing a separate issue for it.\r\n\r\n_Originally posted by @laurencelundblade in https://github.com/ietf-rats-wg/eat/pull/99#discussion_r594585117_",
      "createdAt": "2021-03-15T21:53:22Z",
      "updatedAt": "2021-10-31T20:08:57Z",
      "closedAt": "2021-10-31T20:08:57Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing issue as there has been no proposals, much less discussion on whether there should be any normative requirements for profile documents.  Moreover, as per Sec. 5.18 of https://datatracker.ietf.org/doc/draft-ietf-rats-eat/:\r\n\r\n\"There is no requirement that the named document be publicly accessible.  The primary purpose of the profile claim is to uniquely identify the profile even if it is a private profile.\"\r\n\r\nIt will be difficult to enforce normative requirements on a private profile.\r\n\r\nIn addition, in Sec.7:\r\n\r\n\"This EAT specification does not guarantee that implementations of it will interoperate. \"",
          "createdAt": "2021-10-31T20:08:57Z",
          "updatedAt": "2021-10-31T20:08:57Z"
        }
      ]
    },
    {
      "number": 108,
      "id": "MDU6SXNzdWU5MDU4Njg3MDM=",
      "title": "Add a claim that describes measurement results",
      "url": "https://github.com/ietf-rats-wg/eat/issues/108",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In some scenarios, it is desirable that only the positive or negative result of a measurement, possibly only a Boolean value, is reported in a token. This is in contrast to reporting the measurements (e.g., the hashes) themselves.\r\n\r\nOne scenarios is when a TEE or similar is able to conduct a full measurement and evaluation of that measurement on some other part of the system.\r\n\r\nAnother is when a Verifier checks the measurement against reference values and only reports the result to the Relying Party.",
      "createdAt": "2021-05-28T18:35:36Z",
      "updatedAt": "2021-07-15T05:21:28Z",
      "closedAt": "2021-07-15T05:21:27Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Would the following (CDDL) work?\r\n\r\nmeasurement-type = {\r\n   ? check => boolean, / Set true if measurement met criteria for pass\r\n   ? hash => bstr(32..64) / Variable-length hash; must be minimum of 256\r\n   }\r\n\r\nmeasurement = {\r\n     value => measurement-type\r\n    }  / Array of measurements\r\n\r\nThis way each measurement value can provide a check, hash, both, or neither (e.g. if the measurement wasn't carried out for some reason).",
          "createdAt": "2021-06-07T22:48:14Z",
          "updatedAt": "2021-06-07T22:48:14Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think there should be digest claim that can be used for evidence claims (and for attestation results too). Coswid defines hash-entry which is a tuple consisting of a digest value and a hash algorithm. \r\n\r\nFor firmware measurements (anything that doesn't have a filesystem) coswid is problematic because measurements have to be given a filesystem context. Given there is a submods context already, it doesn't make sense to require a filesystem context that requires some sort of mapping to a device context. E.g. submod-name has to match file-name or whatever.\r\n\r\nBuilding hash-entry into an array of hash-entry has value for algorithm agility. A device can produce multiple digests of the same object with different algorithms. The overhead is small in CDDL. Device vendors don't have to implement algorithm agility, but it is good for those who do.\r\n\r\nIf the 'digests' type is a stand-alone claim then it can be combined with other claims (such as boolean result) or can stand-alone as a digest of attestation results. \r\n\r\nIf there were a measurement-name claim then it would be easier to associate the name of the object with the digest of the object. submod-name could be used - it would be helpful if it was a bstr / tstr instead of just tstr so its easier to assign numeric names. \r\n\r\n",
          "createdAt": "2021-06-08T00:38:08Z",
          "updatedAt": "2021-06-08T00:38:08Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "After a side discussion with Henk, folks from Arm and other, I took the approach of pluggable evidence formats. EAT doesn't have one format for evidence, it has a place where it can carry evidence formats defined by others.\r\n\r\nHenk and the Arm folks are working on CoRIM and CoMID as an alternative to CoSWID. It's for the reason you mention -- CoSWID is file oriented.\r\n\r\nI concluded that CoSWID is here to stay and must be accommodated, but that it isn't sufficient, so I took the pluggable approach. \r\n\r\nI don't think there's a draft for CoMID / CoRIM yet. Try here: https://github.com/ietf-rats/draft-birkholz-rats-corim/blob/master/draft-birkholz-rats-corim.md.  I don't have an opinion of whether this is good, or meets your needs or such. Maybe you want to define your own format instead. If so, it can plug into EAT. :-)\r\n\r\nAll that said, the point of this open issue is not about carrying hash values. It is about reporting to the RP whether the measurements compared correctly to the reference values. Perhaps just a simple Boolean, but probably more.\r\n\r\n\r\n\r\n",
          "createdAt": "2021-06-08T18:21:24Z",
          "updatedAt": "2021-06-08T18:21:24Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #112 ",
          "createdAt": "2021-07-15T05:21:27Z",
          "updatedAt": "2021-07-15T05:21:27Z"
        }
      ]
    },
    {
      "number": 110,
      "id": "MDU6SXNzdWU5MTk4Njc4Mzg=",
      "title": "Add a recommendation that claim value should not be interdependent",
      "url": "https://github.com/ietf-rats-wg/eat/issues/110",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "It is probably better that every claim value stand on its own as much as possible. Claims should be designed this way. If some attribute or information about an entity needs several data items to describe it, it should be all in one claim rather than in several. This is to reduce interdependence between claims.\r\n\r\nI'm not completely sure that is necessary, but it seems like a good idea.",
      "createdAt": "2021-06-13T19:41:04Z",
      "updatedAt": "2022-10-01T23:40:23Z",
      "closedAt": "2022-10-01T23:40:23Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't know whether this can work as general guidance.  Take for instance something like an app dependency declared in an Android manifest (i.e. intent).  If the attestable entity in question is that Android application, it would have to enumerate _all_ the attestable data from other entities (e.g. other Android applications) on which it has a dependency.  \r\n\r\nOn another note, I am not convinced that the current CoSWID spec (https://datatracker.ietf.org/doc/html/draft-ietf-sacm-coswid-16.txt) covers the notion of something like Android intents (or predecessors such as BREW extensions).  If I am correct in my interpretation, then this is a spec deficiency that should be fixed.",
          "createdAt": "2021-06-13T20:38:08Z",
          "updatedAt": "2021-06-13T20:38:08Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't want a prohibition against interdependency. It could occur if needed.\r\n\r\nHere's an example of what I'd like to discourage -- one claim says what the format/type of another claim is. Instead, build the type/format determination into the claim like is done for the swevidence and manifests claim. It's pretty simple stuff.\r\n\r\nI understand why a manifest for downloading SW needs to list needed dependencies and extensions, but I'm not sure that is necessary for attestation. That said, this is not a battle I'm going to go fight (have too much other work). I am mostly assuming the designers of CoSWID, CoMID and CoRIM know what they are doing.\r\n\r\n",
          "createdAt": "2021-06-16T00:56:09Z",
          "updatedAt": "2021-06-16T00:56:09Z"
        }
      ]
    },
    {
      "number": 111,
      "id": "MDU6SXNzdWU5MjQzMTgwMzA=",
      "title": "svn claim",
      "url": "https://github.com/ietf-rats-wg/eat/issues/111",
      "state": "CLOSED",
      "author": "nedmsmith",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "https://cwe.mitre.org/data/definitions/1328.html provides context for svn (security version number). There are many systems that use it. It would be helpful if EAT could include a claim for svn.\r\n\r\nSomething like:\r\n\r\nsvn-type = int\r\nsvn-claim = ( svn => svn-type)\r\n\r\nI can help contribute text if needed.\r\n",
      "createdAt": "2021-06-17T20:41:29Z",
      "updatedAt": "2022-08-16T02:25:47Z",
      "closedAt": "2022-08-16T02:25:47Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "If I understand, the claim would report the value of the (hopefully) immutable rollback counter that the HW is storing. This could also be thought of as the minimum firmware version. The counter / version for the firmware that is installed is reported separately from this. In most cases they will be the same. In some cases the installed firmware version may be ahead. If the installed firmware version is behind, then something very bad has happened.\r\n\r\nSo, yes, this seems like a good thing to add. Thank you.\r\n\r\nWould be better to call it \"minfw\" (minimum firmware version), or \"firmware rollback counter\"? \r\n\r\nI reused the CoSWID version scheme classification for HW version numbers. See the -10 draft. It seems like that would be the thing to do here. Just clone the hw-version claim and call it \"minfw\"?\r\n\r\nI expect the version of the installed firmware to be reported as part of the swevidence claim, most likely in a CoRIM/CoMID (CoSWIDs don't seem very good for firmware since they are file path oriented).\r\n",
          "createdAt": "2021-06-18T20:00:57Z",
          "updatedAt": "2021-06-18T20:00:57Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think this blocks last call unless Ned or someone else wants this.",
          "createdAt": "2021-08-23T18:23:15Z",
          "updatedAt": "2021-08-23T18:23:15Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith - do you feel this is LC blocking?  If not, we can deprioritize this issue.",
          "createdAt": "2021-08-24T04:02:41Z",
          "updatedAt": "2021-08-24T04:02:41Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing because we have lots to do and there's no ground swell of support.\r\n\r\nIt doesn't seem like a bad idea, but is not critical or central to EAT. It can be added as an independent registration or a separate standard.",
          "createdAt": "2022-08-16T02:25:47Z",
          "updatedAt": "2022-08-16T02:25:47Z"
        }
      ]
    },
    {
      "number": 115,
      "id": "MDU6SXNzdWU5NDQ5NzMwNjU=",
      "title": "WGS84 reference link is bad",
      "url": "https://github.com/ietf-rats-wg/eat/issues/115",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "WGS84 changed...  Lots of standards are affected.",
      "createdAt": "2021-07-15T03:55:43Z",
      "updatedAt": "2021-07-15T05:00:57Z",
      "closedAt": "2021-07-15T05:00:56Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed",
          "createdAt": "2021-07-15T05:00:56Z",
          "updatedAt": "2021-07-15T05:00:56Z"
        }
      ]
    },
    {
      "number": 117,
      "id": "MDU6SXNzdWU5NDUwMTE2MDM=",
      "title": "Submodule type that is a hash of the detached submodule token",
      "url": "https://github.com/ietf-rats-wg/eat/issues/117",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Last Call blocking"
      ],
      "body": "The submodule is not a nested token or a sub set of claims, but is a hash of some claims.\r\n\r\nThis is useful for a HW block that takes as input some hashed data that can be used to cover a whole submodule.\r\n\r\nThis may also need some way of carrying detached submodules.",
      "createdAt": "2021-07-15T05:25:02Z",
      "updatedAt": "2021-10-07T19:56:58Z",
      "closedAt": "2021-10-07T19:56:58Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "See #123 ",
          "createdAt": "2021-08-09T20:06:23Z",
          "updatedAt": "2021-08-09T20:06:23Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #123 ",
          "createdAt": "2021-10-07T19:56:58Z",
          "updatedAt": "2021-10-07T19:56:58Z"
        }
      ]
    },
    {
      "number": 118,
      "id": "MDU6SXNzdWU5NDUwMTY0NTc=",
      "title": "Review Android Attestation for possible claims ",
      "url": "https://github.com/ietf-rats-wg/eat/issues/118",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "It would be nice for standard EAT to be able to represent most of Android attestation.\r\n\r\nA starting point for the review: https://source.android.com/security/keystore/attestation",
      "createdAt": "2021-07-15T05:35:35Z",
      "updatedAt": "2021-10-20T20:13:29Z",
      "closedAt": "2021-10-20T20:13:29Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Did the review and created an example in the examples appendix.",
          "createdAt": "2021-10-20T20:13:29Z",
          "updatedAt": "2021-10-20T20:13:29Z"
        }
      ]
    },
    {
      "number": 119,
      "id": "MDU6SXNzdWU5NTIxOTYyNDc=",
      "title": "Some rework to use RATS architecture draft terminology",
      "url": "https://github.com/ietf-rats-wg/eat/issues/119",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Last Call blocking"
      ],
      "body": "The earlier sections pre-date RATS architecture. They include some architecture of their own and use different terminology. They should be re worked to be based on RATS architecture and its terminology.\r\n\r\n",
      "createdAt": "2021-07-25T04:48:55Z",
      "updatedAt": "2021-08-31T17:24:21Z",
      "closedAt": "2021-08-31T17:24:21Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #129",
          "createdAt": "2021-08-31T17:24:20Z",
          "updatedAt": "2021-08-31T17:24:20Z"
        }
      ]
    },
    {
      "number": 120,
      "id": "MDU6SXNzdWU5NTMzMTg0NTg=",
      "title": "Early assignment for chip-version-scheme",
      "url": "https://github.com/ietf-rats-wg/eat/issues/120",
      "state": "CLOSED",
      "author": "dthaler",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "TEEP needs early assignment for the chip-version-scheme claim but it's not listed in section 7.3.1\r\n",
      "createdAt": "2021-07-26T21:55:41Z",
      "updatedAt": "2021-10-30T19:30:59Z",
      "closedAt": "2021-10-30T19:30:59Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Is the request for IANA assignment of hw-version?  If so, I believe this is covered under https://github.com/ietf-rats-wg/eat/issues/131 and this issue can be closed as it is already being tracked separately.",
          "createdAt": "2021-10-30T19:08:17Z",
          "updatedAt": "2021-10-30T19:08:17Z"
        },
        {
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Closing since the draft now has TBD26",
          "createdAt": "2021-10-30T19:30:59Z",
          "updatedAt": "2021-10-30T19:30:59Z"
        }
      ]
    },
    {
      "number": 122,
      "id": "MDU6SXNzdWU5NjQyNDY1OTU=",
      "title": "Register a device URN for UEID",
      "url": "https://github.com/ietf-rats-wg/eat/issues/122",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-08-09T18:15:12Z",
      "updatedAt": "2021-08-23T18:20:26Z",
      "closedAt": "2021-08-23T18:20:26Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #125 ",
          "createdAt": "2021-08-23T18:20:26Z",
          "updatedAt": "2021-08-23T18:20:26Z"
        }
      ]
    },
    {
      "number": 130,
      "id": "MDU6SXNzdWU5ODc5MTg2MDM=",
      "title": "CDDL for UCCS -- interdependence with UCCS draft",
      "url": "https://github.com/ietf-rats-wg/eat/issues/130",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/ietf-rats-wg/draft-ietf-rats-uccs/issues/4 which proposes that cwt-claims-set get defined in the UCCS draft and that EAT reference it for CBOR-based claims.\r\n\r\nThis doesn't quite solve the problem for CDDL for JSON based claims. Maybe UCCS should define that too?",
      "createdAt": "2021-09-03T16:06:36Z",
      "updatedAt": "2021-10-07T19:56:22Z",
      "closedAt": "2021-10-07T19:56:22Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #123 ",
          "createdAt": "2021-10-07T19:56:22Z",
          "updatedAt": "2021-10-07T19:56:22Z"
        }
      ]
    },
    {
      "number": 131,
      "id": "I_kwDOCEWCXc48R0Pn",
      "title": "Fill in list for IANA of all to-be-registered claims",
      "url": "https://github.com/ietf-rats-wg/eat/issues/131",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-29T18:14:31Z",
      "updatedAt": "2022-02-17T19:30:06Z",
      "closedAt": "2022-02-17T19:30:05Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed with #152 ",
          "createdAt": "2022-02-17T19:30:05Z",
          "updatedAt": "2022-02-17T19:30:05Z"
        }
      ]
    },
    {
      "number": 135,
      "id": "I_kwDOCEWCXc49ySqY",
      "title": "Say that submodules relate to target environments",
      "url": "https://github.com/ietf-rats-wg/eat/issues/135",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Need to think it through, but it seems that RATs architecture Target Environments correspond to submodules in EAT and that this could be mentioned in the document.",
      "createdAt": "2021-10-26T18:05:26Z",
      "updatedAt": "2022-07-02T22:42:23Z",
      "closedAt": "2022-07-02T22:42:23Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This was fixed some time ago (don't recall which PR).",
          "createdAt": "2022-07-02T22:42:23Z",
          "updatedAt": "2022-07-02T22:42:23Z"
        }
      ]
    },
    {
      "number": 136,
      "id": "I_kwDOCEWCXc492Rvc",
      "title": "Add claims for non-nonce freshness",
      "url": "https://github.com/ietf-rats-wg/eat/issues/136",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RATS architecture and other documents describe architecture for freshness that doesn't use a nonce. EAT should support them.",
      "createdAt": "2021-10-27T16:46:23Z",
      "updatedAt": "2021-10-31T21:31:13Z",
      "closedAt": "2021-10-31T21:31:13Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "With reference to https://datatracker.ietf.org/doc/html/draft-ietf-rats-architecture#section-10, there are two non-nonce approaches to freshness:  timestamp and epoch ID.\r\n\r\nEAT builds upon CWT.  Timestamp can be addresses by the iat claim (https://datatracker.ietf.org/doc/html/rfc8392#section-3.1.6).  Epoch ID can be addressed by the cwt id (https://datatracker.ietf.org/doc/html/rfc8392#section-3.1.7) .  In that regards, EAT supports three forms of replay protection.\r\n\r\nRecommend closing this issue, and perhaps filing an issue on the architecture document.  It is strange that the architecture document is using language such as timestamp and Epoch ID in place of conventional terminology related to claims used for replay protection in RFC 8392 and 7519.",
          "createdAt": "2021-10-30T19:00:20Z",
          "updatedAt": "2021-10-31T21:31:08Z"
        }
      ]
    },
    {
      "number": 138,
      "id": "I_kwDOCEWCXc4-bmKi",
      "title": "Meet TEEP requirements for non-TEEP/SUIT specific claims",
      "url": "https://github.com/ietf-rats-wg/eat/issues/138",
      "state": "CLOSED",
      "author": "dthaler",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "https://datatracker.ietf.org/doc/html/draft-ietf-teep-architecture#section-7 and \r\nhttps://datatracker.ietf.org/doc/html/draft-ietf-teep-protocol#section-4.3.1 have requirements to be able to somehow express, in some fashion (ideally not TEEP specific):\r\n\r\n- [X] Device unique identifier - I think \"ueid\" meets this, if I understand correctly (and this was mentioned in the mailing list thread)\r\n- [X] Vendor of the device - I think \"oemid\" can now do this\r\n- [ ] Class of the device\r\n- [X] TEE firmware type - I think \"software-name\" can now do this\r\n- [X] TEE firmware version - I think \"software-version\" can now do this\r\n\r\nhttps://datatracker.ietf.org/doc/draft-birkholz-rats-suit-claims/ proposed claims that are not TEEP/SUIT specific for all of the above:\r\n* vendor-identifier, class-identifier, device-identifier, component-identifier, version\r\n\r\nThe TEEP protocol spec has a normative dependency on those, and we agreed they are not TEEP or SUIT specific.   This issue requests adding them, or some other way of expressing similar information, into the base EAT spec.  This has been discussed on the RATS mailing list and asked for in multiple past RATS meetings, so now tracking via this issue.\r\n\r\nThe latest version of draft-ietf-rats-eat added software-name and software-version which I believe are sufficient to meet the firmware type and version requirements, so this now just tracks anything remaining, which I think is just device class.\r\n",
      "createdAt": "2021-11-08T13:01:46Z",
      "updatedAt": "2022-07-19T16:50:13Z",
      "closedAt": "2022-07-19T16:50:13Z",
      "comments": [
        {
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Here's some of the discussion links, there are more (earlier ones) I can dig up later if needed:\r\n\r\n* RATS email thread: https://mailarchive.ietf.org/arch/msg/rats/NRVt_SCZ7yH8M3SRbUZqlO448MY/\r\n* Slides from IETF 111: https://datatracker.ietf.org/meeting/111/materials/slides-111-rats-sessc-rats-session-2-3-slide-bundle-03 slides 53-59\r\n* Notes from IETF 111: https://notes.ietf.org/notes-ietf-111-rats",
          "createdAt": "2021-11-08T13:09:59Z",
          "updatedAt": "2021-11-08T13:09:59Z"
        },
        {
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The relevant part of draft-birkholz-rats-suit-claims that is not specific to SUIT or TEEP is:\r\n\r\n> 3.1.1.  vendor-identifier\r\n> \r\n>    A RFC 4122 UUID representing the vendor of the Attester or one of its\r\n>    hardware and/or software components.\r\n> \r\n>    $$system-property-claim //= ( vendor-identifier => RFC4122_UUID )\r\n\r\nI believe above is now obsoleted by oemid.\r\n\r\n> 3.1.2.  class-identifier\r\n> \r\n>    A RFC 4122 UUID representing the class of the Attester or one of its\r\n>    hardware and/or software components.\r\n> \r\n>    $$system-property-claim //= ( class-identifier => RFC4122_UUID )\r\n\r\nThere is currently no equivalent in EAT, and the ueid text actually says so (\"It does not identify types, models or classes of devices.\")  So we need a separate claim that can hold such information.  TEEP doesn't care whether it's a UUID, or a string that is up to the vendor specified in oemid, or whatever else.\r\n\r\n> 3.1.3.  device-identifier\r\n> \r\n>    A RFC 4122 UUID representing the Attester.\r\n> \r\n>    $$system-property-claim //= ( device-identifier => RFC4122_UUID )\r\n\r\nI suspect ueid obsoletes the above.\r\n\r\n> 3.1.4.  component-identifier\r\n> \r\n>    A sequence of binary identifiers that is intended to identify a\r\n>    software-component of an Attester uniquely.  A binary identifier can\r\n>    represent a CoSWID [I-D.ietf-sacm-coswid] tag-id.\r\n> \r\n>    $$system-property-claim //=  ( class-identifier => [ + identifier ] )\r\n\r\nI suspect software-name obsoletes the above, although an array as Henk proposed may provide better uniqueness guarantees than a string as software-name uses in EAT today.",
          "createdAt": "2021-11-08T13:20:46Z",
          "updatedAt": "2021-11-08T16:47:33Z"
        },
        {
          "author": "bremoran",
          "authorAssociation": "NONE",
          "body": "From a SUIT perspective, many things can affect compatibility. Many software and hardware components can play a role. Some may even come from different vendors. We should not come under the illusion that a device has a single \"oem.\" Devices may have a myriad of OEMs. Imagine a fleet tracking device that contains:\r\n\r\n* An application processor\r\n* A GPS module for obtaining location\r\n* A WiFi module for when the vehicle is at a supported facility\r\n* A LTE module for when the vehicle is in a city\r\n* A Satellite communication module for when the vehicle is not in a city.\r\n\r\nWhy does it have so many communication interfaces? Because each one is more expensive to use than the previous.\r\n\r\nEach of the modules has a separate vendor, hardware version, firmware version, and root of trust. The device *as a whole* has an OEM, but so do each of the modules. Which OEM are you reporting? Is that good enough? Your device has a hierarchical structure, so your data should too.\r\n\r\nYou also need to apply this logic to hardware and firmware revisions. As a device of a particular \"model\" evolves, it may continue to have changes to these modules. A wifi module from a second source could be used as a replacement without changing the \"function\" of the device. Some companies are keen to hide this, so they will attempt to keep the model of the overall device the same. But from a reporting perspective, that is a problem; presumably you want to know what firmware each of the modules within your device is running, otherwise how do you patch security problems?\r\n\r\nSuit's data structure may not look it, but it enables this. By setting a component ID and then testing vendor identifier and class identifier, you can test all the modules in your system. It also allows multiple class identifiers per component ID, so you can use one for hardware revision and one for firmware revision (where relevant).\r\n\r\nThis is why the list of class identifiers is so important. It needs to stay.",
          "createdAt": "2021-11-11T11:45:03Z",
          "updatedAt": "2021-11-11T11:51:35Z"
        },
        {
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "body": "My understanding is that each claimset can have an oemid and describe a different component.  A device can have a set of claimsets, one per component, organized in a layered fashion, or a composite fashion.   As long as \"oemid\" can be used to hold a vendor id, then it's really a vendor id not an \"OEM\" id per se.   Someone please correct me if my understanding is incorrect.\r\n\r\nThanks,\r\nDave\r\n\r\nFrom: Brendan Moran ***@***.***>\r\nSent: Thursday, November 11, 2021 3:45 AM\r\nTo: ietf-rats-wg/eat ***@***.***>\r\nCc: Dave Thaler ***@***.***>; Author ***@***.***>\r\nSubject: Re: [ietf-rats-wg/eat] Meet TEEP requirements for non-TEEP/SUIT specific claims (Issue #138)\r\n\r\n\r\nFrom a SUIT perspective, many things can affect compatibility. Many software and hardware components can play a role. Some may even come from different vendors. We should not come under the illusion that a device has a single \"oem.\" Devices may have a myriad of OEMs. Imagine a fleet tracking device that contains:\r\n\r\n  *   An application processor\r\n  *   A GPS module for obtaining location\r\n  *   A WiFi module for when the vehicle is at a supported facility\r\n  *   A LTE module for when the vehicle is in a city\r\n  *   A Satellite communication module for when the vehicle is not in a city.\r\n\r\nWhy does it have so many communication interfaces? Because each one is more expensive to use than the previous.\r\n\r\nEach of the modules has a separate vendor, hardware version, firmware version, and root of trust. The devices as a whole has an OEM, but so do each of the modules. Which OEM are you reporting? Is that good enough? Your device has a hierarchical structure, so your data should too.",
          "createdAt": "2021-11-11T14:39:26Z",
          "updatedAt": "2021-11-12T14:21:59Z"
        },
        {
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "body": "TEEP discussed this thread in the WG meeting this morning, where\r\nmany of the people who weighed in on the joint RATS/TEEP email thread were present\r\n(thanks!)   Nancy did two polls during the meeting to get a sense\r\nof the room.\r\n\r\nMy takeaway is that TEEP (with various participants from SUIT \r\nand RATS who weighed in) believes that RATS should define\r\na claim in the EAT spec, but leave the *values* to be defined by\r\nprofiles and by vendors (i.e., both categories are needed).\r\nThe TEEP profile would define values used by TEEP use cases,\r\nas would other profiles.  Vendors would be able to define\r\nvendor-specific values in addition to standard values defined in profiles.\r\n\r\nAlso TEEP had strong consensus that the values should be opaque\r\nnot structured.   As such, some believe a UUID would be better\r\nthan a byte blob or text string because a UUID helps ensure opaqueness,\r\nbut that\u2019s for RATS to decide if RATS defines the claim and requirements\r\nfor profiles.\r\n",
          "createdAt": "2021-11-12T14:22:40Z",
          "updatedAt": "2021-11-12T14:22:40Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe this has been addressed by #139 ",
          "createdAt": "2021-12-06T19:46:29Z",
          "updatedAt": "2021-12-06T19:46:29Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Re opened this because through a conversation with Dave, it is clear that TEEP wants something that really is a class, not a model number.",
          "createdAt": "2021-12-22T21:09:56Z",
          "updatedAt": "2021-12-22T21:09:56Z"
        },
        {
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This was fixed so closing (can remote wontfix label but I don't have permissions to do that)",
          "createdAt": "2022-07-19T16:50:13Z",
          "updatedAt": "2022-07-19T16:50:13Z"
        }
      ]
    },
    {
      "number": 144,
      "id": "I_kwDOCEWCXc4_7SoT",
      "title": "Re order sections (MCR comment)",
      "url": "https://github.com/ietf-rats-wg/eat/issues/144",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "From October 26 mcr email:\r\n\r\n> I wonder if section 3 (Claims) shouldn't come after section 6, before 7.\r\n> section 6, which is about keys, maybe even should be earlier.",
      "createdAt": "2021-12-06T19:09:04Z",
      "updatedAt": "2022-12-12T19:32:42Z",
      "closedAt": "2022-12-12T19:32:42Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I am open to a reordering from this:\r\n\r\n> 3. The Claims\r\n> 4. Unprotected JWT Claims-Sets\r\n> 5. Detached EAT Bundle\r\n> 6. Endorsements and Verification Keys\r\n> 7. Profiles\r\n\r\nto this:\r\n> 3. Unprotected JWT Claims-Sets\r\n> 4. Endorsements and Verification Keys\r\n> 5. The Claims\r\n> 6. Detached EAT Bundle\r\n> 7. Profiles\r\n\r\nI prefer it as is. I have \"The Claims\" near the front because that is the main thing people want to read first and because the current order parallels CWT and JWT to some degree. The section on Endorsements and  Verification keys is not essentially normative. JWT defines unsecured JWT's after it defines the claims.",
          "createdAt": "2021-12-06T19:15:01Z",
          "updatedAt": "2021-12-06T19:15:01Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed per discussion at virtual interim December 12, 2023",
          "createdAt": "2022-12-12T19:32:42Z",
          "updatedAt": "2022-12-12T19:32:42Z"
        }
      ]
    },
    {
      "number": 151,
      "id": "I_kwDOCEWCXc5B_zSA",
      "title": "Remove Section 4 (unsigned JWT) from draft",
      "url": "https://github.com/ietf-rats-wg/eat/issues/151",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Already covered in Appendix A of  https://www.ietf.org/rfcdiff?url2=draft-ietf-rats-uccs-02.txt",
      "createdAt": "2022-01-18T18:43:11Z",
      "updatedAt": "2022-05-16T19:44:18Z",
      "closedAt": "2022-05-16T19:44:18Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #176",
          "createdAt": "2022-05-16T19:44:18Z",
          "updatedAt": "2022-05-16T19:44:18Z"
        }
      ]
    },
    {
      "number": 153,
      "id": "I_kwDOCEWCXc5CSAzN",
      "title": "Should EAN-13 HW Version be removed",
      "url": "https://github.com/ietf-rats-wg/eat/issues/153",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "laurencelundblade"
      ],
      "labels": [],
      "body": "Right now the HW Version claim can be an EAN-13 value, a bar code. This was partly because the PSA token used it. It doesn't any longer.\r\n\r\nThis can probably be removed.",
      "createdAt": "2022-01-23T23:28:51Z",
      "updatedAt": "2022-09-14T19:22:54Z",
      "closedAt": "2022-09-14T19:22:54Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "It was removed. ",
          "createdAt": "2022-09-14T19:22:54Z",
          "updatedAt": "2022-09-14T19:22:54Z"
        }
      ]
    },
    {
      "number": 155,
      "id": "I_kwDOCEWCXc5CW-9A",
      "title": "Update CDDL to use .feature for JSON vs CBOR",
      "url": "https://github.com/ietf-rats-wg/eat/issues/155",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The new UCCS draft uses .feature to branch between JSON and CBOR. This needs to be carried into the CDDL for all the claims that are different between JSON and CBOR, particularly for nested tokens.",
      "createdAt": "2022-01-25T01:30:52Z",
      "updatedAt": "2022-05-16T03:31:02Z",
      "closedAt": "2022-05-16T03:31:01Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #176",
          "createdAt": "2022-05-16T03:31:01Z",
          "updatedAt": "2022-05-16T03:31:01Z"
        }
      ]
    },
    {
      "number": 157,
      "id": "I_kwDOCEWCXc5CnxQq",
      "title": "a media type for EAT",
      "url": "https://github.com/ietf-rats-wg/eat/issues/157",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It looks like we are missing an explicit media type for EAT.\r\n \r\nOne important thing is that we make the media type so that it can optionally carry the EAT profile.  This allows HTTP/CoAP APIs to dispatch to the right decoder without having to snoop into the payload.\r\n \r\nSomething like `application/eat+cbor` for the base thing and an optional `profile` parameter that mirrors the profile claim value in the EAT. E.g.: `application/eat+cbor; profile=1.3.6.1.4.1.123.456`.\r\n\r\nSee also the RATS ML thread starting at https://mailarchive.ietf.org/arch/msg/rats/VAYmwacEeu-vIVjotbVqmOavQpk/",
      "createdAt": "2022-01-28T18:41:48Z",
      "updatedAt": "2022-01-31T17:56:58Z",
      "closedAt": "2022-01-31T17:56:58Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Please provide an explanation as to why application/cwt is not sufficient (https://www.rfc-editor.org/rfc/rfc8392.html#section-9.2) for EAT carriage.",
          "createdAt": "2022-01-28T21:24:03Z",
          "updatedAt": "2022-01-28T21:24:03Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Please provide an explanation as to why application/cwt is not sufficient (https://www.rfc-editor.org/rfc/rfc8392.html#section-9.2) for EAT carriage.\r\n\r\nAs per discussion on the RATS mailing list, this whole topic will be dealt with in a separate document.",
          "createdAt": "2022-01-31T17:56:58Z",
          "updatedAt": "2022-01-31T17:56:58Z"
        }
      ]
    },
    {
      "number": 163,
      "id": "I_kwDOCEWCXc5DJXb5",
      "title": "Add privacy discussion on replay protection mechanisms",
      "url": "https://github.com/ietf-rats-wg/eat/issues/163",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cti/jti and nonce fields could be used either inadvertently or on purpose to extract or convey personally identifying information (PII).  See https://github.com/ietf-rats-wg/architecture/issues/399.",
      "createdAt": "2022-02-07T21:40:05Z",
      "updatedAt": "2022-02-17T19:29:37Z",
      "closedAt": "2022-02-17T19:29:36Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Address by #164",
          "createdAt": "2022-02-17T19:29:36Z",
          "updatedAt": "2022-02-17T19:29:36Z"
        }
      ]
    },
    {
      "number": 165,
      "id": "I_kwDOCEWCXc5DPmO2",
      "title": "Identifying EAT objects",
      "url": "https://github.com/ietf-rats-wg/eat/issues/165",
      "state": "CLOSED",
      "author": "cyberphone",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "Related issue: https://github.com/ietf-rats-wg/eat/issues/157\r\nRelated I-D: https://datatracker.ietf.org/doc/draft-ietf-cbor-file-magic/\r\n\r\nA very active W3C group called Verified Credentials (VCs) are using attestations for delivering claims regarding individuals.  VC containers are identified as such by URLs featured in a dedicated JSON/JSON-LD property called @context (https://www.w3.org/TR/vc-data-model/#contexts).  When sent over HTTP, VCs use a static media type since the @context is supposed to tell the consumer what to expect.  This is similar to XML schemas and Namespaces.  Another W3C effort, PaymentRequest uses URLs (https://www.w3.org/TR/payment-request/#dom-paymentmethoddata-supportedmethods) for identifying custom payment handlers.\r\n\r\nIt is not entirely obvious how you translate this methodology to CBOR.  The following represents a concrete proposal intended to limit the need for multiple and over time probably diverging practices.  Since the scope of this issue is universal it is not limited to EAT. However, EAT represents a possible adopter.\r\n\r\n## High Level Description\r\n\r\n- CBOR data is enclosed by a _fixed_ top-level tag holding a URI or OID which are supposed to uniquely identify the \"schema\" (content specification) of the embedded data (payload).\r\n- When such objects are transported over HTTP, the media type MUST be set to `application/cbor`.   That is, the proposed tag has _precedence_ over other possible media types associated with the payload.\r\n\r\n<table><tr><td>Since objects using <i>self-contained type identifiers</i> are distinguishable from each other they can also be <i>embedded in other objects</i> in an interoperable and extensible way.</td></tr></table> \r\n\r\nIf applied to https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat-11 the following changes seem logical:\r\n- 601() and similar application-specific tags would be replaced by the proposed construct.\r\n- `profile-name` would be removed.\r\n\r\n## In More Detail\r\n\r\nTBD211([_Type Id_, _CBOR data_])\r\n\r\nThis CBOR tag extends major type 6 and presumes a 2-element array holding a type identifier and associated data.  For designs intended for external use, type identifiers are RECOMMENDED to be represented by `bstr` or `tstr` where `bstr` SHOULD be coded as _absolute_ OIDs according to RFC9090 while `tstr` SHOULD be coded as _absolute_ URLs, preferably pointing to a document describing the object.\r\n\r\nThe data (payload) portion of the tag is any valid CBOR object, only constrained by its specification given by the type identifier.\r\n\r\n## Example\r\n\r\nAssume that you have an object like\r\n```code\r\n{\r\n  1: \"Hello CBOR World!\",\r\n  2: Infinity\r\n}\r\n```\r\nthat is defined in a document located at `https://example.com/cbor-hello`.\r\n\r\nAfter extending it with the proposed tag:\r\n```code\r\nTBD211([\"https://example.com/cbor-hello\", {\r\n  1: \"Hello CBOR World!\",\r\n  2: Infinity\r\n}])\r\n```\r\n\r\nIn binary/hex:\r\n```code\r\nD8 D3                                   # tag(211)\r\n   82                                   # array(2)\r\n      78 1E                             # text(30)\r\n         68747470733A2F2F6578616D706C652E636F6D2F63626F722D68656C6C6F # \"https://example.com/cbor-hello\"\r\n      A2                                # map(2)\r\n         01                             # unsigned(1)\r\n         71                             # text(17)\r\n            48656C6C6F2043424F5220576F726C6421 # \"Hello CBOR World!\"\r\n         02                             # unsigned(2)\r\n         F9 7C00                        # primitive(31744)\r\n```\r\n\r\n## Parameterized Object Types\r\nAlthough NOT RECOMMENDED, this specification does not \"outlaw\" parameterized type identifiers like the following:\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TBD211([[_Main Type Id_, _Parameters_...], _CBOR data_])\r\n\r\nHowever, in most real-world scenarios, an _extension scheme_ in the actual object is probably a better solution.\r\n\r\n### Related Discussion\r\nAnyway, whatever parameterization or extension scheme you use, it often comes with interoperability issues.   One way to combine extensions with a more agile ecosystem where not all object producers and consumers are at the same level, is making the latter announce their capabilities through _public discovery services_.  Then an object producer can determine what to send _before_ making a request, as well as concluding that the consumer isn't compatible with the producer's current requirements.",
      "createdAt": "2022-02-09T07:38:16Z",
      "updatedAt": "2022-05-19T02:09:06Z",
      "closedAt": "2022-05-19T02:09:06Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">When such objects are transported over HTTP, the media type MUST be set to application/cbor. That is, the proposed tag has precedence over other possible media types associated with the payload.\r\n\r\nAs per IETF 113 consensus decision, all normative references to UCCS will be removed.  Therefore transmission of an EAT as straight CBOR or JSON is not permitted going forward (exception being a token type DEB, which may or may not be included in the final RFC).  JWT and CWT media types would be more applicable along with their corresponding tags.",
          "createdAt": "2022-05-02T15:27:15Z",
          "updatedAt": "2022-05-02T15:27:15Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "https://github.com/thomas-fossati/draft-eat-mt\r\n",
          "createdAt": "2022-05-19T02:09:06Z",
          "updatedAt": "2022-05-19T02:09:06Z"
        }
      ]
    },
    {
      "number": 168,
      "id": "I_kwDOCEWCXc5EIoOO",
      "title": "Three+ EAT serialization formats may not be beneficial",
      "url": "https://github.com/ietf-rats-wg/eat/issues/168",
      "state": "CLOSED",
      "author": "cyberphone",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "F.Y.I. only, feel free to ignore this.\r\n\r\nThe three EAT serialization formats\r\n- JSON\r\n- CBOR standard\r\n- CBOR for constrained devices\r\n\r\nprovide flexibility but also makes EAT error-prone and difficult to deal with by verifiers.  There is IMO no point using JSON for this kind of application (which it certainly wasn't designed for either).\r\n\r\nThen we have the two CBOR solutions.  Or as it seems, a _multitude_ of solutions, where each profile _may_ specify its serialization requirements.\r\n\r\nGiven my background in embedded programming using extremely constrained devices like Intel 8051 and Motorola 6801, I don't see any problems _generating_ CBOR using preferred serialization.  Although I don't have the complete picture, I would be surprised if constrained devices would _consume_ EAT objects, and even if they do, preferred serialization would not be a disadvantage since you don't _have_ to verify compliance.\r\n\r\nThere is no need to sort CBOR maps, you just create data in the proper order, or use a pre-defined template and fill in the blanks.\r\n\r\nThe following Java code shows deterministic generation of `integers` (also used by `tstr`, `bstr`, `array`, and `map`):\r\n\r\n```java\r\nbyte[] encodeTagAndN(int majorType, long n) {\r\n    // Note: n is actually an UNSIGNED long\r\n    int modifier = (int) n;\r\n    int length = 0;\r\n    if (n < 0 || n > 23) {\r\n        modifier = 27;\r\n        length = 8;\r\n        while (((MASK_LOWER_32 << ((length / 2) * 8)) & n) == 0) {\r\n            modifier--;\r\n            length >>= 1;\r\n        }\r\n    }\r\n    byte[] encoded = new byte[length + 1];\r\n    encoded[0] = (byte)(majorType | modifier);\r\n    while (length > 0) {\r\n        encoded[length--] = (byte)n;\r\n        n >>>= 8;\r\n    }\r\n    return encoded;\r\n}\r\n```\r\nIn the unlikely (?) case you would need floating point data in EAT objects, preferred serialization would require about twice the code above, but it is still quite simple, only requiring bit-shuffling and integer math.\r\n\r\nUPDATE: After taking a deeper look into the matter, it seems that the primary issue rather must be COSE, since it puts the payload in a `tstr`, which requires RAM buffering unless infinite-length encoding and pre-hashing is used.  Enveloped signatures and pre-hashing conserve RAM as well as making preferred serialization a viable alternative for just about any imaginable device.",
      "createdAt": "2022-02-18T13:58:44Z",
      "updatedAt": "2022-05-19T02:10:25Z",
      "closedAt": "2022-05-19T02:10:25Z",
      "comments": [
        {
          "author": "cyberphone",
          "authorAssociation": "NONE",
          "body": "From the current draft:\r\n> **7.2.4. CBOR Preferred Serialization**\r\nThe profile should indicate whether encoders must use preferred serialization. The profile should indicate whether decoders must accept non-preferred serialization.\r\n\r\nExisting decoders require that you specify CBOR serialization options _before_ parsing which doesn't work particularly well in conjunction with a profile (https://github.com/ietf-rats-wg/eat/issues/165) buried somewhere in the payload.\r\n\r\n@laurencelundblade @gmandyam \r\n",
          "createdAt": "2022-02-19T03:32:11Z",
          "updatedAt": "2022-02-19T03:32:11Z"
        },
        {
          "author": "cyberphone",
          "authorAssociation": "NONE",
          "body": "A (wanted) side-effect of using preferred serialization is that it permits the use of enveloped signatures making the structure of signed objects more logical and easier to understand.\r\n\r\nCWT: https://datatracker.ietf.org/doc/html/rfc8392#appendix-A.3\r\n\r\n```cbor\r\n18([h'a10126', {\r\n    4: h'4173796d6d65747269634543445341323536'\r\n}, h'a70175636f61703a2f2f61732e6578616d706c652e636f6d02656572696b77037818636f61703a2f2f6c696768742e6578616d706c652e636f6d041a5612aeb0051a5610d9f0061a5610d9f007420b71', h'5427c1ff28d23fbad1f29c4c7c6a555e601d6fa29f9179bc3d7438bacaca5acd08c8d4d4f96131680c429a01f85951ecee743a52b9b63632c57209120e1c9e30'])\r\n```\r\n\r\nThe very same object using an enveloped signature:\r\n```cbor\r\n18({\r\n    1: \"coap://as.example.com\",\r\n    2: \"erikw\",\r\n    3: \"coap://light.example.com\",\r\n    4: 1444064944,\r\n    5: 1443944944,\r\n    6: 1443944944,\r\n    7: h'0b71',\r\n    / Signature container /\r\n    -1: {\r\n      / alg = ES256 /\r\n      1: -7,\r\n      / kid /\r\n      3: h'4173796d6d65747269634543445341323536',\r\n      / signature value /\r\n      7: h'e1e1a3bda070b586be0e9b95e6e5ccae4bcfb44726aa3f6b5e7bbc81d2193f439b6c6b84962c27eb4796e17dd6ecd028026a8e351bed3f9be95c96447e3fd262'\r\n    }\r\n})\r\n```\r\n\r\nThere is nothing particularly innovative or controversial about this suggestion; X.509 certificates, which represent a very widely used variant of signed objects, seem to work fine in spite of not burying the certified data (claims) inside of a blob.  That is, this is a time-proven concept.  However,  CBOR preferred serialization is considerably simpler and more \"RAM-friendly\" than ASN.1 DER since CBOR only requires items in a map or array to be concatenated.\r\n\r\nAn unexpected feature is that this scheme enables a signature to be added as a last element while the hash is collected during the production of the actual content.   This works at least for RSA and ECDSA algorithms.\r\n\r\nArmed with preferred serialization, signature validation becomes very simple:\r\n```java\r\n/**\r\n * Validates signed CBOR map.\r\n * <p>\r\n * This method presumes that <code>signedObject</code> holds\r\n * an enveloped signature according to CSF.\r\n * </p>\r\n * \r\n * @param key Key in map holding signature\r\n * @param signedObject Signed CBOR map object\r\n * @return The signed object\r\n * @throws IOException\r\n * @throws GeneralSecurityException\r\n */\r\npublic CBORMap validate(CBORObject key, CBORMap signedObject) throws IOException, \r\n                                                                     GeneralSecurityException {\r\n    // Fetch signature object\r\n    CBORMap signatureObject = signedObject.getObject(key).getMap();\r\n\r\n    // Get the signature value and remove it from the (map) object.\r\n    byte[] signatureValue = signatureObject.readByteStringAndRemoveKey(SIGNATURE_LABEL);\r\n\r\n    // Fetch optional keyId.\r\n    CBORObject optionalKeyId = signatureObject.hasKey(KEY_ID_LABEL) ?\r\n                     signatureObject.getObject(KEY_ID_LABEL).scan() : null;\r\n\r\n    // Call algorithm specific validator. The code below presumes that internalEncode()\r\n    // returns a deterministic representation of the signed CBOR data.\r\n    coreValidation(signatureObject,\r\n                   signatureObject.getObject(ALGORITHM_LABEL).getInt(),\r\n                   optionalKeyId, \r\n                   signatureValue,\r\n                   signedObject.internalEncode());\r\n\r\n    // Check that nothing \"extra\" was supplied.\r\n    signatureObject.checkForUnread();\r\n\r\n    // Restore object.\r\n    signatureObject.setObject(SIGNATURE_LABEL, new CBORByteString(signatureValue));\r\n    \r\n    // Return it as well.\r\n    return signedObject;\r\n}\r\n```",
          "createdAt": "2022-02-19T07:49:06Z",
          "updatedAt": "2022-02-21T16:26:59Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "This issue seems to be broader than EAT, so am affixing a 'wontfix' label but won't close it.  That being said, why is canonicalization not acceptable (https://datatracker.ietf.org/doc/html/rfc8152#section-14)?",
          "createdAt": "2022-05-02T15:18:07Z",
          "updatedAt": "2022-05-02T15:18:07Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "It is true that there are several ways CBOR could be encoded and they might not always interoperate. For example, use of indefinite length strings might cause trouble.\r\n\r\nHowever, as Giri said this is a general things about CBOR not specific to EAT. Or said another way, EAT is largely neutral on this just like COSE, CWT and CBOR itself. EAT retains this encoding flexibility.\r\n\r\nWhat EAT does beyond all these others is discuss the issue explicitly and puts forth profiles to address it.\r\n\r\nI also think the JSON support is valuable as about 95% of the world uses JSON and about 5% uses CBOR. CBOR is a weird mystery to many. Having a JSON standard for attestation will really help promote attestation.\r\n\r\nI would like to close this issue.",
          "createdAt": "2022-05-02T15:59:04Z",
          "updatedAt": "2022-05-02T15:59:04Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing since there is no further comment.",
          "createdAt": "2022-05-19T02:10:25Z",
          "updatedAt": "2022-05-19T02:10:25Z"
        }
      ]
    },
    {
      "number": 169,
      "id": "I_kwDOCEWCXc5EYJ70",
      "title": "Wording of claims so they can be both Evidence and Results",
      "url": "https://github.com/ietf-rats-wg/eat/issues/169",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "For example, UEID refers to the Relying Party as the recipient when it can also be the Verifier.",
      "createdAt": "2022-02-22T17:28:12Z",
      "updatedAt": "2022-04-07T17:15:35Z",
      "closedAt": "2022-04-07T17:15:35Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This is addressed by #171.  Turns out the UEID was the only mention of RP. However this issue prompted some re thinking and re organization of the claims into sections and wording about relationship of AR to AE.",
          "createdAt": "2022-03-22T13:14:26Z",
          "updatedAt": "2022-03-22T13:14:26Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "It will be addressed by #171",
          "createdAt": "2022-03-22T13:14:51Z",
          "updatedAt": "2022-03-22T13:14:51Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #171",
          "createdAt": "2022-04-07T17:15:35Z",
          "updatedAt": "2022-04-07T17:15:35Z"
        }
      ]
    },
    {
      "number": 170,
      "id": "I_kwDOCEWCXc5EYUaJ",
      "title": "Clarify UEID manufacturing type switch",
      "url": "https://github.com/ietf-rats-wg/eat/issues/170",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-22T18:14:58Z",
      "updatedAt": "2022-04-07T17:15:04Z",
      "closedAt": "2022-04-07T17:15:04Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #175",
          "createdAt": "2022-04-07T17:15:04Z",
          "updatedAt": "2022-04-07T17:15:04Z"
        }
      ]
    },
    {
      "number": 177,
      "id": "I_kwDOCEWCXc5I1UY-",
      "title": "Use content or media type for Manifest and SWMeasurements",
      "url": "https://github.com/ietf-rats-wg/eat/issues/177",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "The idea in EAT is to carry formats like Coswid and Corim for Manifests and SWResults. A way to identify their type is needed. Right now CBOR tags are used, but MIME type or Coap content type is probably better.",
      "createdAt": "2022-04-30T22:45:22Z",
      "updatedAt": "2022-05-16T03:18:15Z",
      "closedAt": "2022-05-16T03:18:15Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Any proposal for new media types or subtypes should have a justification why the existing CWT media type is insufficient.  \r\n\r\nIf a subtype is being proposed for Corim/etc., then there should be a specific proposal and examples on how the subtypes are being conveyed.  I would suggest a POST example.",
          "createdAt": "2022-04-30T23:50:18Z",
          "updatedAt": "2022-04-30T23:50:18Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #179 ",
          "createdAt": "2022-05-08T17:05:56Z",
          "updatedAt": "2022-05-08T17:05:56Z"
        }
      ]
    },
    {
      "number": 178,
      "id": "I_kwDOCEWCXc5I5eWL",
      "title": "Remove all normative references to UCCS",
      "url": "https://github.com/ietf-rats-wg/eat/issues/178",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As per Working Group consensus decision at IETF 113.  Starting with Sec. 1.2.",
      "createdAt": "2022-05-02T15:28:14Z",
      "updatedAt": "2022-05-16T03:30:34Z",
      "closedAt": "2022-05-16T03:30:34Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "#176",
          "createdAt": "2022-05-02T15:47:32Z",
          "updatedAt": "2022-05-02T15:48:12Z"
        }
      ]
    },
    {
      "number": 180,
      "id": "I_kwDOCEWCXc5JtCAW",
      "title": "Multiple nonces in JSON",
      "url": "https://github.com/ietf-rats-wg/eat/issues/180",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The CBOR definition of a nonce allows for multiple nonces to accommodate some of the more sophisticated use cases.\r\n\r\nThe JSON definition of a nonce is re used from the IANA JWT registry and doesn't allow multiple nonces.\r\n",
      "createdAt": "2022-05-16T02:40:50Z",
      "updatedAt": "2022-05-17T03:33:15Z",
      "closedAt": "2022-05-17T03:33:15Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Establish consensus within the group that multiple nonces are required, otherwise close.",
          "createdAt": "2022-05-16T02:50:39Z",
          "updatedAt": "2022-05-16T02:50:39Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Wasn't it you that wanted the multiple nonces?\r\n\r\nAlso something HAS to be fixed because it is inconsistent as is. Thus I've remove the wont fix.",
          "createdAt": "2022-05-16T03:17:08Z",
          "updatedAt": "2022-05-16T03:17:08Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">Wasn't it you that wanted the multiple nonces?\r\n\r\nNot that I can recall.  If I did, then I would understand the use case.  Since we have disagreement among the editors, the proper place to raise this issue is on the list. ",
          "createdAt": "2022-05-16T03:19:34Z",
          "updatedAt": "2022-05-16T03:19:34Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Until this is resolved on mailing list, restoring wontfix label.",
          "createdAt": "2022-05-16T03:20:50Z",
          "updatedAt": "2022-05-16T03:20:50Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Something has to be fixed here. It is not OK to have the CBOR nonce different from the JSON nonce.\r\n\r\nWould appreciate us coming to consensus on wontfix before assign it. \r\n\r\nRemoving wontfix.",
          "createdAt": "2022-05-16T03:29:35Z",
          "updatedAt": "2022-05-16T03:29:35Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "PR to be filed for Draft -13.  Multiple CWT nonces seems to be allowed by current spec text, so no need to change this definition (nor impact existing CWT registry).  New text to focus on JWT.\r\n\r\nhttps://datatracker.ietf.org/doc/html/draft-ietf-rats-architecture#section-10.2 calls out at least 2 possible sources of nonces:  verifier and RP.  So there are use cases that require multiple nonces.",
          "createdAt": "2022-05-16T15:33:03Z",
          "updatedAt": "2022-05-16T15:35:26Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "I couldn't identify where in https://openid.net/specs/openid-connect-core-1_0.html#IDToken there is a prohibition against multiple nonces in a single token.  That being said, the use of nonce in the OpenID spec is bound to an ID token. So it may be good to distinguish the JWT name-space for EAT nonce from the existing JWT nonce.",
          "createdAt": "2022-05-16T20:08:30Z",
          "updatedAt": "2022-05-16T20:09:39Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "You can't have multiple claims with the same label and the OpenID nonce is a string, so no way to do multiple nonces with what's there.\r\n",
          "createdAt": "2022-05-17T03:32:53Z",
          "updatedAt": "2022-05-17T03:32:53Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #184",
          "createdAt": "2022-05-17T03:33:15Z",
          "updatedAt": "2022-05-17T03:33:15Z"
        }
      ]
    },
    {
      "number": 181,
      "id": "I_kwDOCEWCXc5JtChI",
      "title": "Swresults should be generalized to measurement results",
      "url": "https://github.com/ietf-rats-wg/eat/issues/181",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This came out of an email discussion with Eric on the list.\r\n\r\nYou can measure other things than SW so swresults should be renamed measurement results and perhaps rearranged some.\r\n\r\nNote that this is for Evidence.  It is not just for Attestation Results, as it is possible to compare measurements to results on the entity. I know of products that did this.\r\n",
      "createdAt": "2022-05-16T02:45:24Z",
      "updatedAt": "2022-05-19T02:07:56Z",
      "closedAt": "2022-05-19T02:07:56Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Current proposal is that attestation results will be an EAT profile.  Take it to the mailing list and get consensus first.  Spec is near LC.",
          "createdAt": "2022-05-16T02:49:51Z",
          "updatedAt": "2022-05-16T02:49:51Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I clearly explained this is not an Attestation Results issue.\r\n\r\nPlease be thoughtful and considerate and provide a technical argument the issue before you label wontfix.\r\n\r\n",
          "createdAt": "2022-05-16T03:20:25Z",
          "updatedAt": "2022-05-16T03:20:25Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Removed 'wontfix' label.  My apologies.  My misunderstanding.\r\n\r\nI don't understand 'rearranged some'  Until there is a specific proposal this issue is not actionable.",
          "createdAt": "2022-05-16T03:23:43Z",
          "updatedAt": "2022-05-16T03:23:43Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "#185",
          "createdAt": "2022-05-19T02:07:56Z",
          "updatedAt": "2022-05-19T02:07:56Z"
        }
      ]
    },
    {
      "number": 187,
      "id": "I_kwDOCEWCXc5KqI5D",
      "title": "boot seed doesn't need to be random",
      "url": "https://github.com/ietf-rats-wg/eat/issues/187",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Section 4.2.14 says:\r\n\r\n_\"The Boot Seed claim MUST contain a random value created at system boot time that will allow differentiation of reports from different boot sessions.\"_\r\n\r\nBut one could achieve the same goal using, e.g., a monotonically increasing counter.\r\n\r\nPropose to rephrase as:\r\n\r\n_\"The Boot Seed claim contains a value created at system boot time that MUST allow differentiation of reports from different boot sessions.\"_\r\n\r\n\r\n",
      "createdAt": "2022-05-30T10:53:13Z",
      "updatedAt": "2022-06-02T13:21:31Z",
      "closedAt": "2022-06-02T13:21:31Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "As per https://datatracker.ietf.org/doc/html/draft-tschofenig-rats-psa-token-08#section-3.3.2, \"Boot Seed claim _represents a random value_ created at system boot time that will allow differentiation of reports from different boot sessions\". \r\n\r\nWe should make sure that boot seed definitions are consistent between documents in the working group.  ",
          "createdAt": "2022-05-30T16:10:49Z",
          "updatedAt": "2022-05-30T16:10:49Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> We should make sure that boot seed definitions are consistent between documents in the working group.\r\n\r\nAbsolutely.\r\n\r\nWe have just updated the editor copy of the PSA token as follows: https://thomas-fossati.github.io/draft-psa-token/draft-tschofenig-rats-psa-token.html#name-boot-seed\r\n\r\nThis change will become publicly visible in -10.",
          "createdAt": "2022-05-30T16:26:50Z",
          "updatedAt": "2022-05-30T17:00:33Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Adding this to the sentence would be correct, right?\r\n\r\n...from different boot sessions _for a particularly entity (e.g, for a particular UEID)_.\r\n\r\nThis also makes it clear it is safe to use a counter or such.",
          "createdAt": "2022-05-30T17:19:32Z",
          "updatedAt": "2022-05-30T17:19:32Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Would recommend not focusing on monotonic counter as source of boot seed, or even pointing to it as an example in the standards text.  This is because the use of a monotonic counter has to (a) ensure that the counter state is not reset between boot cycles, and (b) is of sufficient resolution that wrap-around is not a frequent occurrence.  It would require a separate discussion on the requirements of a counter to be a suitable source for the boot seed, which would be beyond the scope of the EAT document.\r\n\r\nI will suggest the following wording (adapted from the current PSA Token draft):  \r\n\r\n\"The Boot Seed claim represents a value created at system boot time that will allow differentiation of reports from an entity from different boot sessions.  This value should be derived from a source of randomness, that can be sampled for each boot cycle of the entity (e.g. for a particular ueid),.  If a source of randomness is not available, then the boot seed can be derived from a value that does not remain constant across boot cycles.  \"\r\n\r\nIn addition, I suggest that the PSA Token doc. should not provide a definition of boot seed.  Rather it should refer to the EAT document for the definition.",
          "createdAt": "2022-05-30T19:13:57Z",
          "updatedAt": "2022-05-30T19:13:57Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": " > I will suggest the following wording (adapted from the current PSA Token draft):\r\n> \r\n> \"The Boot Seed claim represents a value created at system boot time that will allow differentiation of reports from an entity from different boot sessions. This value should be derived from a source of randomness, that can be sampled for each boot cycle of the entity (e.g. for a particular ueid),. If a source of randomness is not available, then the boot seed can be derived from a value that does not remain constant across boot cycles. \"\r\n\r\nI'd just state the semantic: \"uniqueness per device, per boot epoch\", without going into the details of the implementation.  Ultimately, sampling from a random source or incrementing a counter, or using some other strategy is just a choice of the implementer which is outside the scope of EAT.\r\n\r\n> In addition, I suggest that the PSA Token doc. should not provide a definition of boot seed. Rather it should refer to the EAT document for the definition.\r\n\r\n\ud83d\udc4d I'll make the mods to the PSA document as soon as it's reference-able \r\n",
          "createdAt": "2022-05-30T22:04:54Z",
          "updatedAt": "2022-05-31T09:00:20Z"
        }
      ]
    },
    {
      "number": 191,
      "id": "I_kwDOCEWCXc5K6vZj",
      "title": "Premature merge of PR #188 ?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/191",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "@gmandyam did you consider my PR (https://github.com/gmandyam/eat/pull/1/files) before merging?\r\n\r\n_Originally posted by @thomas-fossati in https://github.com/ietf-rats-wg/eat/issues/188#issuecomment-1144015638_",
      "createdAt": "2022-06-01T20:00:58Z",
      "updatedAt": "2022-06-01T20:58:36Z",
      "closedAt": "2022-06-01T20:58:35Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "PR reverted",
          "createdAt": "2022-06-01T20:58:35Z",
          "updatedAt": "2022-06-01T20:58:35Z"
        }
      ]
    },
    {
      "number": 219,
      "id": "I_kwDOCEWCXc5MqjPL",
      "title": "Should nonce be optional?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/219",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "laurencelundblade"
      ],
      "labels": [],
      "body": "Right now an EAT MUST have a nonce.  However RATS architecture section 10.1 and TUDA do not require a nonce, using synchronized clocks instead.\r\n\r\nI think we should relax the nonce requirement, but state that if a nonce is not used another means for freshness MUST be used.",
      "createdAt": "2022-06-27T19:02:45Z",
      "updatedAt": "2022-08-23T16:55:19Z",
      "closedAt": "2022-08-23T16:55:19Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #264",
          "createdAt": "2022-08-23T16:55:19Z",
          "updatedAt": "2022-08-23T16:55:19Z"
        }
      ]
    },
    {
      "number": 221,
      "id": "I_kwDOCEWCXc5Mrdrz",
      "title": "Move security and privacy considerations to be for IANA section",
      "url": "https://github.com/ietf-rats-wg/eat/issues/221",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "MCR suggested this. \r\n\r\nI checked about a dozen recently published RFCs and they are all in this order.\r\n\r\n(Will make the PR after some of the other PRs are merged to avoid merge conflicts).",
      "createdAt": "2022-06-27T21:52:07Z",
      "updatedAt": "2022-07-08T17:01:44Z",
      "closedAt": "2022-07-08T17:01:44Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #232 ",
          "createdAt": "2022-07-08T17:01:44Z",
          "updatedAt": "2022-07-08T17:01:44Z"
        }
      ]
    },
    {
      "number": 233,
      "id": "I_kwDOCEWCXc5NcPp4",
      "title": "Add a profile for a basic JSON token",
      "url": "https://github.com/ietf-rats-wg/eat/issues/233",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This compliments the constrained device profile for CBOR.\r\n\r\nThis may not be absolutely necessary, but seems worth considering.",
      "createdAt": "2022-07-08T16:54:04Z",
      "updatedAt": "2022-08-22T16:48:08Z",
      "closedAt": "2022-08-22T16:48:08Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing due to document length considerations.  ",
          "createdAt": "2022-08-22T16:48:08Z",
          "updatedAt": "2022-08-22T16:48:08Z"
        }
      ]
    },
    {
      "number": 236,
      "id": "I_kwDOCEWCXc5NfENg",
      "title": "Add a Contributors section",
      "url": "https://github.com/ietf-rats-wg/eat/issues/236",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "gmandyam"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-10T18:42:04Z",
      "updatedAt": "2022-08-24T17:48:53Z",
      "closedAt": "2022-08-24T17:48:53Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Completed.",
          "createdAt": "2022-08-24T17:48:53Z",
          "updatedAt": "2022-08-24T17:48:53Z"
        }
      ]
    },
    {
      "number": 237,
      "id": "I_kwDOCEWCXc5NfEOx",
      "title": "Normative references to RATS Architecture Security Considerations ",
      "url": "https://github.com/ietf-rats-wg/eat/issues/237",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "gmandyam"
      ],
      "labels": [],
      "body": "There should be a strong normative reference to the extensive security considerations in RATS architecture, all of which apply.",
      "createdAt": "2022-07-10T18:42:31Z",
      "updatedAt": "2022-08-29T23:19:34Z",
      "closedAt": "2022-08-29T23:19:34Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Needed for security considerations section",
          "createdAt": "2022-08-22T16:54:02Z",
          "updatedAt": "2022-08-22T16:54:02Z"
        }
      ]
    },
    {
      "number": 238,
      "id": "I_kwDOCEWCXc5N4nCB",
      "title": "say all claims are optional",
      "url": "https://github.com/ietf-rats-wg/eat/issues/238",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "laurencelundblade"
      ],
      "labels": [],
      "body": "This is implied by EAT being a CWT and inheriting rules from it, but it is probably good to say it explicitly. There used to be text for it.\r\n",
      "createdAt": "2022-07-16T02:51:12Z",
      "updatedAt": "2022-08-23T16:54:56Z",
      "closedAt": "2022-08-23T16:54:56Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #264",
          "createdAt": "2022-08-23T16:54:56Z",
          "updatedAt": "2022-08-23T16:54:56Z"
        }
      ]
    },
    {
      "number": 239,
      "id": "I_kwDOCEWCXc5OEf4t",
      "title": "is submod applicable to attestation results?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/239",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "laurencelundblade"
      ],
      "labels": [],
      "body": "Or is it an aggregation type only usable for Evidence?\r\n\r\nThis came up in the [presentation of MAA](https://github.com/CCC-Attestation/meetings/blob/main/materials/GregKostal_EAT_in_MAA.pdf) by @gkostal in the Attestation SIG in CCC.\r\n\r\nIn particular, the question popped up in the context of how to deal with nesting in Attestation Results and whether submods were an applicable primitive there.\r\n\r\nIt seems that the EAT document currently does not provide very clear guidance for this and it should.",
      "createdAt": "2022-07-19T16:53:43Z",
      "updatedAt": "2022-10-19T17:39:06Z",
      "closedAt": "2022-10-19T17:39:05Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "IMO submods can be used in AR or not. Depends on the Verifier policy and what it wants to present to the RP. It's perfectly fine to present a very simple overall \"OK\" in AR even if the evidence had a dozens submods and it's perfectly fine to present detailed info on each submod in AR.\r\n\r\nSome AR profiles will probably prohibit conveying the submods and their details. That is fine too.\r\n\r\nAgreed that we can put some guidance in.",
          "createdAt": "2022-07-19T18:26:27Z",
          "updatedAt": "2022-07-19T18:26:27Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks Laurence.  On the call @dthaler suggested that if the job of describing how submods are used in AR is delegated to EAT profiles, that profilers should be given concrete guidance.",
          "createdAt": "2022-07-19T19:20:21Z",
          "updatedAt": "2022-07-19T19:20:58Z"
        },
        {
          "author": "gkostal",
          "authorAssociation": "NONE",
          "body": "@laurencelundblade, the confusion that came up in the CCC discussion isn't whether to include or not include submods.  It was whether a particular \"claim set\" should be modeled as a submod or included as a top level claim.  \r\n\r\nThe particular example being discussed was when either an Intel SGX quote or an AMD SEVSNP report link to a set of runtime claims via recording the hash of these claims in the `report data` field, should this claimset be included as a named submod or as a top level claim?",
          "createdAt": "2022-08-10T12:18:25Z",
          "updatedAt": "2022-08-10T12:18:25Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, understood that it was about more than presence/absence.\r\n\r\nSee #256.\r\n\r\nPersonally, I can imagine a huge range of uses of submodules both in evidence and in AR. And then people will come up with lots of things none of us anticipate.\r\n\r\nI could see maybe having an appendix that gave some ideas and examples if we want to have some detail, but it's a bit hard for me to think what to put in the main normative text other than what I propose.\r\n\r\nFor example, in some cases you might want to mirror the submodule structure from evidence in AR because the verifier is more of a signature checker. In other cases, there might be no submods in evidence, but lots of them in AR because there are a bunch of implied claims and structure from endorsements. I think a common case will be for there to be lots in evidence and none in AR because AR is a summary.",
          "createdAt": "2022-08-11T19:00:18Z",
          "updatedAt": "2022-08-11T19:02:55Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #256 ",
          "createdAt": "2022-10-19T17:39:05Z",
          "updatedAt": "2022-10-19T17:39:05Z"
        }
      ]
    },
    {
      "number": 240,
      "id": "I_kwDOCEWCXc5ObKpY",
      "title": "A reference to SUIT because of use of SUIT manifest",
      "url": "https://github.com/ietf-rats-wg/eat/issues/240",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-23T20:55:55Z",
      "updatedAt": "2022-08-13T19:42:30Z",
      "closedAt": "2022-08-13T19:42:30Z",
      "comments": []
    },
    {
      "number": 241,
      "id": "I_kwDOCEWCXc5ObLRV",
      "title": "$$manifest or $manifest -- use correct type of socket",
      "url": "https://github.com/ietf-rats-wg/eat/issues/241",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-23T21:13:18Z",
      "updatedAt": "2022-08-06T20:05:11Z",
      "closedAt": "2022-08-06T20:05:10Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #245\r\n",
          "createdAt": "2022-07-28T17:00:24Z",
          "updatedAt": "2022-07-28T17:00:24Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by https://github.com/ietf-rats-wg/eat/pull/245",
          "createdAt": "2022-08-06T17:56:12Z",
          "updatedAt": "2022-08-06T17:56:12Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by https://github.com/ietf-rats-wg/eat/pull/245",
          "createdAt": "2022-08-06T17:56:35Z",
          "updatedAt": "2022-08-06T17:56:35Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "x",
          "createdAt": "2022-08-06T17:57:05Z",
          "updatedAt": "2022-08-06T17:57:05Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Why can't I close this issue? When I try it just makes a comment.",
          "createdAt": "2022-08-06T17:57:47Z",
          "updatedAt": "2022-08-06T17:57:47Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Firefox let's me close it",
          "createdAt": "2022-08-06T20:05:10Z",
          "updatedAt": "2022-08-06T20:05:10Z"
        }
      ]
    },
    {
      "number": 242,
      "id": "I_kwDOCEWCXc5Ob4fE",
      "title": "Claim naming consistency",
      "url": "https://github.com/ietf-rats-wg/eat/issues/242",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "laurencelundblade"
      ],
      "labels": [],
      "body": "\"sw\" vs \"software\"; consistently hyphenate; \"nonce\" vs \"eat-nonce\" and a few others. ",
      "createdAt": "2022-07-24T15:10:04Z",
      "updatedAt": "2022-09-09T19:11:59Z",
      "closedAt": "2022-09-09T19:11:58Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #281 ",
          "createdAt": "2022-09-09T19:11:58Z",
          "updatedAt": "2022-09-09T19:11:58Z"
        }
      ]
    },
    {
      "number": 246,
      "id": "I_kwDOCEWCXc5O50Be",
      "title": "Clarify algorithm claim in DEB digest",
      "url": "https://github.com/ietf-rats-wg/eat/issues/246",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It is not clear from the existing text that the algorithm can only be drawn from the COSE/JOSE algorithms registry, except for in the profiles section:  see https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat#section-6.2.7.  Even in the context of profiles, only the COSE algorithm registry is mentioned and not the JOSE registry (https://www.iana.org/assignments/jose/jose.xhtml).  As a result, since the algorithm is not specifically to be drawn from one of the existing registries (except for CWT-based profiles of EAT), then the worst-case assumption is that the algorithm could be arbitrary (and arbitrarily weak).  \r\n\r\nIf the algorithmic identifier from either the COSE or JOSE registries are to be used, then it would be desirable to explicitly define an algorithm claim which would be consistent data types in the CWT/JWT headers respectively.  ",
      "createdAt": "2022-08-01T04:05:12Z",
      "updatedAt": "2022-08-06T20:04:34Z",
      "closedAt": "2022-08-06T20:04:34Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #250",
          "createdAt": "2022-08-06T18:21:50Z",
          "updatedAt": "2022-08-06T18:21:50Z"
        }
      ]
    },
    {
      "number": 249,
      "id": "I_kwDOCEWCXc5PIfXx",
      "title": "DEB is a poor choice of TLA",
      "url": "https://github.com/ietf-rats-wg/eat/issues/249",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Using \"DEB\" to mean Detached EAT Bundle is a very bad conflict.\r\nI was somewhat willing to sit on my hands for this, but now I see it in rats-eat-media-types, and application/eat-deb+cbor is just a disaster.  \r\n\r\n3) DEB is a poor choice of a TLA.  \".deb\" are Debian packages.\r\n   Attestation is going to get tied up with SBOMs and other things, and the cognitive overload of two TLAs will be a problem.\r\n   I don't think that the TLA helps understanding, I'd just go for Detached EAT.\r\n\r\nDEB is used in section 1.2 in the title (which means in the ToC) before it is defined.\r\n\r\neat-deb media type is effective... EAT - Detatched-EAT-Bundle.\r\n\r\n   **Also, \"DEB\" is not used consistently through the document, so maybe you just don't need a TLA here.**\r\n\r\nIf you do, then I suggest DetB ",
      "createdAt": "2022-08-03T18:24:37Z",
      "updatedAt": "2022-08-11T18:28:13Z",
      "closedAt": "2022-08-11T18:28:13Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #252 ",
          "createdAt": "2022-08-11T18:28:13Z",
          "updatedAt": "2022-08-11T18:28:13Z"
        }
      ]
    },
    {
      "number": 251,
      "id": "I_kwDOCEWCXc5PUq01",
      "title": "Detached-digest for JSON Claims-Set not specified",
      "url": "https://github.com/ietf-rats-wg/eat/issues/251",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "laurencelundblade"
      ],
      "labels": [],
      "body": "The text only handles byte-string wrapped CBOR claims sets.\r\n\r\nAlso, the first sentence has bad grammar.",
      "createdAt": "2022-08-06T18:36:18Z",
      "updatedAt": "2022-09-14T19:47:33Z",
      "closedAt": "2022-09-14T19:47:33Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed",
          "createdAt": "2022-09-14T19:47:33Z",
          "updatedAt": "2022-09-14T19:47:33Z"
        }
      ]
    },
    {
      "number": 254,
      "id": "I_kwDOCEWCXc5PfbKd",
      "title": "CDDL validation is broken",
      "url": "https://github.com/ietf-rats-wg/eat/issues/254",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "laurencelundblade"
      ],
      "labels": [],
      "body": "For example, cddl tool is outputting \"extended-claims-label: [10, 262]\" for simple.diag.\r\n\r\nProbably just something minor...",
      "createdAt": "2022-08-09T18:30:14Z",
      "updatedAt": "2022-10-20T01:35:18Z",
      "closedAt": "2022-10-20T01:35:18Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #329 ",
          "createdAt": "2022-10-18T22:47:43Z",
          "updatedAt": "2022-10-18T22:47:43Z"
        }
      ]
    },
    {
      "number": 265,
      "id": "I_kwDOCEWCXc5P249b",
      "title": "Revise DEB security consideration text",
      "url": "https://github.com/ietf-rats-wg/eat/issues/265",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "gmandyam"
      ],
      "labels": [],
      "body": "WIll create PR,  Since CBOR algorithm registry hash algorithms are exclusively used for digest based on https://github.com/ietf-rats-wg/eat/pull/250, the vurrentsecurity considerations in ver. -14 for detached claims set are not applicable (i.e. no possibility of a weak hashing algm. to create the digest). ",
      "createdAt": "2022-08-16T04:19:58Z",
      "updatedAt": "2022-08-31T17:26:02Z",
      "closedAt": "2022-08-31T17:26:02Z",
      "comments": []
    },
    {
      "number": 266,
      "id": "I_kwDOCEWCXc5QDwau",
      "title": "Remove \"The\" from claim titles",
      "url": "https://github.com/ietf-rats-wg/eat/issues/266",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Be consistent with JWT and CWT.",
      "createdAt": "2022-08-18T14:08:06Z",
      "updatedAt": "2022-09-09T19:11:42Z",
      "closedAt": "2022-09-09T19:11:42Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #281 ",
          "createdAt": "2022-09-09T19:11:42Z",
          "updatedAt": "2022-09-09T19:11:42Z"
        }
      ]
    },
    {
      "number": 267,
      "id": "I_kwDOCEWCXc5QD2cZ",
      "title": "Section 6.2 says JWS instead of JWT",
      "url": "https://github.com/ietf-rats-wg/eat/issues/267",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "gmandyam"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2022-08-18T14:25:00Z",
      "updatedAt": "2022-08-31T17:20:37Z",
      "closedAt": "2022-08-31T17:20:37Z",
      "comments": []
    },
    {
      "number": 269,
      "id": "I_kwDOCEWCXc5QNW3k",
      "title": "Broaden swevidence to cover more than just SW measurement evidence",
      "url": "https://github.com/ietf-rats-wg/eat/issues/269",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "gmandyam"
      ],
      "labels": [],
      "body": "Since this is a pluggable format identified by a registered COAP content type, it is conceivable that formats in addition to CoSWID are possible.  Text should be clarified as accordingly.",
      "createdAt": "2022-08-22T01:35:15Z",
      "updatedAt": "2022-08-23T18:43:46Z",
      "closedAt": "2022-08-23T18:43:46Z",
      "comments": []
    },
    {
      "number": 272,
      "id": "I_kwDOCEWCXc5QXt4X",
      "title": "CDDL fixes \"swevidence\" -> \"measurements\"",
      "url": "https://github.com/ietf-rats-wg/eat/issues/272",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "laurencelundblade"
      ],
      "labels": [],
      "body": "Change all the CDDL types and groups to eliminate \"swevidence\", replacing it with \"measurements\"\r\n\r\nThis is to finish out #270",
      "createdAt": "2022-08-23T18:43:09Z",
      "updatedAt": "2022-09-14T19:20:11Z",
      "closedAt": "2022-09-14T19:20:11Z",
      "comments": []
    },
    {
      "number": 276,
      "id": "I_kwDOCEWCXc5Q6xzI",
      "title": "Create a proper Contributors section",
      "url": "https://github.com/ietf-rats-wg/eat/issues/276",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/ietf-rats-wg/eat/commit/2d125d612ea3656ab16dd8213048d49bd108c627 just adds text. Please add the proper kramdown to enable a proper Contributor section. This is an editorial suggested change.",
      "createdAt": "2022-08-31T16:31:22Z",
      "updatedAt": "2022-08-31T16:49:46Z",
      "closedAt": "2022-08-31T16:49:46Z",
      "comments": []
    },
    {
      "number": 288,
      "id": "I_kwDOCEWCXc5SEHiU",
      "title": "Appendix A.1.7 contains too long lines",
      "url": "https://github.com/ietf-rats-wg/eat/issues/288",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The JSON examples in A.1.7 contain lines too long.\r\nAside from that they will require RPC work, they screw up the iddiff output.\r\nPlease take a look at RFC8792 for solutions.\r\n",
      "createdAt": "2022-09-17T16:10:16Z",
      "updatedAt": "2022-10-06T23:35:29Z",
      "closedAt": "2022-10-06T23:35:29Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Yup. Been on my list. Thanks for the helpful reference. Will leave this open until we get them all fixed. Assume this is non-blocking for WGLC.\r\n\r\nSome of this comes from the examples and such being in separate files that are included. Having them in separate files is really good for the CDDL validation. Probably the document makefile and scripts needs to implement something from RFC8792.",
          "createdAt": "2022-09-22T19:41:25Z",
          "updatedAt": "2022-09-22T19:41:25Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #320",
          "createdAt": "2022-10-06T23:35:29Z",
          "updatedAt": "2022-10-06T23:35:29Z"
        }
      ]
    },
    {
      "number": 289,
      "id": "I_kwDOCEWCXc5SEIji",
      "title": "an entity is never a server or a service or a person or organization",
      "url": "https://github.com/ietf-rats-wg/eat/issues/289",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "    > 2) s1.1: _An entity is never a server or a service_ I don't want to\r\n    > disagree with this statement, but as a negative statement in a series\r\n    > of positive statements it must be there because it is guarding against\r\n    > some confusion.  I suggest that it be moved to the end of the section,\r\n    > and that it be expanded to explain what the confusion is.  Or that it\r\n    > be removed.\r\n\r\nI see that it has been removed, sorta.\r\nThe new text is much denser and harder to understand.\r\nI think that the text I complained about has now become:\r\n  _In the EAT context, \"entity\" never refers to a person or organization._\r\n\r\nAgain, if we are making negative statements, it is because we are guarding\r\nagainst some mistake.  Can we state that mistake/confusion?\r\n",
      "createdAt": "2022-09-17T16:28:15Z",
      "updatedAt": "2022-09-26T01:02:16Z",
      "closedAt": "2022-09-26T01:02:16Z",
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "The sentence immediately before the sentence you cite gives the reason. The mistake/confusion that is being addressed is that the term entity has already been defined such that entities may be people or organizations. The sentence in question just says not here. In context, it reads:\r\n```\r\nAn entity also corresponds to a \"system component\", as defined in the Internet Security Glossary [[RFC4949](https://ietf-rats-wg.github.io/eat/draft-ietf-rats-eat.html#RFC4949)]. That glossary also defines \"entity\" and \"system entity\" as something that may be a person or organization as well as a system component. In the EAT context, \"entity\" never refers to a person or organization.\r\n```",
          "createdAt": "2022-09-24T19:29:43Z",
          "updatedAt": "2022-09-24T19:29:43Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This looks fixed in draft-14 to me. (re open if not).",
          "createdAt": "2022-09-26T01:02:16Z",
          "updatedAt": "2022-09-26T01:02:16Z"
        }
      ]
    },
    {
      "number": 290,
      "id": "I_kwDOCEWCXc5SEImu",
      "title": "UEID claim should be opaque with clear minimum and maximums",
      "url": "https://github.com/ietf-rats-wg/eat/issues/290",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "    > 8) length of UEID:\r\n\r\n    > _UEIDs are variable length. All implementations MUST be able to receive\r\n    > UEIDs that are 33 bytes long (1 type byte and 256 bits). No UEID longer\r\n    > than 33 bytes SHOULD be sent._\r\n\r\n    > Sounds a bit like Mr.Ford. You can have your model-T in any colour, as\r\n    > long as it's black.  I had to read it three times.  May I suggest:\r\n\r\n    > _UEIDs are variable length fields between X and 33 bytes in size.  All\r\n    > implementations MUST be able to receive UEIDs that are up to 33 bytes\r\n    > long.  33 bytes accomordates 1 type byte and 256 bits.  UEIDs SHOULD\r\n    > NOT be longer than 33 bytes.\r\n\r\nThis text in section 4.2.1 did not address this change.\r\n",
      "createdAt": "2022-09-17T16:29:11Z",
      "updatedAt": "2022-10-20T17:34:45Z",
      "closedAt": "2022-10-20T17:34:45Z",
      "comments": [
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "    > _The consumer of a UEID MUST treat a UEID as a completely opaque string\r\n    > of bytes and not make any use of its internal structure_ if that's the\r\n    > case, why do you need the type field? :-)\r\n\r\n",
          "createdAt": "2022-09-17T16:29:28Z",
          "updatedAt": "2022-09-17T16:29:28Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The type field is necessary on generation to guarantee no collision between two UEIDs of different types that have accidentally have the same value.  For example, suppose a MAC address happened to have the same value as an IMEI. There's no coordination between IEEE MAC address allocation and 3GPP IMEI allocation. \r\n\r\nIt is also true that none of the three types defined could collide because none are ever the same length. Type 1 is 16, 24 or 32 bytes. Type 2 is 6 or 8 bytes. Type 3 is 14 bytes. So can we remove the type byte because of that?\r\n\r\nNot really, because more types may be defined in the future and one of them may have the same length.\r\n\r\nSo it only a factor on generation to assure uniqueness. The receiver still treats it as opaque.\r\n\r\n(This doesn't answer everything mentioned in this issue. Will get back on the other stuff).",
          "createdAt": "2022-09-22T19:37:27Z",
          "updatedAt": "2022-09-22T19:37:27Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I want to suggest that the normative part of the document limit itself to what the receiver/processor of the claim can expect.\r\nThen provide some non-normative text on generating the UEID.  If you anticipate future types might exist, then it seems that an IANA Registry would be required.\r\nAlso be aware that there is now a uuidrev WG, and perhaps it enough to say that the UEID is UUID, and then describe ways in which an MAC address or an IMEI may be transformed into an UUID (there definitely is a mac address formula).",
          "createdAt": "2022-09-23T09:28:05Z",
          "updatedAt": "2022-09-23T09:28:05Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "New types require standards action. I think that removes the need for a registry.\r\n\r\nI don't think we can move the use of the type byte to non-normative because the guarantee of uniqueness would be lost.\r\n\r\nI noticed the uuidrev WG, but don't think we want to delay EAT for it's outcome (and don't think UUID as defined today works here. Rich Salz agreed with some of this.",
          "createdAt": "2022-09-23T22:12:24Z",
          "updatedAt": "2022-09-23T22:12:24Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Your suggestion 8) for improved text on the length of a UEID was good and there were changes to 4.2.1 in draft-14 to address it. Do you have specific comments on 4.2.1 in draft-14?",
          "createdAt": "2022-09-23T22:19:44Z",
          "updatedAt": "2022-09-23T22:19:44Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "\nLaurence Lundblade ***@***.***> wrote:\n    > I noticed the uuidrev WG, but don't think we want to delay EAT for it's\n    > outcome (and don't think UUID as defined today works here. Rich Salz\n    > agreed with some of this.\n\nYou don't have to wait.\nYou just define the UEID as a UUID, and then any revisions that uuidrev does\nare automatically include. UUIDs already have a type in them.\n\n(MAC->UUID is already a thing.  EAT might need to ask uuidrev to map IMEI to\nUUID, but that wouldn't delay EAT)\n\n--\nMichael Richardson ***@***.***>, Sandelman Software Works\n -= IPv6 IoT consulting =-\n\n\n\n",
          "createdAt": "2022-09-23T22:48:43Z",
          "updatedAt": "2022-09-23T22:48:43Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Laurence Lundblade ***@***.***> wrote:\n    > Your suggestion 8) for improved text on the length of a UEID was good\n    > and there were changes to 4.2.1 in draft-14 to address it. Do you have\n    > specific comments on 4.2.1 in draft-14?\n\nI dunno. The way-too-wide iddiff situation keeps me from seeing the changes.\n\n",
          "createdAt": "2022-09-23T22:49:27Z",
          "updatedAt": "2022-09-23T22:49:27Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Hopefully you can find a diff and see the improved wording now that the long lines are fixed.\r\n\r\n\r\nUEID has characteristics that go beyond what a UUID is defined to be. We'd still have to describe what a UUID identifies, the nature of its permanence and such. There's still be a lot of text.\r\n\r\nWe can't make normative reference to a draft. We need a normative reference. It would have to be to 4122. What is in 4122 today isn't sufficient. \r\n\r\nAn important characteristic of MAC-based UEIDs is that they can be very short (7 bytes in total). IMEI is also shorter than a full random UEID. A future type could also be short (e.g., PEN + serial number). UUIDs are not accommodating that. These are short because they are based on central registration and assignment. The main points of UUID is to not need any registration or assignment.\r\n\r\nUEIDs have been in the document for years now. They have always been distinct from UUIDs. There seems to be good consensus around them. ",
          "createdAt": "2022-10-12T17:29:25Z",
          "updatedAt": "2022-10-12T17:29:25Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "You can use this form to upload txt versions of the doc and set the column width and do a diff: https://www.ietf.org/rfcdiff, i.e., to diff between -14 and -16 for example.\n\n \n\nFrom: Laurence Lundblade ***@***.***>\nReply-To: ietf-rats-wg/eat ***@***.***>\nDate: Wednesday, October 12, 2022 at 1:29 PM\nTo: ietf-rats-wg/eat ***@***.***>\nCc: Subscribed ***@***.***>\nSubject: Re: [ietf-rats-wg/eat] UEID claim should be opaque with clear minimum and maximums (Issue #290)\n\n \n\nHopefully you can find a diff and see the improved wording now that the long lines are fixed.\n\nUEID has characteristics that go beyond what a UUID is defined to be. We'd still have to describe what a UUID identifies, the nature of its permanence and such. There's still be a lot of text.\n\nWe can't make normative reference to a draft. We need a normative reference. It would have to be to 4122. What is in 4122 today isn't sufficient.\n\nAn important characteristic of MAC-based UEIDs is that they can be very short (7 bytes in total). IMEI is also shorter than a full random UEID. A future type could also be short (e.g., PEN + serial number). UUIDs are not accommodating that. These are short because they are based on central registration and assignment. The main points of UUID is to not need any registration or assignment.\n\nUEIDs have been in the document for years now. They have always been distinct from UUIDs. There seems to be good consensus around them.\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\n\n",
          "createdAt": "2022-10-12T17:51:10Z",
          "updatedAt": "2022-10-12T17:51:10Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "All required changes addressed in drafts -14 and beyond",
          "createdAt": "2022-10-20T17:34:45Z",
          "updatedAt": "2022-10-20T17:34:45Z"
        }
      ]
    },
    {
      "number": 291,
      "id": "I_kwDOCEWCXc5SEIq7",
      "title": "can SUEID and UEID be identical?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/291",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "    > Can the SUEID be *identical* to the UEID?  Or, MUST it be different for\r\n    > privacy reasons?\r\n\r\nAlso not dealt with.\r\n\r\n    > How are labels for the SUEID assigned? (\"FDO\")?\r\n\r\nNot addressed.\r\n",
      "createdAt": "2022-09-17T16:30:16Z",
      "updatedAt": "2022-12-12T19:33:08Z",
      "closedAt": "2022-12-12T19:33:08Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, SUEID and UEID can have the same value, but if SUEID is changed, UEID can't change, because the rule for UEID is that it can't change. I think the rules are clear and we don't need to state this explicitly but am open to adding some text to explain it.\r\n\r\nEAT has no privacy rules. Just privacy considerations. Section 8.1 gives coverage to UEID and SUEID.\r\n\r\n\r\nThe text explains reasonably well that assignment of SUEID labels is outside the scope of this document. (PR #328 does change \"FDO\" to \"XYZ\" because \"FDO\" doesn't actually exist in FIDO on-boarding, but you comment was not about that).\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2022-10-18T20:54:33Z",
          "updatedAt": "2022-10-18T20:54:33Z"
        },
        {
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A profile could add constraints between UEID and SUEID if needed, but the base EAT has no restrictions about whether they can or cannot match.  My believe is that the draft is fine and this issue is a sufficient record of the discussion.  This was discussed in today's interim meeting.",
          "createdAt": "2022-12-12T15:22:38Z",
          "updatedAt": "2022-12-12T15:22:38Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed per discussion at virtual interim December 12, 2023",
          "createdAt": "2022-12-12T19:33:08Z",
          "updatedAt": "2022-12-12T19:33:08Z"
        }
      ]
    },
    {
      "number": 292,
      "id": "I_kwDOCEWCXc5SEItH",
      "title": "please get Google Android team review of Location Claim",
      "url": "https://github.com/ietf-rats-wg/eat/issues/292",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "    > 10) The Location Claim (location) I suggest that we find someone from\r\n    > the Google Android team to review this.  They have specific reasons why\r\n    > they never attest this value, and permit devices to lie about location.\r\n\r\nNot addressed.\r\n",
      "createdAt": "2022-09-17T16:30:54Z",
      "updatedAt": "2022-09-19T15:33:07Z",
      "closedAt": "2022-09-19T15:33:07Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "a) This was not enumerated as one of the blockers in https://mailarchive.ietf.org/arch/msg/rats/IZbS3lpbN6mfBR4IbeTv60DoaiY/\r\n\r\nb)  Strange that only a review is being requested from the \"Android team\".  Moreover, it seems that an :Android team\" review is more important than a WIndows team or IOS team review.  Also note that it is not clear who the \"Android team\" would be,, and whether their assessment actually represents the Android ecosystem in its entirety.\r\n\r\nc)  Couldn't find evidence of a formal Android team review in the Geopriv standards:  see https://mailarchive.ietf.org/arch/browse/geopriv/.  \r\n\r\nd) Attested location was reviewed by Google/MS in the context of the Web Authn API L1 (https://www.w3.org/TR/webauthn-1/#sctn-location-extension).  This work preceded the RATS WG efforts.  \r\n\r\ne) Could not find where in IETF RFC guidelines where editors are obligated to get formal reviews conducted by vendors of proprietary platforms.  We can re-open this issue if someone can provide a pointer to which IETF guideline requires this.",
          "createdAt": "2022-09-17T21:16:33Z",
          "updatedAt": "2022-09-17T21:16:33Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "It should be noted that location depends on external entities (satellites) for its values which an Attesting Environment can't be certain are correct (as a jamming attack could alter geo-coordinates). The RATS architecture expects the Attesting Environment is design in such a way that the Target Environment can't lie about the measurement produced. In the case of location claim, these exceptions should be noted.",
          "createdAt": "2022-09-19T15:30:01Z",
          "updatedAt": "2022-09-19T15:30:01Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">It should be noted that location depends on external entities (satellites) for its values which an Attesting Environment can't be certain are correct (as a jamming attack could alter geo-coordinates).\r\n\r\nSuch a statement assumes that satellites are the only way to derive location.  Also, this issue was opened with respect to a request from only the \"Android team\".  The point being raised above should be discussed in a different issue.",
          "createdAt": "2022-09-19T15:33:07Z",
          "updatedAt": "2022-09-19T15:33:07Z"
        }
      ]
    },
    {
      "number": 293,
      "id": "I_kwDOCEWCXc5SEIvy",
      "title": "measurement results claim --- seems too general purpose to be useful",
      "url": "https://github.com/ietf-rats-wg/eat/issues/293",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "    > 12) 4.2.18. The Measurement Results Claim (measurement-results) This\r\n    > claim is a general-purpose structure for reporting comparison of\r\n    > measurements to expected Reference Values. This claim provides a simple\r\n    > standard way to report the result of a comparison as success, failure,\r\n    > fail to run, ...\r\n\r\n    > This feels like something that should be accomodated with some kind of\r\n    > vendor specific extension process.  I don't think that the document or\r\n    > specification benefits from having a claim that is intentionally\r\n    > specific.\r\n\r\n    > I would, in particular, not want it to be sent from the Verifier to RP,\r\n    > since I would have no idea what's inside it.\r\n\r\nSome changes were made, but none addresses the core of the comment.\r\n",
      "createdAt": "2022-09-17T16:31:32Z",
      "updatedAt": "2022-12-12T15:29:02Z",
      "closedAt": "2022-12-12T15:29:02Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The claim definition explains that a receiver of this claim will not be able to interpret them without additional information in most cases. It is up front about this.\r\n\r\nTo a varying degree this is also true of other work and definitions in EAT and RATS. This is because EAT and RATS are for widely varying device architecture and operating systems. Attestations system will also vary in the checks they provide. EAT submodules will vary from device to device. CoRIM and CoMID and even AR4SI are similar in that the receiver will need additional information.\r\n\r\nThat said, it is possible to produce a very simple measurement result that indicates \u201call checks passed\u201d. (The receiver still has to find out what all checks where done from an outside source because we are not defining an architecture to describe all possible system checking).\r\n\r\nThe claim is not specific to any particularly measurement system and should accommodate the reporting of measurements results from measurement schemes from many vendors.",
          "createdAt": "2022-10-21T22:40:53Z",
          "updatedAt": "2022-10-21T22:40:53Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "As per decision in RATS interim WG meeting on Dec. 12, 2022, it was decided to address the concerns underlying this issue in the AR4SI draft:  https://github.com/ietf-rats-wg/draft-ietf-rats-ar4si/issues",
          "createdAt": "2022-12-12T15:29:02Z",
          "updatedAt": "2022-12-12T15:29:02Z"
        }
      ]
    },
    {
      "number": 294,
      "id": "I_kwDOCEWCXc5SEIyG",
      "title": "what is purpose of tolerating jti/cti claims",
      "url": "https://github.com/ietf-rats-wg/eat/issues/294",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "    > 13) 4.3.1. Token ID Claim (cti and jti) Should it even be present?\r\n\r\nA sentence was removed, but it still seems to me that cti and jti MUST be\r\nignored if present, and SHOULD not be sent.\r\n",
      "createdAt": "2022-09-17T16:32:09Z",
      "updatedAt": "2022-09-26T00:17:27Z",
      "closedAt": "2022-09-26T00:17:27Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "There are several instances where an attestation is required but a nonce is not possible due to transport limitations (e.g. one-way communication such as BLE-AD).  A freshness mechanism supported by the token issuer is better than nothing in these situations.\r\n\r\nIf the intent with this issue  is to cover the case where both a cti and nonce are sent (CWT example), then the cti cannot be ignored if it is included in the payload used for generation of the signature.  It could be ignored for the purpose of freshness assessment in that case, but the proposed text in the issue states that cti  \"MUST be ignored if present\" which is not the same.",
          "createdAt": "2022-09-19T15:00:44Z",
          "updatedAt": "2022-09-19T15:10:12Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "At this point we exclude no claims from EAT for any reason. Anything in the IANA registries is fair game. Seems, we'd have to have a really good reason to explicitly, universally and categorically exclude a particular claim.\r\n\r\nDo you have a particular problem in mind? I can't think of anything myself.\r\n\r\nI don't think Giri's freshness example is the only use for CTI/JTI. Someone might just want a good unique ID for tracking tokens in a database that doesn't depend on anything else like time, device ID, ...\r\n\r\n\r\n",
          "createdAt": "2022-09-22T19:23:24Z",
          "updatedAt": "2022-09-22T19:23:24Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">I don't think Giri's freshness example is the only use for CTI/JTI. Someone might just want a good unique ID for tracking tokens in a database that doesn't depend on anything else like time, device ID, ...\r\n\r\nCTA WAVE's Common Access Token, which has been presented at the IETF CDNI WG (https://datatracker.ietf.org/meeting/114/materials/agenda-114-cdni-01), makes use of cti,  In this case, the CWT issuer is distinct from the client that actually relays the token and is never in direct contact with the relying party (in this case a Content Delivery Network).  \r\n\r\nThere may be comparable cases such as delegated attestation, where the attester is not integrated with the entity but the entity must relay the token on behalf of the attester to the relying party.  ",
          "createdAt": "2022-09-22T19:55:19Z",
          "updatedAt": "2022-09-22T19:55:19Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Okay, let me ask the question differently: why are jti/cti mentioned at all?",
          "createdAt": "2022-09-23T09:24:18Z",
          "updatedAt": "2022-09-23T09:24:18Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "#308 removes this section, since cti/jti can be used without this section and there are not limitations on use a la those for iat.",
          "createdAt": "2022-09-24T19:24:34Z",
          "updatedAt": "2022-09-24T19:24:34Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Claims where removed",
          "createdAt": "2022-09-26T00:17:27Z",
          "updatedAt": "2022-09-26T00:17:27Z"
        }
      ]
    },
    {
      "number": 295,
      "id": "I_kwDOCEWCXc5SEI02",
      "title": "how to find/label Endorsement and Verification Keys",
      "url": "https://github.com/ietf-rats-wg/eat/issues/295",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "Moving this to an appendix does not really solve the problem.\r\n\r\n    > 14) I think that section 6 serves no purpose.  _Endorsements and\r\n    > Verification Keys_ _There is not yet any standard format(s) for an\r\n    > Endorsement._\r\n\r\nIt was moved to an appendix.\r\n   _There is not one standard method._\r\n\r\nThis sure seems like a bug to me.\r\nI'd really like EAT to specify (create a standard) a way to use the kid to\r\nidentify keys.  Maybe there have to be n methods, and the profile will\r\nhave pick one of the n methods.\r\n\r\nI'd like to see text that says things like:\r\n\r\n    When the endorsement is in the form of an RFC5280 PKIX certificate(*)\r\n    then Reference Values and implied claims can be carried in X.509 v3 extensions. ...\r\n\r\n(*)\"X.509\" is a meaningless term from the ITU-T of the 1990s\r\n",
      "createdAt": "2022-09-17T16:32:55Z",
      "updatedAt": "2022-12-12T19:33:25Z",
      "closedAt": "2022-12-12T19:33:24Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I spent some time thinking about this.\r\n\r\nI can't think of anything to say about use of the kid in this document. Seems like COSE says most of what is there is to say in a generic way.\r\n\r\nI think it would be useful and interesting to write a separate document that describes how to use deterministic creation of an ECDSA key pair and kid from a single random seed and describe how it can fit in with the end-end implementation of EAT. But this is only one specific end-end system. \r\n\r\nI definitely think we should not do anything normative with endorsements in EAT. They are not well defined yet. When they are defined, I think a follow on standard to EAT would be the place to down how end-end keying works for them.\r\n\r\nThis is also all taking a clue from COSE, JOSE, CWT and JWT that don't go into any about key identification. I know we don't have to do exactly what they did, but unless there is a clear path, I prefer to do the same as they did.\r\n\r\nBasically I think end-end keying systems seems like an overreach for this EAT document at this point, anything here would be substantial work, we need to get EAT done, but I think they would be great in follow-on documents that take particular focus on particular end-end keying systems  -- one for X.509(*) endorsements, one for basic ECDSA from a seed,...",
          "createdAt": "2022-09-22T19:11:08Z",
          "updatedAt": "2022-09-22T19:11:08Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm not saying to standardize endorsements. \r\nI'm saying then when Evidence is signed that the Attester MUST put in a clear kid that identities the key which is being used to sign.  Hash of SPKI would be fine.\r\nCWT/COSE, JWT/JOSE quite reasonably punted on what kid looks like.\r\nThey punted to *US* to specify it, and we should do exactly that.\r\nIt is *not* overreach for EAT to specify at least one format.  ",
          "createdAt": "2022-09-23T07:59:03Z",
          "updatedAt": "2022-09-23T07:59:03Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">CWT/COSE, JWT/JOSE quite reasonably punted on what kid looks like.\r\n\r\nCan you provide any kind of of pointers to the text in the above specifications where this is stated?  \r\n\r\nMy interpretation of the COSE text below does not match the above interpretation: \r\n\r\n\"Applications MUST NOT assume that 'kid' values are unique.  There may be more than one key with the same 'kid' value, so all of the keys associated with this 'kid' may need to be checked.  The internal structure of 'kid' values is not defined and cannot be relied on by applications.  Key identifier values are hints about which key to use.  This is not a security-critical field.\"\r\n\r\n>I'm saying then when Evidence is signed that the Attester MUST put in a clear kid that identities the key which is being used to sign.\r\n\r\nThere is no reason for this to be a MUST requirement.  There are existing implementations of EAT that work without it, and I believe the quoted text above from the COSE spec provides sufficient reason as to why it isn't necessary.  If someone who is interested wants to add interoperable semantics to kid then it can be done separately from EAT (I suspect such an effort will not gain much traction in terms of commercial implementations).\r\n\r\nI would recommend taking this back to the list and try to obtain consensus within the WG as to whether (a) it is important to define how kid values are determined, and (b) whether this should only be specified in the EAT document.  ",
          "createdAt": "2022-09-23T16:37:30Z",
          "updatedAt": "2022-09-23T16:37:30Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "There's a lot of good examples in Appendix F many of which are reasonably clear and direct, for example an AKI.\r\n\r\nI agree with Giri -- the thing to do is get some consensus on the WG list for some specific stuff and a specific direction to strike out on beyond what is here.",
          "createdAt": "2022-09-24T16:50:55Z",
          "updatedAt": "2022-09-24T16:50:55Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed per discussion at virtual interim December 12, 2023",
          "createdAt": "2022-12-12T19:33:24Z",
          "updatedAt": "2022-12-12T19:33:24Z"
        }
      ]
    },
    {
      "number": 296,
      "id": "I_kwDOCEWCXc5SEI62",
      "title": "IANA considerations, expert review guidance needs clarity",
      "url": "https://github.com/ietf-rats-wg/eat/issues/296",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "Since we are re-using the CWT/JWT claim registry (which I support), we have to live within their expert review boundary.\r\nWe can, however, specify additional considerations, or we can allow for easier allocation by reference to this document.\r\n\r\n\r\n\r\n    > 18) Section 9.2 feels like it is amending the IANA Considerations for\r\n    > CWT/JWT Claims.  I think if we had some kind of sub-registry, we would\r\n    > clearly be allowed to do that.  Given how things are, I'm not sure what\r\n    > we can do, but maybe this section should be written more clearly as\r\n    > advice to the Expert Reviews.\r\n\r\nNo obvious advice has been added.\r\n",
      "createdAt": "2022-09-17T16:34:40Z",
      "updatedAt": "2022-12-12T19:38:22Z",
      "closedAt": "2022-12-12T19:38:22Z",
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Section 10.2 (in -14 and later) does not amend the IANA Considerations for either CWT or JWT registries. It includes some language stating that EAT claims belong in both with some text to indicate how to handle that. The instructions are for folks registering claims, not for experts reviewing claims. Expert review should be as before. The entirety of [10.2](https://ietf-rats-wg.github.io/eat/draft-ietf-rats-eat.html#name-claims-registered-by-this-d) from the current editor's copy of -15 is below.\r\n\r\n```\r\nThis specification adds the following values to the \"JSON Web Token Claims\" registry established by [[RFC7519](https://ietf-rats-wg.github.io/eat/draft-ietf-rats-eat.html#RFC7519)] and the \"CBOR Web Token Claims Registry\" established by [[RFC8392](https://ietf-rats-wg.github.io/eat/draft-ietf-rats-eat.html#RFC8392)]. Each entry below is an addition to both registries.\r\n\r\nThe \"Claim Description\", \"Change Controller\" and \"Specification Documents\" are common and equivalent for the JWT and CWT registries. The \"Claim Key\" and \"Claim Value Types(s)\" are for the CWT registry only. The \"Claim Name\" is as defined for the CWT registry, not the JWT registry. The \"JWT Claim Name\" is equivalent to the \"Claim Name\" in the JWT registry.\r\n```",
          "createdAt": "2022-09-24T19:50:50Z",
          "updatedAt": "2022-09-24T19:50:50Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Michael's original comment 18) was on draft-13 which had a section 9.2 titled \"Claims Characteristics\".  Our response to comment 18) has been to move \"9.2 Claims Characteristics\" to a non-normative appendix in draft-14. Other's have suggested this text wasn't suited for IANA processing (I think IANA themselves). We're not creating a sub-registry so we can't impose new normative expert review criteria.\r\n\r\nThe \"Claims Characteristics\" Appendix is framed up a non-normative design guidance. It is not framed up as expert review criteria, but an expert could consider it.\r\n\r\nI think the non-normative appendix as a reasonable balance between create a sub-registry for attestation-oriented claims and not providing any comment at all.\r\n\r\nSo there was definitely a response to Michael's comment 18) and I don't see anything further is necessary.\r\n",
          "createdAt": "2022-10-01T23:34:42Z",
          "updatedAt": "2022-10-01T23:34:42Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Close per discussion in London and per request for input on mail list. https://mailarchive.ietf.org/arch/msg/rats/I3oJZdevJ8rVR6pgbeyLvGL80Sw/",
          "createdAt": "2022-12-12T19:38:21Z",
          "updatedAt": "2022-12-12T19:38:21Z"
        }
      ]
    },
    {
      "number": 297,
      "id": "I_kwDOCEWCXc5SEI8d",
      "title": "some advice on freshness would be good",
      "url": "https://github.com/ietf-rats-wg/eat/issues/297",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "    > 20) the Security Considerations section is inadequate.\r\n\r\n    > I think that the document should address freshness with reference to\r\n    > the Architecture document.  (no, not in the SC, but the SC needs to\r\n    > refer to it when talking about stale Evidence) It is probably the case\r\n    > that _Implicit Timekeeping using Nonces_ is often the right answer when\r\n    > EAT is transported over TLS.  The nonce can be generated via a TLE\r\n    > Exporter, and I'd like to see this defined.  Since TLS exporters need a\r\n    > string to hash through, that should go into a new section.  I don't\r\n    > think this needs/should be left to the profile.\r\n\r\n    > For other freshness mechanisms, the connection to the EAT Nonce perhaps\r\n    > needs to be made very very clear.  Like, hit them over the head.\r\n\r\n",
      "createdAt": "2022-09-17T16:35:09Z",
      "updatedAt": "2022-11-25T21:26:51Z",
      "closedAt": "2022-11-25T21:26:51Z",
      "comments": [
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think the text in the privacy consideration section talking about replay attacks (which is related to freshness) is not useful. \r\nNothing in the EAT spec supports reply protection with the  \"cti\"/\"jti\" claims:\r\n\r\n## Replay Protection\r\n\r\nEAT offers 2 primary mechanisms for token replay protection (also sometimes\r\nknown as token \"freshness\"):  the \"cti\"/\"jti\" claim and the EAT nonce claim.  The \"cti\"/\"jti\" claim\r\nin a CWT/JWT is a field that may be optionally included in the EAT and is in general\r\nderived on the same device in which the entity is instantiated.  The EAT nonce claim is based\r\non a value that is usually derived remotely (outside of the entity).  These claims can be used\r\nto extract and convey personally-identifying information either inadvertently or by intention.  For instance,\r\nan implementor may choose a cti that is equivalent to a username associated with the device (e.g., account\r\nlogin).  If the token is inspected by a 3rd-party then this information could be used to identify the source\r\nof the token or an account associated with the token (e.g., if the account name is used to derive the nonce).  In order\r\nto avoid the conveyance of privacy-related information in either the cti/jti or nonce claims, these fields\r\nshould be derived using a salt that originates from a true and reliable random number generator or any other\r\nsource of randomness that would still meet the target system requirements for replay protection.\r\n\r\n",
          "createdAt": "2022-09-19T10:40:06Z",
          "updatedAt": "2022-09-19T10:40:06Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "IMHO the EAT document should do two things. Offer nonce and timestamp-based replay protection. There are claims available, namely \r\n\r\n* Nonce claim\r\n* Timestamp claim (iat)\r\n\r\nIMHO the epoch claim cannot be used for replay protection althought the RATS architecture says so. \r\n",
          "createdAt": "2022-09-19T10:44:42Z",
          "updatedAt": "2022-09-19T10:44:42Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I am a little surprised by your assertion that\r\n> the epoch claim cannot be used for replay protection althought the RATS architecture says so.\r\n\r\nBecause the RATS architecture literally states in the first sentence of https://www.ietf.org/archive/id/draft-ietf-rats-architecture-21.html#section-12.3 'Epoch ID-based Attestation' that\r\n> Epoch IDs, described in [Section 10.3](https://www.ietf.org/archive/id/draft-ietf-rats-architecture-21.html#epochfreshness), can be tampered with, replayed, dropped, delayed, and reordered by an attacker.\r\n\r\n\r\n",
          "createdAt": "2022-09-19T11:51:08Z",
          "updatedAt": "2022-09-19T11:51:08Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Agree with Hannes that EAT should offer only nonce and time stamp claims.\r\n\r\nAgree with Henk that Epoch IDs can provide freshness, but don't think we need to sort that out here and don't think EAT should define claims to hold epoch IDs. That seems like a good thing to do in an epoch document.\r\n\r\nAlso agree that EAT needs some better text in security considerations on freshness. Will leave this open until that is settled.\r\n",
          "createdAt": "2022-09-26T22:02:46Z",
          "updatedAt": "2022-09-26T22:02:46Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">Also agree that EAT needs some better text in security considerations on freshness. Will leave this open until that is settled.\r\n\r\nWe seem to be going in circles here.  There already was some advice in sec cons on the use of nonce in the -14 Transport Security section, but there was a PR proposed to remove this section in its entirety which was just merged:  see https://github.com/ietf-rats-wg/eat/pull/298.  \r\n\r\nPerhaps it would be better if only the editors propose PR's, and make them in response to open must-fix issues until the spec is stable.\r\n",
          "createdAt": "2022-09-26T22:40:55Z",
          "updatedAt": "2022-09-26T22:40:55Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think -14 addressed freshness well enough. I think the soon-to-be published -15 may do the job, but not sure. It has a new freshness section in security considerations.\r\n\r\nThinking to leave this open until -15 is published and reviewed in relation to this comment (we're working to get -15 out soon (but note that it won't address every open issue)).",
          "createdAt": "2022-09-27T23:28:39Z",
          "updatedAt": "2022-09-27T23:28:39Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Now that EAT-15 is published, please comment on what is says about the nonce and freshness so we can close this out.   Search for \"nonce\" and \"freshness\" and read all the found text. It's not very much so its easier to read the text than the diff. We reference RATS architecture and take a less-is-more approach.",
          "createdAt": "2022-10-05T19:34:35Z",
          "updatedAt": "2022-10-05T19:34:35Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as this has been open and advertised for several months and there have been no comments. It has been advertised in person at the IETF 115 meeting, the RATS mailing list and here in GitHub.",
          "createdAt": "2022-11-25T21:26:51Z",
          "updatedAt": "2022-11-25T21:26:51Z"
        }
      ]
    },
    {
      "number": 300,
      "id": "I_kwDOCEWCXc5SJdex",
      "title": "Should spoofed or corrupted location be addressed in the specification?",
      "url": "https://github.com/ietf-rats-wg/eat/issues/300",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See discussion in https://github.com/ietf-rats-wg/eat/issues/292.  \r\n\r\nThe attester may not always have access to a trusted location source.  Even if the attester includes a GNSS engine within its own security boundary, it may not be able to control the external sources of location information (e.g. NTP, satellite info, etc.).  In addition, platform implementations of location may allow for spoofed location.\r\n\r\nMost likely non-normative guidance on this could suffice.",
      "createdAt": "2022-09-19T16:23:55Z",
      "updatedAt": "2022-09-23T18:51:24Z",
      "closedAt": "2022-09-23T18:51:23Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "See #301 as a response to this.",
          "createdAt": "2022-09-20T16:00:22Z",
          "updatedAt": "2022-09-20T16:00:22Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I believe #301 is complete enough to merge and that it addresses this issue. Will merge in a day or so unless there are objections.",
          "createdAt": "2022-09-22T18:43:17Z",
          "updatedAt": "2022-09-22T18:43:17Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #301",
          "createdAt": "2022-09-23T18:51:23Z",
          "updatedAt": "2022-09-23T18:51:23Z"
        }
      ]
    },
    {
      "number": 316,
      "id": "I_kwDOCEWCXc5TID-q",
      "title": "readers must be familiar with CDDL and CBOR diagnostic format",
      "url": "https://github.com/ietf-rats-wg/eat/issues/316",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "It should be made clear in the Terminology section that knowing both CDDL and CBOR diagnostic is a prerequisite for understanding the document.",
      "createdAt": "2022-10-03T12:07:14Z",
      "updatedAt": "2022-10-11T17:56:34Z",
      "closedAt": "2022-10-11T17:56:34Z",
      "comments": []
    },
    {
      "number": 334,
      "id": "I_kwDOCEWCXc5Ul96a",
      "title": "add ref to EAT media types",
      "url": "https://github.com/ietf-rats-wg/eat/issues/334",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "```\r\n   This document registers no media or content types for the\r\n   identification of the type of EAT, its serialization format or\r\n   security envelope.  That is left for a follow-on document.\r\n```\r\n\r\n[I-D.ietf-rats-eat-media-type](https://datatracker.ietf.org/doc/draft-ietf-rats-eat-media-type) is adopted, we should (informatively) reference it -- no reason not to.\r\n\r\n",
      "createdAt": "2022-10-22T10:55:26Z",
      "updatedAt": "2022-10-22T17:00:01Z",
      "closedAt": "2022-10-22T17:00:01Z",
      "comments": []
    },
    {
      "number": 337,
      "id": "I_kwDOCEWCXc5Vv19s",
      "title": "What are \"attestations\"",
      "url": "https://github.com/ietf-rats-wg/eat/issues/337",
      "state": "CLOSED",
      "author": "dthaler",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Originally raised by Henk during IETF 115 meeting:\r\nSection 4.3.3 has\r\n> 4 -- Certificate Issuance:\r\nCertification Authorities (CA's) may require attestations prior to the issuance of certificates related to keypairs hosted at the entity. An EAT may be used as part of the certificate signing request (CSR).\"\r\n\r\n(note \"attestations\" in that text)\r\n\r\nI suspect above means \"Attestation Results\" instead of \"attestations\"",
      "createdAt": "2022-11-07T16:05:01Z",
      "updatedAt": "2022-12-05T15:41:18Z",
      "closedAt": "2022-12-02T18:37:46Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">I suspect above means \"Attestation Results\" instead of \"attestations\"\r\n\r\nNo.  In this case, CA is the relying party.  Moreover, CA can be a verifier if the FIDO definition of RP operations is assumed:  https://www.w3.org/TR/webauthn-2/#sctn-rp-operations.  This was the definition I assumed when writing this text.   As can be seen, neither the term \"attestation evidence\" nor \"attestation results\" appears in the FIDO document.\r\n\r\nFor whatever reason, the RATS Architecture document states that an RP can only consume attestation results and not evidence:  https://datatracker.ietf.org/doc/html/draft-ietf-rats-architecture#section-4.1.  \r\n\r\nGiven that the FIDO/Webauthn specification preceded RATS Architecture by several years (and also had demonstrable \"running code\" well before the RATS WG was even chartered), I think that there should have been a detailed discussion in the RATS Arch. document contrasting this new definition of Relying Party role with the previous one, and a full justification as to why the RATS definition of roles should supersede the FIDO definition.\r\n\r\nThe PR in https://github.com/ietf-rats-wg/eat/pull/338 appears to align with RATS arch.  Please review.",
          "createdAt": "2022-11-16T16:16:38Z",
          "updatedAt": "2022-11-16T16:16:38Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "The roles (and thereby the duties) of Verifier and Relying Party can be composed in a single entity. My assumption is, that in FIDO the Relying Party is a composite of RATS Verifier and RATS Relying Party. Does that sound feasible? The RATS architecture does not intentionally \"supersedes\" anything, I think. The RATS architecture enables:\r\n\r\n1. a mapping to existing remote attestation mechanisms (be it stronger/augmented web authentication, TCG remote attestation, or TEE remote attestation)\r\n2. a way to map and integrate remote attestation into existing Internet protocols (originating from IETF or elsewhere)\r\n\r\nI am a bit surprised by the timing of this issue, as the RATS architecture was extensively discussed over the years, in some years via well-announced, continuous weekly meetings.  ",
          "createdAt": "2022-12-03T11:57:41Z",
          "updatedAt": "2022-12-03T11:57:41Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "> My assumption is, that in FIDO the Relying Party is a composite of RATS Verifier and RATS Relying Party. Does that sound feasible? The RATS architecture does not intentionally \"supersedes\" anything.\r\n\r\nFor an independent reader, it sure seems that the RATS architecture is intended to be authoritative - there is no text in the Architecture document that even acknowledges the prior FIDO definition (outside of a passing reference to the Webauthn specification).  At very least I assume we agree that both definitions are equally valid in light of the EAT specification.\r\n\r\n>I am a bit surprised by the timing of this issue\r\n\r\nBy \"this issue\" I am assuming you are referring to https://github.com/ietf-rats-wg/eat/issues/337.  I agree - this issue should not have been filed.",
          "createdAt": "2022-12-03T16:50:18Z",
          "updatedAt": "2022-12-03T16:50:18Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "> By \"this issue\" I am assuming you are referring to https://github.com/ietf-rats-wg/eat/issues/337. I agree - this issue should not have been filed.\r\n\r\nHa! \ud83d\ude0a No, I was referring to your post-merge comment. Also, I did not write that it is not authoritative, I highlighted how it does not conflict, but rather provides the flexibility to map different approaches.\r\n\r\nThere are different sets of requirements on remote attestation in different contexts. And FIDO authentication has a different focus than, for example, TCG remote attestation. For example, for quite some while Global Platform provides approaches how to combine FIDO authentication with their approach of evidence production, which aligns with RATS. Another example is the CCC (Confidential Computing Consortium) that shows how to unify remote attestation across different HW-specific embodiments based on RATS.\r\n\r\nFIDO actually provides one of the use-cases RATS is based on (https://www.ietf.org/archive/id/draft-ietf-rats-architecture-22.html#name-fido-biometric-authenticati). Calling that \"a passing reference\" reads like a bit of an exaggeration to me, tbh. The RATS architecture does neither dismiss or supersede FIDO/WebAuthN approaches. It provides generic terminology and a framework to relate and combine different approaches, so stakeholders with different sets of requirements (and different terminology used) can relate and combine work better - that is where the RATS architecture can be called authoritative, I think.",
          "createdAt": "2022-12-05T10:39:26Z",
          "updatedAt": "2022-12-05T10:39:26Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">>By \"this issue\" I am assuming you are referring to https://github.com/ietf-rats-wg/eat/issues/337. I agree - this issue should not have been filed.\r\n\r\n>Ha! \ud83d\ude0a No, I was referring to your post-merge comment. Also, I did not write that it is not authoritative, I highlighted how it does not conflict, but rather provides the flexibility to map different approaches.\r\n\r\nI was actually serious - this issue should not have been filed.  Go back to the original statement in the issue:  'I suspect above means \"Attestation Results\" instead of \"attestations\"'.  I've already established that the original text was written with regards to the FIDO definition of RP operations, which does not distinguish between Attestation and Attestation Results.  Since we agree that the FIDO definitions and architecture are not superseded in any way by the RATS Architecture document, then https://github.com/ietf-rats-wg/eat/issues/337 is not valid.\r\n\r\n>FIDO actually provides one of the use-cases RATS is based on (https://www.ietf.org/archive/id/draft-ietf-rats-architecture-22.html#name-fido-biometric-authenticati). Calling that \"a passing reference\" reads like a bit of an exaggeration to me, tbh. \r\n\r\nThen why is Sec. 4.1 of the arch. document not consistent with the FIDO definition of RP operations?  Why is there not even mention of how the FIDO definition differs in this section.\r\n\r\nI suggest taking this discussion over to https://github.com/ietf-rats-wg/architecture/issues/440.  ",
          "createdAt": "2022-12-05T15:41:18Z",
          "updatedAt": "2022-12-05T15:41:18Z"
        }
      ]
    },
    {
      "number": 343,
      "id": "I_kwDOCEWCXc5YTZSM",
      "title": "inconsistency in `iat` definition",
      "url": "https://github.com/ietf-rats-wg/eat/issues/343",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The CDDL allows float (in fact, `time` is `int / float`) but [\u00a74.3.1](https://ietf-rats-wg.github.io/eat/draft-ietf-rats-eat.html#section-4.3.1) disallows it.\r\n\r\nWe should use `int` rather than `~time` in the CDDL definition.",
      "createdAt": "2022-12-07T09:45:51Z",
      "updatedAt": "2022-12-16T18:55:31Z",
      "closedAt": "2022-12-16T18:55:31Z",
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "The definition traces to Section 2 of RFC8392 then to Section 2.4.1 of RFC 7049. Given the data type for this reused claim is established elsewhere, profiling its use in prose seems correct to me (vs using an alternative definition). An implementation that does not reuse a data type from a CWT library may elect to enforce the constraint as you suggest. ",
          "createdAt": "2022-12-07T11:20:24Z",
          "updatedAt": "2022-12-07T11:20:24Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Since most problems in CS can be solved with a level of indirection :-) we should use ~time-int, not int.\r\n\r\nI don't want to change the CDDL in Appendix D because it is copied from draft UCCS and represents a CWT and JWT. So don't want to change the iat claim there.  But because you might miss the text in section 4.3.1, I added a paragraph to appendix D in this PR pointing it out.\r\n\r\nI'm also OK leaving it as is as Carl suggests.\r\n\r\nThe problem with both these solutions is that CDDL with a floating-point iat will validate. The only solution I know of to that is to change the CDDL for the CWT. I suppose we could do that and put a note in that we changed it.",
          "createdAt": "2022-12-10T04:52:29Z",
          "updatedAt": "2022-12-10T04:52:29Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "If CDDL can express a constraint and we don't use it we dilute its usefulness.\r\n\r\nI'm not going to insist, do what you think is the right thing to do.\r\n",
          "createdAt": "2022-12-11T10:32:29Z",
          "updatedAt": "2022-12-11T10:32:42Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "CDDL has .and (and .within) to make further constraints.\r\nThe authors should consider whether this is appropriate here.\r\n",
          "createdAt": "2022-12-12T12:05:29Z",
          "updatedAt": "2022-12-12T12:05:29Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "(author hat off/personal opinion hat on)\n\n \n\nUltimately, CDDL will have import as well, as I understand it. That\u2019s why I suggested we accept the definition as-is and profile its use in prose (since importing from CWT is what is happening). With different prose and definition, it really isn\u2019t reuse of iat. \n\n \n\nFrom: cabo ***@***.***>\nReply-To: ietf-rats-wg/eat ***@***.***>\nDate: Monday, December 12, 2022 at 7:05 AM\nTo: ietf-rats-wg/eat ***@***.***>\nCc: Carl Wallace ***@***.***>, Comment ***@***.***>\nSubject: Re: [ietf-rats-wg/eat] inconsistency in `iat` definition (Issue #343)\n\n \n\nCDDL has .and (and .within) to make further constraints.\nThe authors should consider whether this is appropriate here.\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you commented.Message ID: ***@***.***>\n\n",
          "createdAt": "2022-12-12T12:12:23Z",
          "updatedAt": "2022-12-12T12:12:23Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would suggest to use as simple CDDL constructs as possible right now. Later, when CDDL gets enhanced more you can make this better. ",
          "createdAt": "2022-12-12T17:22:59Z",
          "updatedAt": "2022-12-12T17:22:59Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "We\u2019ve made a copy of the CDDL for a CWT in EAT because there is no published document with that CDDL. At some point the UCCS Draft will be that, but we do not want a normative dependency on that draft because it will delay EAT. So we copy it.\r\n\r\nHere's 4 options for this issue:\r\n\r\nA) Use the CDDL for a CWT without modification and disallow use of float with prose (the existing text). \r\n- An \u201ciat\u201d claim with a floating point value will validate even though it is not correct -- and uncaught error.\r\n+ If draft UCCS gets published before EAT we can easily switch to a normative reference to it\r\n\r\nB) Modify EAT's copy of the CWT CDDL to disallow float\r\n- We can\u2019t really switch to a normative reference to CWT CDDL published elsewhere\r\n+ This will correctly error out when trying to validate a floating point \"iat\"\r\n\r\nC) Remove restriction that disallows float. I don\u2019t want to do that because EAT needs to work on very constrained device without float support and float dates give nothing useful\r\n\r\nD) Make this \u201ceat-iat\u201d with a different label than \u201ciat\u201d. I don\u2019t want to do this because it seems confusing to have to different claims that are basically identical.\r\n\r\nNone of these are ideal or obviously correct to me. The \".and\" operator doesn't help here unless we do D). \r\n\r\nIn the end, I prefer A) because I think it's very unlikely someone will create floating point dates that need to be caught during CDDL validation (this is just CDDL validation, not actual implementations).\r\n\r\nIf we agree on A) then there's nothing to be done but close this issue.",
          "createdAt": "2022-12-12T19:29:41Z",
          "updatedAt": "2022-12-12T19:29:41Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Also forgot to mention #358 which is a little extra text that helps for option A). That is if we choose option A) we should merge #358.",
          "createdAt": "2022-12-12T19:43:49Z",
          "updatedAt": "2022-12-12T19:43:49Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd prefer D -- I think it's the cleanest -- but I'm happy with A.  (In fact, I already approved #358)",
          "createdAt": "2022-12-12T19:57:44Z",
          "updatedAt": "2022-12-12T19:57:44Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed by choosing option A) above. The additional text in #358 was also added.",
          "createdAt": "2022-12-16T18:55:31Z",
          "updatedAt": "2022-12-16T18:55:31Z"
        }
      ]
    },
    {
      "number": 345,
      "id": "I_kwDOCEWCXc5YhhH2",
      "title": "prohibition around \"passing through\" claims from evidence to attestation results",
      "url": "https://github.com/ietf-rats-wg/eat/issues/345",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "In [\u00a74.3](https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat-18#section-4-3-2) we say:\r\n```\r\n[...]\r\nThey may appear in evidence or attestation results. When these claims\r\nappear in evidence, they SHOULD NOT be passed through the verifier into\r\nattestation results.\r\n```\r\n\r\nI understand the reasoning behind the prohibition, but the prose needs to be tightened up a bit.\r\n\r\nFirst of all, this applies to attestation result that are themselves encoded as a EAT.\r\n\r\nSecondly, it only applies in case the evidence claims would end up at the top-level in the EAT claims-set rather than in their own clearly segregated space (e.g., in a sub-map).\r\n\r\nIf the two condition hold, these claims _MUST NOT_ (rather than SHOULD NOT) be copied as-is, because the EAT carrying attestation results could have its own and they would clash.\r\n\r\n----\r\n\r\n**Note:** In our EAT attestation result [we do copy the evidence profile claim](https://github.com/veraison/docs/blob/730c318365ba27e5dc5b62f67f06c63b69d2ef0d/datamodels/attestation-results/grammar/examples/veraison-json-1.diag#L13), but that's completely separate from the   [top-level EAT profile](https://github.com/veraison/docs/blob/730c318365ba27e5dc5b62f67f06c63b69d2ef0d/datamodels/attestation-results/grammar/examples/veraison-json-1.diag#L2) so there's no clash nor ambiguity.\r\n",
      "createdAt": "2022-12-08T18:23:56Z",
      "updatedAt": "2022-12-19T18:04:09Z",
      "closedAt": "2022-12-19T18:04:09Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Added 'wontfix' label for now, but please take this to the WG to ensure consensus before making this a MUST requirement.",
          "createdAt": "2022-12-08T19:13:31Z",
          "updatedAt": "2022-12-08T19:13:31Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "When using the FIDO model for Relying Party (as an example), the verifier is within the boundary of the RP and can process top-level claims, yet may still be relayed as is within the RP context. It is up to the implementation, as FIDO certification programs place no such requirement on existing attestation formats.  However, making this a \"MUST NOT\" requirement (at least without considerably more explanation than what has been proposed in this issue) may mislead developers  in the FIDO context  - if the claim is passed as is within the RP security boundary from an integrated verifier then it does not appear to have any drawback.  Since EAT is meant to target different standards and associated ecosystems (e.g. FIDO, GlobalPlatform, etc.), the SHOULD requirement appears to be sufficient.",
          "createdAt": "2022-12-08T19:22:32Z",
          "updatedAt": "2022-12-08T19:22:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks for articulating the FIDO use case.\r\n\r\nWhat about:\r\n```\r\nMUST NOT unless:\r\n* [FIDO-like situations]\r\n* [evidence claims are segregated and therefore cannot clash with AR claims]\r\n* [AR is not in EAT format and therefore there is no clash risk]\r\n```\r\n\r\nWhat is missing is a rationale for allowing exceptions, which should be present (or self-evident) when a SHOULD is used.",
          "createdAt": "2022-12-08T22:00:42Z",
          "updatedAt": "2022-12-08T22:06:42Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Four ways forward have been discussed:\r\n- Change SHOULD NOT to MUST NOT\r\n- Augment SHOULD NOT to require a profile to describe why SHOULD NOT is ignored\r\n- No change\r\n- Remove 2119 language from 4.3",
          "createdAt": "2022-12-12T15:57:32Z",
          "updatedAt": "2022-12-12T15:57:32Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Four ways forward have been discussed:\r\n> * Augment SHOULD NOT to require a profile to describe why SHOULD NOT is ignored\r\n\r\n\u261d\ufe0f ",
          "createdAt": "2022-12-12T16:03:46Z",
          "updatedAt": "2022-12-12T16:03:46Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I've proposed removing the sentence entirely and relying on 1.3.1 in #360. Read the PR for more justification.",
          "createdAt": "2022-12-13T22:20:54Z",
          "updatedAt": "2022-12-13T22:20:54Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #360 ",
          "createdAt": "2022-12-19T18:04:08Z",
          "updatedAt": "2022-12-19T18:04:08Z"
        }
      ]
    },
    {
      "number": 357,
      "id": "I_kwDOCEWCXc5YnsEA",
      "title": "IANA Considerations",
      "url": "https://github.com/ietf-rats-wg/eat/issues/357",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The IANA consideration section contains text that will be removed (or corrected) prior publication. I was not sure which part is actually meant to stay in the document and what is removed or modified. ",
      "createdAt": "2022-12-09T13:52:27Z",
      "updatedAt": "2022-12-19T18:03:40Z",
      "closedAt": "2022-12-19T18:03:40Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, I believe there's formal markup to indicate this. I will see what can be done.",
          "createdAt": "2022-12-10T04:54:18Z",
          "updatedAt": "2022-12-10T04:54:18Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Just really minor. You might be able to explain it to IANA during the late publication state",
          "createdAt": "2022-12-12T17:21:05Z",
          "updatedAt": "2022-12-12T17:21:05Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed with #362 ",
          "createdAt": "2022-12-19T18:03:39Z",
          "updatedAt": "2022-12-19T18:03:39Z"
        }
      ]
    },
    {
      "number": 365,
      "id": "I_kwDOCEWCXc5eANcc",
      "title": "The value of eat_nonce used in the examples",
      "url": "https://github.com/ietf-rats-wg/eat/issues/365",
      "state": "CLOSED",
      "author": "s-miyazawa",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I found two cases of `eat_nonce` used as examples. Which one is more suitable as an example?\r\n\r\n* `h'948f8860d13a463e'` (8byte)\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/valid_tee.diag#L4\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/valid_iot.diag#L8\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/valid_hw_block.diag#L9\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/valid_hw_block2.diag#L7\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/valid_key_store.diag#L22\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/valid_key_store.diag#L57\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Tokens/valid_deb.diag#L37 (as part of the other binary)\r\n\r\n\r\n* `h'948f8860d13a463e8e'` (9byte)\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/valid_submods.diag#L19\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/minimal.diag#L2\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/simple.diag#L3\r\n  * https://github.com/ietf-rats-wg/eat/blob/master/cddl/Example-Payloads/submods.diag#L2\r\n",
      "createdAt": "2023-02-09T02:14:41Z",
      "updatedAt": "2023-06-29T17:59:15Z",
      "closedAt": "2023-06-29T17:59:14Z",
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "The two cases are equally suitable as an example. The type is defined as below (so any value between 8 and 64 bytes is suitable).\r\n\r\n```\r\n$$Claims-Set-Claims //=\r\n    (nonce-label => nonce-type / [ 2* nonce-type ])\r\n\r\nnonce-type = JC< tstr .size (10..74), bstr .size (8..64)>\r\n```",
          "createdAt": "2023-02-09T11:06:42Z",
          "updatedAt": "2023-02-09T11:06:42Z"
        },
        {
          "author": "s-miyazawa",
          "authorAssociation": "NONE",
          "body": "Thank you for letting me know. I now know that both examples follow the definition.\r\n\r\nI thought it would be less confusing to have all the `eat_nonce` in the examples identical. If necessary, I can send a pull request that makes all the `eat_nonce` in the examples identical (8byte data). If the change is not needed, I will close this Issue.\r\nhttps://github.com/ietf-rats-wg/eat/compare/master...s-miyazawa:eat:identical_nonce\r\n",
          "createdAt": "2023-02-11T01:02:58Z",
          "updatedAt": "2023-02-11T01:02:58Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think it is a good idea to improve by either making the nonce exactly the same everywhere or make it totally different. Right now it's different by one byte which is weird.",
          "createdAt": "2023-02-11T02:17:10Z",
          "updatedAt": "2023-02-11T02:17:10Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Sure. I\u2019d break that tie by making them even more different, maybe change the outlier to be the max length with all different bytes.\n\n \n\nFrom: Laurence Lundblade ***@***.***>\nReply-To: ietf-rats-wg/eat ***@***.***>\nDate: Friday, February 10, 2023 at 9:17 PM\nTo: ietf-rats-wg/eat ***@***.***>\nCc: Carl Wallace ***@***.***>, Comment ***@***.***>\nSubject: Re: [ietf-rats-wg/eat] The value of eat_nonce used in the examples (Issue #365)\n\n \n\nI think it is a good idea to improve by either making the nonce exactly the same everywhere or make it totally different. Right now it's different by one byte which is weird.\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you commented.Message ID: ***@***.***>\n\n",
          "createdAt": "2023-02-11T11:54:34Z",
          "updatedAt": "2023-02-11T11:54:34Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Also - my bad for making the nonces weird. Just editing accident.",
          "createdAt": "2023-02-11T19:06:41Z",
          "updatedAt": "2023-02-11T19:06:41Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "#401",
          "createdAt": "2023-06-26T21:23:27Z",
          "updatedAt": "2023-06-26T21:23:27Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #401",
          "createdAt": "2023-06-29T17:59:14Z",
          "updatedAt": "2023-06-29T17:59:14Z"
        }
      ]
    },
    {
      "number": 377,
      "id": "I_kwDOCEWCXc5jAWYb",
      "title": "Security AD Review:  clarify sec cons discussion on nonces",
      "url": "https://github.com/ietf-rats-wg/eat/issues/377",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reference:  https://mailarchive.ietf.org/arch/msg/rats/50ZbUkhSrU1cgOLYkir3f1kKFiY/\r\n\r\nEAT reference:  https://www.ietf.org/archive/id/draft-ietf-rats-eat-19.html#name-multiple-eat-consumers\r\n\r\n\"** Section 9.4.\r\n\r\n   However, assume the EAT of the previous example is hierarchical and\r\n   each claim subset for a downstream consumer is created in the form of\r\n   a nested EAT.  Then, Transport Layer Security between the receiving\r\n   and downstream consumers is not strictly required.  Nevertheless,\r\n   downstream consumers of a nested EAT should provide a nonce unique to\r\n   the EAT they are consuming.\r\n\r\nI don't follow how a hierarchical relation changes the required security.  Could this be clarified?\"",
      "createdAt": "2023-04-10T16:31:39Z",
      "updatedAt": "2023-06-26T19:13:48Z",
      "closedAt": "2023-06-26T19:13:48Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #390 ",
          "createdAt": "2023-06-26T19:13:48Z",
          "updatedAt": "2023-06-26T19:13:48Z"
        }
      ]
    },
    {
      "number": 378,
      "id": "I_kwDOCEWCXc5jAYQq",
      "title": "Security AD review:  address SBOM comments",
      "url": "https://github.com/ietf-rats-wg/eat/issues/378",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reference: https://mailarchive.ietf.org/arch/msg/rats/50ZbUkhSrU1cgOLYkir3f1kKFiY/\r\nEAT reference:  https://www.ietf.org/archive/id/draft-ietf-rats-eat-19.html#name-manifests-software-manifest\r\nEAT reference:  https://www.ietf.org/archive/id/draft-ietf-rats-eat-19.html#name-media-types-registered-by-t\r\n\r\n\"\r\n   [CycloneDX]\r\n              \"CycloneDX\",\r\n              <https://cyclonedx.org/specification/overview/>.\r\n\r\nThe IESG will push back at this being web link that could likely change to point to the latest version of the specification.  CycloneDX is versioned so please point to a particular version.  This looks like the a specific reference \r\n\r\nhttps://cyclonedx.org/docs/1.4/json/\"",
      "createdAt": "2023-04-10T16:39:07Z",
      "updatedAt": "2023-06-26T19:14:11Z",
      "closedAt": "2023-06-26T19:14:11Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "One solution is to remove the new media type registration for specific SBOM formats, and ensure that the manifest claim is sufficiently general to allow for CycloneDX and SPDY to be sent as part of the token.  Media type registration for specific SBOM formats can be handled separately from the EAT document.",
          "createdAt": "2023-04-10T16:41:24Z",
          "updatedAt": "2023-04-10T16:41:24Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #372",
          "createdAt": "2023-06-26T19:14:11Z",
          "updatedAt": "2023-06-26T19:14:11Z"
        }
      ]
    },
    {
      "number": 379,
      "id": "I_kwDOCEWCXc5jAZZD",
      "title": "Security AD review:  clarify intuse claim",
      "url": "https://github.com/ietf-rats-wg/eat/issues/379",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reference: https://mailarchive.ietf.org/arch/msg/rats/50ZbUkhSrU1cgOLYkir3f1kKFiY/\r\nEAT reference:  https://www.ietf.org/archive/id/draft-ietf-rats-eat-19.html#name-intuse-intended-use-claim\r\n\r\n\"** Section 4.3.3.  intuse.  Does the WG expect this claim to be extended with additional values?  Should it be maintained with an IANA registry?\"",
      "createdAt": "2023-04-10T16:43:30Z",
      "updatedAt": "2023-04-30T18:13:14Z",
      "closedAt": "2023-04-30T18:13:14Z",
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Extensibility should be clarified for this claim.  It seems that there could be desirable extensions that can be registered assuming they have been vetted through expert review.",
          "createdAt": "2023-04-10T16:45:32Z",
          "updatedAt": "2023-04-10T16:45:32Z"
        }
      ]
    },
    {
      "number": 380,
      "id": "I_kwDOCEWCXc5jBE4-",
      "title": "How far to go with manifest and measurement sub types",
      "url": "https://github.com/ietf-rats-wg/eat/issues/380",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Both manifests and measurements claims allow unlimited formats to be used via coap content types.\r\n\r\nFor measurements EAT references CoSWID.\r\n\r\nFor manifests, EAT references CoSWID and SUIT plus it registered CycloneDX and SPDX.\r\n\r\nDo we:\r\n1) remove all references and registrations\r\n2) only reference CoSWID\r\n3) only reference already-registered (SUIT and CoSWID) (remove SPDX and CycloneDX)\r\n4) Leave it as is with the registrations for SPDX and CyCloneDX\r\n\r\nI like 3) and maybe 2). Removing SPDX and Cyclone DX will reduce the document by a page or so and simplify the CDDL and other document processing.\r\n\r\nI would also say to Kathleen and Eliot \r\n1) We're not experts in these and it is better to let the SBOM experts do the registration\r\n2) There's a very clear means for including them (we kind of proved it out)\r\n3) EAT is big and complex enough, so we like simplifying a bit here\r\n\r\n",
      "createdAt": "2023-04-10T19:15:34Z",
      "updatedAt": "2023-06-26T19:15:54Z",
      "closedAt": "2023-06-26T19:15:54Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #386. CycloneDX and SPDX registrations and references were removed. They can still be used, but someone else needs to to the registrations.",
          "createdAt": "2023-06-26T19:15:54Z",
          "updatedAt": "2023-06-26T19:15:54Z"
        }
      ]
    },
    {
      "number": 419,
      "id": "I_kwDOCEWCXc5xKMR0",
      "title": "use rfc2648 for profile identification",
      "url": "https://github.com/ietf-rats-wg/eat/issues/419",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "_(This is just a suggestion that I leave to the discretion of the editors.)_\r\n\r\nThere's an opportunity to shorten the Constrained Device Standard Profile\r\nidentifier using [RFC2648](https://datatracker.ietf.org/doc/rfc2648/) URNs, i.e., using `urn:ietf:rfc:XXXX` rather than `https://www.rfc-editor.org/rfc/rfcXXXX`.\r\n\r\nThis would remove 21 bytes from the wire per token, which is in line with the \"constrained device\" scope we are trying to cover here.",
      "createdAt": "2023-09-15T14:03:00Z",
      "updatedAt": "2023-09-28T17:53:41Z",
      "closedAt": "2023-09-28T17:53:29Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #420",
          "createdAt": "2023-09-28T17:53:40Z",
          "updatedAt": "2023-09-28T17:53:40Z"
        }
      ]
    },
    {
      "number": 447,
      "id": "I_kwDOCEWCXc6AjTUv",
      "title": "small typos in examples",
      "url": "https://github.com/ietf-rats-wg/eat/issues/447",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "A couple of small typos in the examples (A.1):\r\n\r\n* `/ manifests / 273` should be `/ measurements / 273`\r\n* the made-up CoAP C-F for CoSWID should be replaced by `258` (the assigned C-F)\r\n\r\n",
      "createdAt": "2024-02-27T14:26:39Z",
      "updatedAt": "2024-04-01T03:55:42Z",
      "closedAt": "2024-04-01T03:55:42Z",
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #450 \r\n\r\nIn this example, the CoSWID is a payload CoSWID, so a manifest, not a measurement. The label is wrong though.",
          "createdAt": "2024-04-01T03:55:42Z",
          "updatedAt": "2024-04-01T03:55:42Z"
        }
      ]
    },
    {
      "number": 448,
      "id": "I_kwDOCEWCXc6AjWTN",
      "title": "Measurements encoding clarifications",
      "url": "https://github.com/ietf-rats-wg/eat/issues/448",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "https://www.ietf.org/archive/id/draft-ietf-rats-eat-25.html#section-4.2.16 should have something like this to make sure the right encoding is picked up:\r\n\r\n```\r\n$fmt-cbor = bstr .cbor $FMT\r\n$fmt-json = tstr .json $FMT\r\n```\r\n\r\n### EAT CBOR (`.feature \"cbor\"`)\r\n\r\n```\r\n$measurements-body-cbor /= $fmt-cbor            ; native\r\n$measurements-body-cbor /= tstr .b64u $fmt-json ; tunnel\r\n\r\n```\r\n\r\n### EAT JSON (`.feature \"json\"`)\r\n\r\n```\r\n$measurements-body-json /= $fmt-json            ; native\r\n$measurements-body-json /= tstr .b64u $fmt-cbor ; tunnel\r\n```\r\n\r\n### CWT\r\n\r\n| `content-type` (CoAP C-F equivalent) | `content-format` |\r\n|--|--|\r\n| `application/measured-component+cbor` | `$fmt-cbor` |\r\n| `application/measured-component+json` | `tstr .b64u $fmt-json` |\r\n\r\n### JWT\r\n\r\n| `content-type` (CoAP C-F equivalent) | `content-format` |\r\n|--|--|\r\n| `application/measured-component+json` | `$fmt-json` |\r\n| `application/measured-component+cbor` | `tstr .b64u $fmt-cbor` |\r\n\r\n",
      "createdAt": "2024-02-27T14:32:04Z",
      "updatedAt": "2024-05-24T19:43:11Z",
      "closedAt": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I see where you are going, but it makes my head hurt, especially when validating with the cddl tool. An MC can be either CBOR or JSON itself and then can inserted into either a CBOR or JSON EAT. CDDL for MC is neutral.\r\n\r\nHave you tried to construct the four combos and validate with the cddl tool? I'm not sure it's possible.\r\n\r\nDo you mean $fmt-cbor and $FMT to be sockets?\r\n\r\nIf we do this for measurements, we have to do the same for manifests and maybe bundles.\r\n\r\n\r\n",
          "createdAt": "2024-03-26T05:09:16Z",
          "updatedAt": "2024-03-26T05:09:16Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've tried to plug in `untagged-coswid` and it works:\r\n\r\n```cddl\r\n$FMT /= untagged-coswid\r\n$fmt-cbor = bstr .cbor $FMT\r\n$measurements-body-cbor /= $fmt-cbor            ; native\r\n$measurements-body-json /= tstr .b64u $fmt-cbor ; tunnel\r\n```\r\n\r\nSince `untagged-coswid` does not have a native JSON serialisation, I had to drop `$fmt-json = tstr .json $FMT` & friends.\r\n",
          "createdAt": "2024-03-26T15:34:51Z",
          "updatedAt": "2024-03-26T15:34:51Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">If we do this for measurements, we have to do the same for manifests and maybe bundles.\r\n\r\nAgreed.  There was no such request during WGLC, so this may have to be taken back to WG as well.  Current definition is passing validation so I don't see a reason to change them.\r\n\r\n>I see where you are going, but it makes my head hurt, especially when validating with the cddl tool. An MC can be either CBOR or JSON itself and then can inserted into either a CBOR or JSON EAT. CDDL for MC is neutral.\r\n\r\nAlso I am not sure what is being proposed is the only suitable alternative to what is already in the spec.  For instance, a switch could be used (e.g. Figure 9 and associated description of tool requirements in https://datatracker.ietf.org/doc/html/rfc9165 for sensor measurements).  If the validation tool cannot support a switch within a claim that seems to be a problem with the tool, because I could not find a prohibition in the CDDL specification.\r\n\r\n",
          "createdAt": "2024-03-26T16:01:54Z",
          "updatedAt": "2024-03-26T16:01:54Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I wouldn't do anything here that requires recycle with the WG, but I don't think this would have to go back to the WG. It's not a change to semantics, just a change to the CDDL to do better validation and take advantage of tool improvements. We were on the bleeding edge of the tool with the CBOR/JSON stuff.\r\n\r\nThe point of this would be to make the cddl validation of EATs work better. In particular to be able to validate that an MC in an EAT is a valid MC, and then on for all measurements and manifests in CBOR or JSON.\r\n\r\nI don't think there's anything wrong with what's there now, but it is crude and it doesn't easily accommodate the full validation and might be a little confusing for some. @thomas-fossati, does that seem right to you?\r\n\r\nI could see doing a substantial rework of the EAT CDDL at some point when things like import/include and stuff are standard and in the tool. We could even start on it now to understand what all is possible. Maybe it isn't published with the RFC and just stays in GitHub. It might also be part of reword of the CDDL for COSE and CWT and JOSE and JWT.",
          "createdAt": "2024-03-26T18:00:15Z",
          "updatedAt": "2024-03-26T18:00:15Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> I don't think there's anything wrong with what's there now, but it is crude and it doesn't easily accommodate the full validation and might be a little confusing for some. @thomas-fossati, does that seem right to you?\r\n\r\nYes, that'd be my assessment too.  With the description in draft-25 one has to work a bit harder than usual to figure out the details.  I had to do the exercise twice to get it right, also because the first time I missed the fact that Measurements reuse the mechanics from Manifests (so there's maybe a missing ref that can be added without going through the WG.)\r\n\r\n> I could see doing a substantial rework of the EAT CDDL at some point when things like import/include and stuff are standard and in the tool. We could even start on it now to understand what all is possible. Maybe it isn't published with the RFC and just stays in GitHub. It might also be part of reword of the CDDL for COSE and CWT and JOSE and JWT.\r\n\r\nThat seems like a very good idea and I'd be happy to work with you on that.",
          "createdAt": "2024-03-26T18:42:27Z",
          "updatedAt": "2024-03-26T18:42:27Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "> wouldn't do anything here that requires recycle with the WG, but I don't think this would have to go back to the WG. It's not a change to semantics, just a change to the CDDL to do better validation and take advantage of tool improvements. We were on the bleeding edge of the tool with the CBOR/JSON stuff.\r\n\r\nOK - just saw the revised proposal with untagged-coswid re-introduction.   So I agree that semantics are not changing.\r\n\r\n>With the description in draft-25 one has to work a bit harder than usual to figure out the details. I had to do the exercise twice to get it right, also because the first time I missed the fact that Measurements reuse the mechanics from Manifests (so there's maybe a missing ref that can be added without going through the WG.)\r\n\r\nIs this the reason new measurement claims were defined for CCA - see Section III.D of https://ieeexplore.ieee.org/document/10373038  If so, as an alternative  I would've just overloaded the result-id subclaim in https://www.ietf.org/archive/id/draft-ietf-rats-eat-25.html#name-measres-software-measuremen.\r\n",
          "createdAt": "2024-03-26T19:57:50Z",
          "updatedAt": "2024-03-26T19:57:50Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati \r\n\r\nCan you respond to previous question?  Want to make sure there are no showstopper issues with measurements claim that would prevent adoption.  Reproducing here:\r\n\r\n>s this the reason new measurement claims were defined for CCA - see Section III.D of https://ieeexplore.ieee.org/document/10373038 If so, as an alternative I would've just overloaded the result-id subclaim in https://www.ietf.org/archive/id/draft-ietf-rats-eat-25.html#name-measres-software-measuremen.",
          "createdAt": "2024-04-02T02:08:48Z",
          "updatedAt": "2024-04-02T02:08:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> @thomas-fossati\r\n> \r\n> Can you respond to previous question? Want to make sure there are no showstopper issues with measurements claim that would prevent adoption. Reproducing here:\r\n\r\nSorry @gmandyam, I'd missed that.  Thanks for the heads up.\r\n\r\n> > s this the reason new measurement claims were defined for CCA - see Section III.D of https://ieeexplore.ieee.org/document/10373038 If so, as an alternative I would've just overloaded the result-id subclaim in https://www.ietf.org/archive/id/draft-ietf-rats-eat-25.html#name-measres-software-measuremen.\r\n\r\nNo, the main reason for using PSA's software-components in CCA is code reuse (from TF-M to TF-A).\r\n\r\nWe are currently working on an extension of [EAT's Measurement claim](https://thomas-fossati.github.io/draft-fft-rats-eat-measured-component/draft-fft-rats-eat-measured-component.html) to capture `software-components` semantics (and more) in a more standard-friendly fashion. \r\n",
          "createdAt": "2024-04-02T03:00:22Z",
          "updatedAt": "2024-04-02T03:00:57Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Also, the measurement results claim is not for measurements. It's for reporting whether the measurements compared correctly, not for carrying the measurements themselves.\r\n",
          "createdAt": "2024-04-02T04:45:54Z",
          "updatedAt": "2024-04-02T04:45:54Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">[laurencelundblade](https://github.com/laurencelundblade) commented [10 hours ago](https://github.com/ietf-rats-wg/eat/issues/448#issuecomment-2031075880)\r\nAlso, the measurement results claim is not for measurements. It's for reporting whether the measurements compared correctly, not for carrying the measurements themselves.\r\n\r\nThe CoSWID payload can allow for carriage of hashes (see https://www.rfc-editor.org/rfc/rfc9393.html#name-the-hash-entry-array), but there is no JSON equivalent.  That is why I suggested overloading the ID field in swmeasres as a workaround, but I can see why extending the measurement claim would be desirable.",
          "createdAt": "2024-04-02T15:26:18Z",
          "updatedAt": "2024-04-02T15:26:18Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MTk3NjAwNzMy",
      "title": "Create draft-ietf-mandyam-eat.md",
      "url": "https://github.com/ietf-rats-wg/eat/pull/1",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Seeding repo",
      "createdAt": "2018-06-27T02:31:36Z",
      "updatedAt": "2018-06-27T17:55:36Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "69738ac44f179863fea75a0cfa10e7335aae1e13",
      "headRepository": null,
      "headRefName": "master",
      "headRefOid": "9b927bfcb8cce27338e5e60794539ebc689c7b3d",
      "closedAt": "2018-06-27T17:55:36Z",
      "mergedAt": "2018-06-27T17:55:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "69765a42137ecc476e9fc15f9c83f87794882cef"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0MjAxNTExNDIx",
      "title": "First draft of CBOR interop section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/5",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "CBOR has a lot of different data type and for each type there are encoding variations. In order for EAT to have good interoperability, there has to be a specification for what types and variants to use. \r\n\r\n(Seems to me that other CBOR-based protocols like COSE and CWT should have similar).\r\n",
      "createdAt": "2018-07-15T19:19:21Z",
      "updatedAt": "2021-05-25T18:35:30Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "69765a42137ecc476e9fc15f9c83f87794882cef",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "CBOR-Interop",
      "headRefOid": "0a6c332301667942aa53d232a0710db863dbee47",
      "closedAt": "2018-11-19T15:20:20Z",
      "mergedAt": "2018-11-19T15:20:20Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "d43880a9817a8f48ca1ec6fda3ce230396feb277"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0MjIxMTk3NDU1",
      "title": "Fix for some typos",
      "url": "https://github.com/ietf-rats-wg/eat/pull/6",
      "state": "MERGED",
      "author": "mathias-arm",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2018-10-08T17:56:01Z",
      "updatedAt": "2018-11-16T02:07:59Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "69765a42137ecc476e9fc15f9c83f87794882cef",
      "headRepository": "mathias-arm/eat",
      "headRefName": "master",
      "headRefOid": "238a38219eaf6a8b5145ec60baba5af9345f48b7",
      "closedAt": "2018-11-16T02:07:54Z",
      "mergedAt": "2018-11-16T02:07:54Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "32734ed3cd9db3843fb6a92b3acf340df18ac5a4"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@mathias-arm \r\n\r\nThanks for providing this.  It is now merged.",
          "createdAt": "2018-11-16T02:07:59Z",
          "updatedAt": "2018-11-16T02:07:59Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcwOTM1NzIy",
      "title": "Added Claims Characteristics section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/7",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-16T14:28:45Z",
      "updatedAt": "2020-11-09T21:33:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "aac5de214068993208b41066f1717222abde6114",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "claim-characteristics",
      "headRefOid": "0c375694b225d19dcbc193eedace638d364d57f2",
      "closedAt": "2020-11-09T21:33:28Z",
      "mergedAt": "2020-11-09T21:33:28Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f28c8a69c2da08f8db09a5136ca63c5255ce450f"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I would recommend to remove the \"Some examples of profiles that may come to exist:\" content. A specification or even proposed standard is not a good place for listing \"work that may or may not be done\", I think. Other SDO actually forbid this type of content rather strictly. I am not sure what the exact IETF rules are, tbh.",
          "createdAt": "2019-11-27T21:00:04Z",
          "updatedAt": "2019-11-27T21:00:04Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I assert that existence in a specification justifies its existence! ",
          "createdAt": "2020-01-06T22:21:24Z",
          "updatedAt": "2020-01-06T22:21:24Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I take Ned's point that it is a bit circular to justify the existence of claims that have been agreed upon in the standard. However I think the text is important and helpful and should be in the document somewhere.\r\n\r\nOne possibility is the section for IANA as advice for claims registration. This is still odd though since there is no EAT IANA registry as we re use CWT.\r\n",
          "createdAt": "2020-02-04T18:44:52Z",
          "updatedAt": "2020-02-04T18:44:52Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz on the examples to be built, I agree that this is probably not the right way to frame it. What about just listing the as examples with out the \"may come to exist\" part?",
          "createdAt": "2020-02-04T19:47:22Z",
          "updatedAt": "2020-02-04T19:47:22Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzM0NjU2",
          "commit": {
            "abbreviatedOid": "c72786f"
          },
          "author": "setrofim",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T13:26:23Z",
          "updatedAt": "2019-11-07T13:26:24Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nClaims should not be defined such they are specific to a chip or\r\n```\r\nor\r\n```suggestion\r\nClaims should be defined such they are not specific to any chip or\r\n```",
              "createdAt": "2019-11-07T13:26:23Z",
              "updatedAt": "2020-11-09T21:27:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzNDEyMzc4",
          "commit": {
            "abbreviatedOid": "c72786f"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "This looks like the wrong file (draft-ietf-mandyam-eat.md instead of draft-ietf-rats-eat.md)?",
          "createdAt": "2019-11-07T15:15:11Z",
          "updatedAt": "2019-11-07T15:15:11Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzNDIyNDUw",
          "commit": {
            "abbreviatedOid": "c72786f"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T15:28:11Z",
          "updatedAt": "2019-11-07T15:28:12Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Typo:  claims should +use+ already standardized",
              "createdAt": "2019-11-07T15:28:12Z",
              "updatedAt": "2020-11-09T21:27:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzNDI1MjAx",
          "commit": {
            "abbreviatedOid": "c72786f"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T15:31:25Z",
          "updatedAt": "2019-11-07T15:31:26Z",
          "comments": [
            {
              "originalPosition": 80,
              "body": "Add comment to the effect that proprietary claims should not be used instead of an equivalent standard claims unless the implementation is significantly different?",
              "createdAt": "2019-11-07T15:31:26Z",
              "updatedAt": "2020-11-09T21:27:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTMwOTkx",
          "commit": {
            "abbreviatedOid": "c72786f"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-01-06T22:19:58Z",
          "updatedAt": "2020-01-06T22:19:59Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Shouldn't the language be \"...such THAT they...\"?\r\n\r\nNot sure why the EAT draft should give guidance on what belongs as a claim (or not). Doesn't the existence of the claim in the spec resolve whether or not it should exist?",
              "createdAt": "2020-01-06T22:19:58Z",
              "updatedAt": "2020-11-09T21:27:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 8,
      "id": "MDExOlB1bGxSZXF1ZXN0MjcxMTMxMzg5",
      "title": "Update main file to draft-rats-eat-mandyam-00",
      "url": "https://github.com/ietf-rats-wg/eat/pull/8",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-04-17T02:00:14Z",
      "updatedAt": "2019-04-17T02:00:56Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d43880a9817a8f48ca1ec6fda3ce230396feb277",
      "headRepository": null,
      "headRefName": "master",
      "headRefOid": "2b2d656df73dbbca4baf9766f328a76f3ac5ecd5",
      "closedAt": "2019-04-17T02:00:56Z",
      "mergedAt": "2019-04-17T02:00:56Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "2c44d5cad7bfdc98a4e558115324bd03a1abfdee"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 11,
      "id": "MDExOlB1bGxSZXF1ZXN0MjkwNjk4NTM4",
      "title": "Be cwt",
      "url": "https://github.com/ietf-rats-wg/eat/pull/11",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Big rearrangement:\r\n- separate information and data model using CDDL\r\n- say an EAT is a CWT or JWT\r\n\r\nNo new claims or any substantive change to any claim.\r\n\r\nI believe I have largely succeeded in using CDDL for the information model and\r\ndefining later how it translates to the CWT and JWT data models.  It seems like\r\nthis is what CDDL is for, but others don't seem to be using it this way (yet). Being \r\nnew to CDDL and attempting what others seem to have not, I may have made some errors since I have no example to follow.\r\n\r\n",
      "createdAt": "2019-06-21T18:02:04Z",
      "updatedAt": "2021-05-25T18:35:18Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "2c44d5cad7bfdc98a4e558115324bd03a1abfdee",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "be_cwt",
      "headRefOid": "b3cab5e4454229b95fafbc50c3cf7921b7dbc221",
      "closedAt": "2019-07-03T18:41:30Z",
      "mergedAt": "2019-07-03T18:41:30Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b3cab5e4454229b95fafbc50c3cf7921b7dbc221"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 28,
      "id": "MDExOlB1bGxSZXF1ZXN0MzA2NjcxMDE4",
      "title": "Security Considerations",
      "url": "https://github.com/ietf-rats-wg/eat/pull/28",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "First cut",
      "createdAt": "2019-08-12T21:41:55Z",
      "updatedAt": "2020-02-19T16:57:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a648f41f4040e94847d2f6669bb0045e4331d53a",
      "headRepository": null,
      "headRefName": "br1",
      "headRefOid": "b899254440826cea379eb1a5115ad08d1ed69898",
      "closedAt": "2020-02-19T16:57:28Z",
      "mergedAt": "2020-02-19T16:57:28Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "cf76bd58c185a98a8a9d1637b9030e17f1054a92"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "This has been pending with no comments or feedback. My suggestion is to merge it and then revise as necessary.",
          "createdAt": "2019-10-04T17:03:13Z",
          "updatedAt": "2019-10-04T17:03:13Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this needs clarification of what is meant by \"enclave\".  I think you mean \"manufacturer's cryptographic operation facility\" or such.  ",
          "createdAt": "2019-10-07T04:25:27Z",
          "updatedAt": "2019-10-07T04:25:27Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "> \r\n> \r\n> I think this needs clarification of what is meant by \"enclave\". I think you mean \"manufacturer's cryptographic operation facility\" or such.\r\n\r\nModified accordingly with pointer to RFC 4949, where enclave is defined.",
          "createdAt": "2019-10-16T15:53:46Z",
          "updatedAt": "2019-10-16T15:53:46Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzI3Nzg4",
          "commit": {
            "abbreviatedOid": "f47a8b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T13:14:21Z",
          "updatedAt": "2019-11-07T13:14:22Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nthe keys used for signing and/or encryption.  In some instances, the manufacturer of the entity\r\n```",
              "createdAt": "2019-11-07T13:14:21Z",
              "updatedAt": "2020-02-19T16:57:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzI5MzYy",
          "commit": {
            "abbreviatedOid": "f47a8b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T13:17:11Z",
          "updatedAt": "2019-11-07T13:17:12Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nmaterial directly from the secure enclave where it was created to a destination secure enclave where it can be provisioned.\r\n```",
              "createdAt": "2019-11-07T13:17:11Z",
              "updatedAt": "2020-02-19T16:57:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzM0NDAx",
          "commit": {
            "abbreviatedOid": "f47a8b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T13:25:55Z",
          "updatedAt": "2019-11-07T13:25:56Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nAs stated in Section 8 of {{RFC8392}}, \"The security of the CWT relies upon on the protections offered by COSE\".  Similar considerations apply to EAT when sent as a CWT.  However, the EAT introduces the concept of a nonce\r\n```\r\n\r\nThis would be otherwise incongruent with #42 ",
              "createdAt": "2019-11-07T13:25:55Z",
              "updatedAt": "2020-02-19T16:57:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzY3MDQy",
          "commit": {
            "abbreviatedOid": "f47a8b4"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T14:14:55Z",
          "updatedAt": "2019-11-07T14:14:56Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "the wording here is unclear, whether the Recommendation applies to use of a Nonce or use of a nonce and encryption + signing? Encryption may not be applicable for all use cases.",
              "createdAt": "2019-11-07T14:14:55Z",
              "updatedAt": "2020-02-19T16:57:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 29,
      "id": "MDExOlB1bGxSZXF1ZXN0MzE1NjQ2NTg2",
      "title": "Fix capitalization typo",
      "url": "https://github.com/ietf-rats-wg/eat/pull/29",
      "state": "MERGED",
      "author": "ciphergoth",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-09-09T17:54:21Z",
      "updatedAt": "2019-10-01T13:15:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "cdaecbcdae3a61dcc39aa9601ac72ad8a6203965",
      "headRepository": "ciphergoth/eat",
      "headRefName": "patch-1",
      "headRefOid": "ac2550f0b67320e260df88287dac651ac94549d7",
      "closedAt": "2019-10-01T13:15:34Z",
      "mergedAt": "2019-10-01T13:15:34Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "faab2c4351ce31e3d3f7b6b94a0f06c9e5d1cfb9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 35,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI1MTIwMzQ3",
      "title": "Up UEID to 256 bits and add design rational appendix",
      "url": "https://github.com/ietf-rats-wg/eat/pull/35",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Comments on the analysis are very much requested. \r\n\r\nSee issue #12 and #21",
      "createdAt": "2019-10-07T04:12:27Z",
      "updatedAt": "2020-02-07T15:42:31Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "e0132c0a3bf8abf876b8cfd88c1d92ca4d844ea1",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "256bitUEID",
      "headRefOid": "f4ecbb9d381fb536e6dc8b2a0ae2ba088cda0b32",
      "closedAt": "2020-02-07T15:42:31Z",
      "mergedAt": "2020-02-07T15:42:31Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7d9a8de9cf276d7a71b4eaa8bf254f3757966fcf"
      },
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "256-bits is plenty. 128-bits as a minimum. This would allow the use of a digested value. If the namespace isn't digested, then you are relying on the namespace authority to manage the population in some way. If the UEID obfuscates the namespace authority then you have to assume there isn't a namespace authority, which implies using digesting. Hence 128-bit is currently practice for minimum acceptable hash lengths. ",
          "createdAt": "2019-10-07T17:27:01Z",
          "updatedAt": "2019-10-07T17:27:01Z"
        },
        {
          "author": "richsalz",
          "authorAssociation": "NONE",
          "body": "This is ridiculously large.  IPv6 uses an identifier space that is half the number of bits",
          "createdAt": "2019-10-21T12:18:33Z",
          "updatedAt": "2019-10-21T12:18:33Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think 128 bits being enough for IP addresses implies it is enough for UEIDs. IP addresses get reused serially over time and by NAT. Neither reuse applies to UEIDs. Also, a device with a single IP address may have many sub parts that each have a UEID.  They are connected to each other via a bus, a serial link, BlueTooth or such, not IP.\r\n\r\nOn the other hand, I don't think the non-correlation with IP address automatically makes UEIDs 256 bits. 256 bits is based on the probabilistic analysis in the appendix.",
          "createdAt": "2019-11-08T21:34:18Z",
          "updatedAt": "2019-11-08T21:34:18Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith This discussion is for RAND type UEIDs as you deduced in your comment above. Appendix B should explicitly say that.\r\n\r\nFor crypto, 128 bits is usually considered enough today, but there is always an assumption built into designs that it won't be. Also, there is a lot of use of\r\n256 bits today. For example COSE ECDSA signature are minimum SHA-256.\r\n\r\nIt does seem like UEIDs could start out at 128 bits and transition to 256 bits in ten, twenty or fifty years. All we have to do here and now is say receivers must be prepared for 256 bits. When the time comes a new RFC is issued say 256 bits must be used. The 128-bit and 256-bit UEIDs will coexist just fine. \r\n\r\nI firmly believe we must say now the receivers must be prepared for 256 bits.\r\n\r\nThe question is probably between these two:\r\n\r\n1. Require 256 bits now; waste space for a few decades; no transition will ever be needed.\r\n2. Require only 128 bits now; don't waste space; have a transition if and when the need arises\r\n\r\n\r\n\r\n",
          "createdAt": "2019-11-08T21:48:00Z",
          "updatedAt": "2019-11-08T21:48:00Z"
        },
        {
          "author": "richsalz",
          "authorAssociation": "NONE",
          "body": "Waste space for a few decades?  The IETF is barely 30 years old.\r\n\r\nAlso, \"128 bits is enough\" -- don't confuse the DIGEST with the crypto KEYLENGTH.  Few people think 128-bit digest is good enough, but most think 128bit AES, for example, is good enough.\r\n",
          "createdAt": "2019-11-08T22:01:13Z",
          "updatedAt": "2019-11-08T22:01:13Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@richsalz \r\n\r\nAre you in favor of 1 or 2? I assume 1, but don't understand your comment about IETF being 30 years old.\r\n\r\nAgree that my discussion of bits used by crypto today is not very useful here. The only really useful point is that we build in agility to protocols today so they can use more bits when needed.\r\n",
          "createdAt": "2019-11-12T19:58:27Z",
          "updatedAt": "2019-11-12T19:58:27Z"
        },
        {
          "author": "richsalz",
          "authorAssociation": "NONE",
          "body": "The IETF is 30 years old, planning for \"waste space for a few decades\" when the whole thing has only been around for three seems, well, optimistic? Naive? Wrong? Silly? Because of this, I think 1 is the wrong trade-off and I support 2. (Recall the Internet has already changed core protocols multiple times)",
          "createdAt": "2019-11-12T20:15:24Z",
          "updatedAt": "2019-11-12T20:15:24Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "For me the UEID discussion is strange because UEIDs seem to overload identity and integrity. An IMEI number encodes some information attributes that provides uniqueness within telco networks. There is not expectation of integrity that is provided by some other structure. \r\nIn a perfect world, the structure would be defined using a DDL like CDDL and everything consuming it would support variable length structures. However, the reality is systems are built with fixed length assumptions and so we see schemes that encode multiple attributes into a fixed length structure. If there are many attributes needed to make something \"unique\" then some favor using a hash algorithm since it can reduce anything into a fixed size statistically unique value. The decision to go with 128 or 256 bits has more to do with the intended scope of identifier use. Since UEID intends to combine lots of different identifiers (each being unique within their respective scope) the union of all them creates a larger scope context for understanding uniqueness (aka resistance to collision). Since, nobody (AFAIK) has done an analysis to determine the actual size of the union-of-all-EIDs (UEID), we don't know if 128-bits still has the collision resistance properties it needs. 256 seems safe at least for now. \r\n\r\nAlternatively, EAT / RATS could allow claims that more directly define the identifier type and context. For example, there could be an IMEI claim. \r\n\r\nI'm not sure the intended value of UEID actually exists. \r\n\r\n",
          "createdAt": "2020-01-06T22:42:19Z",
          "updatedAt": "2020-01-06T22:42:19Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "UEIDs can be IMEIs (read the document). UEIDs are only about identity, never about integrity.",
          "createdAt": "2020-01-08T03:02:05Z",
          "updatedAt": "2020-01-08T03:02:05Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzA0NTMyNTk3",
          "commit": {
            "abbreviatedOid": "7aa0912"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-10-21T12:45:32Z",
          "updatedAt": "2019-10-21T12:45:53Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "typo\r\n```suggestion\r\nto internal buses, via serial links, Bluetooth and so on.  This is\r\n```",
              "createdAt": "2019-10-21T12:45:33Z",
              "updatedAt": "2020-02-07T15:31:25Z"
            },
            {
              "originalPosition": 102,
              "body": "```suggestion\r\nHowever, for the very large values involved here, this formula requires floating\r\n```",
              "createdAt": "2019-10-21T12:45:38Z",
              "updatedAt": "2020-02-07T15:31:25Z"
            },
            {
              "originalPosition": 103,
              "body": "```suggestion\r\npoint precision higher than commonly available in calculators and SW so this\r\n```",
              "createdAt": "2019-10-21T12:45:41Z",
              "updatedAt": "2020-02-07T15:31:25Z"
            },
            {
              "originalPosition": 151,
              "body": "```suggestion\r\n32-bytes, is selected because it is the output of the common SHA-256 hash\r\n```",
              "createdAt": "2019-10-21T12:45:45Z",
              "updatedAt": "2020-02-07T15:31:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzI3MTYx",
          "commit": {
            "abbreviatedOid": "7aa0912"
          },
          "author": "setrofim",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T13:13:11Z",
          "updatedAt": "2019-11-07T13:13:12Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Typo\r\n```suggestion\r\n## Collision Probability\r\n```",
              "createdAt": "2019-11-07T13:13:12Z",
              "updatedAt": "2020-02-07T15:31:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE1Nzk5ODc0",
          "commit": {
            "abbreviatedOid": "fda4a07"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-12T19:50:55Z",
          "updatedAt": "2019-11-12T19:50:56Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "Grammar",
              "createdAt": "2019-11-12T19:50:55Z",
              "updatedAt": "2020-02-07T15:31:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI3MzE3NTAy",
      "title": "Revamp debug disable so it is levels, not Booleans",
      "url": "https://github.com/ietf-rats-wg/eat/pull/36",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This addresses #22",
      "createdAt": "2019-10-11T18:30:31Z",
      "updatedAt": "2020-03-19T18:05:38Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "22462da89d970fbb3b5922402263381ea5052692",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "update_debug_claim",
      "headRefOid": "cc226daac1d6dcef8bcd71e7bbd1ca4e268fc038",
      "closedAt": "2020-03-19T18:05:30Z",
      "mergedAt": "2020-03-19T18:05:30Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "0bc0f9149f544855ba400989efdd9b4961257ef8"
      },
      "comments": [
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "The change to a set of levels is a good one as it solves inconsistencies with the previous multi claim set.\r\n\r\nPSA calls out a further concept to be tracked for debug: how intrusive the level of debug is, ie. whether it just applies to the non-secure application state or to a higher level of security. The implication of the latter is that the configuration of the device/entity could be compromised making it unsuitable for further trust.",
          "createdAt": "2019-11-07T14:29:40Z",
          "updatedAt": "2019-11-07T14:29:40Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@SimonFrost-Arm \r\n\r\nI am scared to try to express debug intrusiveness in claims because I'm not sure it can be easily done in a general way. Different CPU and system architectures might be too different. Are you suggesting we try? \r\n\r\nTo go into more detail... Some HW I know of has a whole facility for HW diagnostic and verification. It just helps the HW manufacturer know that the chip actually works. It might be used during RMA to figure what is wrong.\r\n\r\nAnother is a facility like ARM CoreSight. I believe that is connected to through JTAG.\r\n\r\nWhen you talk about PSA secure vs non-secure are you talking about HW or SW debug facilities?\r\n\r\n\r\n\r\n",
          "createdAt": "2019-11-12T19:29:36Z",
          "updatedAt": "2019-11-12T19:29:36Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I do not understand how this is supposed to work, tbh. Is this supposed to be a choice of integers that represent a range? If so, it is not doing that. If not, I do not understand what is attempted.\r\n\r\n>     debug_disable_level = (\r\n>         not_disabled: 0, \r\n>         disabled: 1,\r\n>         disabled_since_boot: 2,\r\n>         permanent_disable: 3,\r\n>         full_permanent_disable: 4\r\n>     )\r\n\r\nBranch cddl-fixes includes a \"fixed\" version that still uses bool. If I understand the intent here, I can incorporate that in the cddl-fixes branch.",
          "createdAt": "2019-11-27T20:53:44Z",
          "updatedAt": "2019-11-27T20:53:44Z"
        },
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "The intent of the change is to remove the possibility of inconsistency that could occur with the multi bool approach e.g. it would be possible to have a token containing both debug_disabled_since_boot and debug_permanently disabled - which is the case? Replacing the multiple values with a single multi-level value makes the declaration much clearer.",
          "createdAt": "2019-11-28T10:57:06Z",
          "updatedAt": "2019-11-28T10:57:06Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "If all possible options are mutual exclusive it would look like this:\r\n\r\n> debug_disable_level /= not_disabled\r\n> debug_disable_level /= disabled\r\n> debug_disable_level /= disabled_since_boot\r\n> debug_disable_level /= permanent_disable\r\n> debug_disable_level /= full_permanent_disable\r\n> \r\n> ;this is the CBOR specific value list\r\n> not_disabled = 0\r\n> disabled = 1\r\n> disabled_since_boot =2\r\n> permanent_disable = 3\r\n> full_permanent_disable = 4\r\n",
          "createdAt": "2019-11-28T11:41:57Z",
          "updatedAt": "2019-11-28T11:41:57Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "After I understood the intent via PR #43 and if you really want to use the \"&\" prefix, the corresponding CDDL for this PR should probably look like this:\r\n\r\n> boot_state_claim = ( boot_state => boot_state_type )\r\n> \r\n> debug_disable_level = (\r\n>   not_disabled,\r\n>   disabled,\r\n>   disabled_since_boot,\r\n>   permanent_disable,\r\n>   full_permanent_disable,\r\n> )\r\n> \r\n> boot_state_type = [\r\n>   secure_boot_enabled: bool,\r\n>   debug_state: &debug_disable_level,\r\n> ]\r\n> \r\n> ;this is the CBOR specific value list\r\n> not_disabled = 0\r\n> disabled = 1\r\n> disabled_since_boot = 2\r\n> permanent_disable = 3\r\n> full_permanent_disable = 4\r\n\r\n",
          "createdAt": "2019-11-28T12:15:36Z",
          "updatedAt": "2019-11-28T12:15:36Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz \r\n\r\n> debug_disable_level = (\r\n>     not_disabled: 0, \r\n>     disabled: 1,\r\n>     disabled_since_boot: 2,\r\n>     permanent_disable: 3,\r\n>     full_permanent_disable: 4\r\n> )\r\n\r\nThis seems OK to me because it is the same as section 2.2.2.2 in RFC 8610.\r\n\r\nSeems simpler to do this than the other ways you've proposed. I assume it would work OK for JSON.\r\n\r\nI've fixed the other CDDL that was clearly wrong with a commit.\r\n\r\nThanks for the input.\r\n",
          "createdAt": "2019-12-06T22:29:23Z",
          "updatedAt": "2019-12-06T22:29:23Z"
        },
        {
          "author": "adrianlshaw",
          "authorAssociation": "NONE",
          "body": "> When you talk about PSA secure vs non-secure are you talking about HW or SW debug facilities?\r\n\r\n@laurencelundblade in the PSA definition it can be either or a combination, depending on the hardware platform capabilities. Nothing platform specific is assumed. In fact, \"Secure and non-secure\" isn't actually the term used. The actual states are more about the debug property relative to the root of trust. See the diagram below, but replace \"PRoT\" with your favourite root of trust e.g. TEE. \r\n\r\n![image](https://user-images.githubusercontent.com/762640/71889110-5a884b80-3139-11ea-9b0b-df893498b1dc.png)\r\n\r\nThe Decommissioned state is RMA. The \"Terminate\" process is the point of no return because the root of trust is compromised. \r\n\r\n\"Recoverable PRoT debug\" is an optional state that covers a case where you have special hardware that hides the root secrets while in that mode, making it possible to re-establish trust (go back to \"Secured\") once leaving that mode.",
          "createdAt": "2020-01-07T10:42:56Z",
          "updatedAt": "2020-01-07T10:42:56Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@SimonFrost-Arm Good comment. Updated with a new Not Reported debug level that is also the default.",
          "createdAt": "2020-01-15T21:53:43Z",
          "updatedAt": "2020-01-15T21:53:43Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzgwODYz",
          "commit": {
            "abbreviatedOid": "2755c26"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T14:34:04Z",
          "updatedAt": "2019-11-07T14:34:05Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "```suggestion\r\nmay be possible to enable them in the future, and it may also be possible that they were enabled in the past after the device booted, but they are currently disabled.\r\n```",
              "createdAt": "2019-11-07T14:34:04Z",
              "updatedAt": "2020-03-19T18:02:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 41,
      "id": "MDExOlB1bGxSZXF1ZXN0MzI5NDEzMzYx",
      "title": "OEMID clarifications and references",
      "url": "https://github.com/ietf-rats-wg/eat/pull/41",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Corrected text and references to match up to the IEEE documents and specs.\r\n\r\nDefines new encoding type, hex_bstr, that encodes to bstr in CBOR for compactness and hexadecimal text in JSON for readability.\r\n\r\nThis is to address #38",
      "createdAt": "2019-10-17T18:59:42Z",
      "updatedAt": "2019-12-05T23:05:26Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "bdb24b4b85f06781b66f92d6c458e489d39cd8ab",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "update_oui",
      "headRefOid": "2ab6190aa9be537fcb70523c352154d49a75b00b",
      "closedAt": "2019-12-05T23:05:18Z",
      "mergedAt": "2019-12-05T23:05:18Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a69331d7248345bde8fad2de93e4ce39c753be85"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "https://standards.ieee.org/products-services/regauth/oui/index.html\r\n\r\nThe IEEE highlights that the term Organizationally Unique Identifier (OUI) is deprecated and superseded by the terms MA-L, MA-M, and MA-S, which are now used for both for EUI-48 and EUI-60.",
          "createdAt": "2019-11-27T20:50:07Z",
          "updatedAt": "2019-11-27T20:50:07Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@henkbirkholz Yes, this pull request changes to the correct MA-L... terminology.",
          "createdAt": "2019-12-05T22:50:16Z",
          "updatedAt": "2019-12-05T22:50:16Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 42,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMxNzM1NDIx",
      "title": "Add nonce claim, update jti/cti text",
      "url": "https://github.com/ietf-rats-wg/eat/pull/42",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #37",
      "createdAt": "2019-10-23T20:40:45Z",
      "updatedAt": "2021-05-25T18:35:25Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a69331d7248345bde8fad2de93e4ce39c753be85",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "nonce",
      "headRefOid": "a02377d0dff75d01c2330039a5aa01fef655c6e5",
      "closedAt": "2020-01-06T19:11:21Z",
      "mergedAt": "2020-01-06T19:11:21Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "efd3e2c1217936ca454d8b666e90e1a832a46152"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@gmandyam in #28 discusses multiple relying parties (RPs) and nonces. There are three ways to solve this. \r\n\r\n1. Each RP can generate their own nonce and send it to the attester. The attester puts them all in. In that case the nonce should be either a bstr with a single nonce or an array of bstr to carry multiple nonces. This is incompatible with the JWT nonce and we'd have to create a new claim it. Call it the multi-nonce claim.\r\n\r\n2. The RP's are expected to coordinate around one nonce and the nonce claim is just a single as it is. This is not too difficult. One of them has to generate it and tell the others what it is. This is compatible with the JWT nonce and with the current text.\r\n\r\n3. We can define two claim types. One is the nonce as is in JWT and as in this PR. The other is the multi-nonce.\r\n\r\nI'm in favor of 2 now. If we really need multiple nonces sometime in the future we can turn it into 3. I guessing multiple nonces will not be that necessary. I can't say that I've seen it any other protocol.",
          "createdAt": "2019-12-06T21:48:50Z",
          "updatedAt": "2019-12-06T21:48:50Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzM2OTA3",
          "commit": {
            "abbreviatedOid": "faaa9d0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T13:29:58Z",
          "updatedAt": "2019-11-07T13:29:59Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "It is not clear what this means to me.  Besides, in the light of the text proposed in #28\r\n```\r\n[...] Since an EAT may be created by an entity that may not support the same type of transport security as the consumer of the EAT, intermediaries may be required to bridge communications between the entity and consumer.  As a result, it is RECOMMENDED that both the consumer create a nonce, and the entity leverage the nonce along with COSE mechanisms for encryption and signing to create the EAT\r\n```\r\nthis should probably be dropped?",
              "createdAt": "2019-11-07T13:29:59Z",
              "updatedAt": "2019-12-06T22:43:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE4NzEwNDc0",
          "commit": {
            "abbreviatedOid": "faaa9d0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-19T00:04:30Z",
          "updatedAt": "2019-11-19T00:04:30Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Hi Thomas,\r\n\r\nHave read this over a few times, but I don't know what is not clear to you and what you think should be dropped.\r\n",
              "createdAt": "2019-11-19T00:04:30Z",
              "updatedAt": "2019-12-06T22:43:18Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE4ODYxNjMz",
          "commit": {
            "abbreviatedOid": "faaa9d0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-19T08:43:45Z",
          "updatedAt": "2019-11-19T08:43:46Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "(Apologies for the late response -- for some reasons I didn't get the nudge from\r\nGitHub on your reply).   The thing that I don't understand is `Note that\r\nintrinsically by the nature of a nonce no security is needed`.  In fact, I think\r\nit's quite the opposite: the nonce is core to the security of the attestation?\r\nMy suggestion is to simply drop the `Note [...] no security is needed`.",
              "createdAt": "2019-11-19T08:43:45Z",
              "updatedAt": "2019-12-06T22:43:18Z"
            }
          ]
        }
      ]
    },
    {
      "number": 43,
      "id": "MDExOlB1bGxSZXF1ZXN0MzM1MjYyMTM0",
      "title": "revamp of submods and nested tokens",
      "url": "https://github.com/ietf-rats-wg/eat/pull/43",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This makes nested tokens be part of the submods part of the token with a more unified results.\r\n\r\nIt gets rid of the submod name claim and uses the map label instead.\r\n\r\nIt adds the attachment claim which describes how securely submod is attached.",
      "createdAt": "2019-11-01T03:14:44Z",
      "updatedAt": "2020-02-13T11:15:54Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "7d9a8de9cf276d7a71b4eaa8bf254f3757966fcf",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "submods_revamp",
      "headRefOid": "622711b698cedb42e77b9b576cc065542601c784",
      "closedAt": "2020-02-13T11:15:54Z",
      "mergedAt": "2020-02-13T11:15:54Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2c14b48b2b43df2f23f1c6c0a0540f4ee1db8331"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm sorry but what we want to achieve with this change is not clear to me. (I've looked for a related Issue to no avail.) Could you please describe the rationale of this change in an Issue (or point me at an existing one, if I overlooked it)?\r\nAs a meta-comment I think in general it's good practice to open an Issue first where the problem is explained (maybe just pointing to the corresponding mailing list thread, if one exist) and a solution is proposed.  This gives others the opportunity to discuss both the problem and the solution design before it's actually implemented.",
          "createdAt": "2019-11-07T17:28:28Z",
          "updatedAt": "2019-11-07T17:28:28Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati \r\n\r\nBefore this change\r\n- Only one nested EAT was possible (without duplicate map keys/labels; duplicating keys/labels is not good form).\r\n- There was no way to name a nested EAT\r\n- A nested EAT was treated separately from a submod so it made writing about inheritance and attachment in common harder.",
          "createdAt": "2019-11-08T21:53:43Z",
          "updatedAt": "2019-11-08T21:53:43Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Here's a comment from Ned that I'm copying to the mainline for easier reference:\r\n\r\n> The submodule could have attestation capability itself in which case the verifier might be instructed to assess the subcomponent claims as another instance of an attestation token. Maybe it makes sense to include an attachment_type for attestable_submod? Additionally, the submodule could be attached using a secure session / protocol. I don't see this represented. The structure is an enumeration, but it is possible for multiple attachment_type conditions to be true at the same time. For example, a submodule could separately attests and be connected via secure session. Possibly attestable_submod is a property that belongs somewhere else? A secure_protocol attachment type could be true as well when one of the other attachment_types are true. Maybe it belongs somewhere else too? (Or these should be booleans).\r\n\r\nNed, it seems like you want to distinguish between \"claims from a submod\" and \"attested claims from a submod\". I don't know what the difference is (yet). Can you give some examples?\r\n\r\nOn attachment_type, we could make it an array of enumerated so you can specify more than one. We could even have an IANA registry for new types.  My thought is to try to come up with a small fixed useful set of classes. If we let 1000 flowers bloom here it will become useless to the relying party. They should be classes, rough categories, not exact types. The vendor has to pick the one most suited.\r\n\r\n\r\n",
          "createdAt": "2019-11-21T00:19:01Z",
          "updatedAt": "2019-11-21T00:19:01Z"
        },
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "It would seem that 'attested claims from a submod' is already covered by nested-eat?",
          "createdAt": "2019-11-21T12:08:30Z",
          "updatedAt": "2019-11-21T12:08:30Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Same problem as with PR #36 \r\n\r\nIf the CDDL fragment is supposed to be a type choice that represent a range of values, it is not doing that.\r\n\r\n>     attachment_type = (\r\n>     unspecified: 1,\r\n>     device_internal: 2,\r\n>     pcb_internal: 3,\r\n>     chip_internal: 4\r\n>     )\r\n> \r\n>     attachment_type_claim = (\r\n>     attachment: attachment_type )\r\n\r\nIf i understand the intent, I can add corresponding CDDL to the cddl-fixes branch.",
          "createdAt": "2019-11-27T21:03:16Z",
          "updatedAt": "2019-11-27T21:03:16Z"
        },
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "I believe the appropriate CDDL would be\r\nattachment_type_claim = &attachment_type\r\nwith attachment_type left as it is as a group. Per 2.2.2.2 of draft-ietf-cbor-cddl-03.\r\n\r\nThis encoding already appears to be in place in PR36",
          "createdAt": "2019-11-28T11:10:28Z",
          "updatedAt": "2019-11-28T11:10:28Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Yes. https://tools.ietf.org/html/rfc8610#section-2.2.2.2 is an alternative use. Typically, it is used for either for a large number of values or if the group is also used in other contexts. In general, this is fine, too. It is just me being personally a bit more in favor of the style I just highlighted in #36.\r\n\r\nPR #36 is broken nevertheless (sorry for the cross issue post), as the will not work, it  also uses string labels with implied cuts, and you cannot use a rule inside as an array item. I'll post another comment there.\r\n\r\nComing back to this PR. I assume what you want looks more like this (I'd also start with index \"0\" to be consistent with PR #36:\r\n\r\n> attachment_type_claim = ( attachment => &attachment_type )\r\n> \r\n> attachment_type = (\r\n>   unspecified,\r\n>   device_internal,\r\n>   pcb_internal,\r\n>   chip_internal,\r\n> )\r\n> \r\n> ;this is the CBOR specific value list\r\n> unspecified = 0\r\n> device_internal = 1\r\n> pcb_internal = 2\r\n> chip_internal = 3\r\n\r\n\r\n",
          "createdAt": "2019-11-28T12:04:04Z",
          "updatedAt": "2019-11-28T12:04:04Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "> It would seem that 'attested claims from a submod' is already covered by nested-eat?\r\n\r\nThis PR replaces the nested-eat claim. ",
          "createdAt": "2019-12-06T22:02:52Z",
          "updatedAt": "2019-12-06T22:02:52Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Laurence said \"Ned, it seems like you want to distinguish between \"claims from a submod\" and \"attested claims from a submod\". I don't know what the difference is (yet). Can you give some examples?\"\r\nAttested means signed by an Attester. If the submods/nested-eat allows for 'unsigned EAT' structures then it is possible to describe components that exist but are not 'attested'. There is a security semantic that could become misinterpreted by Verifiers if signing of something that is nested wasn't inspected by the Attester. Example is a peripheral device that is enumerated by BIOS but contains embedded firmware (as opposed to option-ROM). The BIOS is in the Attester but can't inspect the embedded firmware of the peripheral device. It can assert that the device exists (was enumerated) but can't vouch for the integrity of its firmware. The peripheral should be a second Attester based on a root of trust that exists in the peripheral. \r\n\r\nIf the EAT structure describes both the peripheral device (D1) and the main board / platform (P1) then the Attester for P1 will likely sign an EAT that contains P1 claims (p0, p1, p2,...) and D1 claims (d0, d1, d2, d3,...) using the P1 attestation key. If [] denotes signing, the claim might look like [[p0, p1, p2, [d0, d1, d2,...]KD1 ]KP1; where K denotes a signing key. \r\n\r\nIf on the other hand, there isn't an attester for D1, but P1 wants to assert that D1 exists. Then it would product an EAT with the structure [p0, p1, p2,..., d0, d1, d2, ...]KP1 \r\n\r\nThe point of possible confusion by the Verifier is whether or not P1 is saying that D1 exists or that D1 is attested by P1; where \"attested\" also (in addition to signing) means that the integrity of D1 is proven to be correct because of some special access P1 has to D1. \r\n\r\nThe Interface (attachment_type) claim may be helpful in that it could describe the relationship between P1 and D1. For example, if D1 firmware were stored in memory that is dual ported to P1 then P1 could directly read it and compute its hash. However, the current interface claim structure doesn't describe the security relevant properties of the interface (AFAK).\r\n\r\nI think the architecture intends for Attester to mean an environment that has special access to the Attestee such that it can prove its state is X AND that it can sign claims about X. \r\n\r\nIf the structure of nested EATs somehow allows the Attester/Attestee relationships to breakdown then Verifiers will be confused about the security properties of what an EAT is asserting. ",
          "createdAt": "2020-01-06T22:15:22Z",
          "updatedAt": "2020-01-06T22:15:22Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzQ2NjU2",
          "commit": {
            "abbreviatedOid": "5606f48"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T13:45:34Z",
          "updatedAt": "2019-11-07T13:45:35Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "If submods are used structurally within an EAT, they should be able to have the same level of security as the EAT (rather than making lesser security mandatory). May just be unfortunate usage of the word 'should' and can be stated as 'not higher'?",
              "createdAt": "2019-11-07T13:45:34Z",
              "updatedAt": "2020-02-13T11:13:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzU0OTI3",
          "commit": {
            "abbreviatedOid": "5606f48"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T13:57:37Z",
          "updatedAt": "2019-11-07T13:57:37Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "this seems to contradict line 755 which mandates the inclusion of all such claims.\r\nShould there be an explicit statement (or claim value) for whether submod is expected to inherit or not rather than making it implicit on attachment type?",
              "createdAt": "2019-11-07T13:57:37Z",
              "updatedAt": "2020-02-13T11:13:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzEzMzU2ODcx",
          "commit": {
            "abbreviatedOid": "5606f48"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-07T14:00:25Z",
          "updatedAt": "2019-11-07T14:00:25Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "mismatch here with naming @ line 660",
              "createdAt": "2019-11-07T14:00:25Z",
              "updatedAt": "2020-02-13T11:13:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE1Nzk1ODEw",
          "commit": {
            "abbreviatedOid": "5606f48"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-12T19:44:09Z",
          "updatedAt": "2019-11-12T19:44:09Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "Oversight. Should be less than or equal too. Thanks for catching.",
              "createdAt": "2019-11-12T19:44:09Z",
              "updatedAt": "2020-02-13T11:13:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE1Nzk5MTE0",
          "commit": {
            "abbreviatedOid": "5606f48"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-12T19:49:36Z",
          "updatedAt": "2019-11-12T19:49:36Z",
          "comments": [
            {
              "originalPosition": 145,
              "body": "Line 754 is explicit that there is no inheritance.\r\n\r\nAgree that the wording here is fuzzy.\r\n\r\nThe nonce is intrinsically different from other claims as it does not describe the entity. It comes from the relying party to prevent replay. To replicate or not replicate the nonce could be considered to not be an inheritance question and we could have explicit text spelling all this out.",
              "createdAt": "2019-11-12T19:49:36Z",
              "updatedAt": "2020-02-13T11:13:28Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE1Nzk5MzA0",
          "commit": {
            "abbreviatedOid": "5606f48"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2019-11-12T19:49:55Z",
          "updatedAt": "2019-11-12T19:49:55Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "Agreed",
              "createdAt": "2019-11-12T19:49:55Z",
              "updatedAt": "2020-02-13T11:13:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 47,
      "id": "MDExOlB1bGxSZXF1ZXN0MzQ2MzgxMzg3",
      "title": "added first pass of (Co)SWID and SUIT Manifest Claims",
      "url": "https://github.com/ietf-rats-wg/eat/pull/47",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This is a first proposal for content matching the proposal in issue https://github.com/ietf-rats-wg/eat/issues/46.",
      "createdAt": "2019-11-27T18:47:22Z",
      "updatedAt": "2021-05-28T18:30:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "5bfb9df8c6c6043a71bc98c140a100e4a0c278c6",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "coswid-&-suit-mainfest-claims",
      "headRefOid": "beff915ec4debd38d6137ed902b69ddf40d0666d",
      "closedAt": "2021-05-28T18:30:23Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "There is a lesson learned here.... \ud83d\ude48\r\n\r\nUsing an \"&\" in a branch name does not make CircleCI very happy...\r\n\r\n> mkdir -p /tmp/ghpages127/coswid-&-suit-mainfest-claims\r\n> bash: -suit-mainfest-claims: command not found\r\n> lib/ghpages.mk:56: recipe for target '/tmp/ghpages127/coswid-&-suit-mainfest-claims' failed",
          "createdAt": "2019-11-27T18:51:40Z",
          "updatedAt": "2019-11-27T18:51:40Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #102 ",
          "createdAt": "2021-05-28T18:30:23Z",
          "updatedAt": "2021-05-28T18:30:23Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 48,
      "id": "MDExOlB1bGxSZXF1ZXN0MzQ2NDE5NjQ3",
      "title": "first pass on fixing CDDL specification fragments ",
      "url": "https://github.com/ietf-rats-wg/eat/pull/48",
      "state": "CLOSED",
      "author": "henkbirkholz",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "According to the new intend of using is as a data model for EAT, initial focus on CWT",
      "createdAt": "2019-11-27T20:46:03Z",
      "updatedAt": "2021-05-25T18:35:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "5bfb9df8c6c6043a71bc98c140a100e4a0c278c6",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "cddl-fixes",
      "headRefOid": "e144f73d145f42fa63278675353ba1d30292b2c8",
      "closedAt": "2020-11-09T18:58:27Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @henkbirkholz for this. It is helpful and I've been using it to update the other PRs. I probably won't merge this, just use parts in the other PRs because it has lots of merge conflicts with the other PRs. I will leave it open until all the CDDL is resolved.\r\n",
          "createdAt": "2019-12-07T00:44:20Z",
          "updatedAt": "2019-12-07T00:44:20Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This has been overtaken by other fixes.",
          "createdAt": "2020-11-09T18:58:27Z",
          "updatedAt": "2020-11-09T18:58:27Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 52,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODgwNzY5",
      "title": "Lots of CDDL fixes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/52",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-13T13:54:03Z",
      "updatedAt": "2020-02-19T11:35:04Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "136d631593e21078c3d1010f1866ce837f7ed189",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ll_cddl_fixes",
      "headRefOid": "28f56165762c5b073c43e458631bf608ea05e0d7",
      "closedAt": "2020-02-19T11:35:04Z",
      "mergedAt": "2020-02-19T11:35:04Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a648f41f4040e94847d2f6669bb0045e4331d53a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4Mjg5Nzg5",
          "commit": {
            "abbreviatedOid": "db6096a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-13T15:05:04Z",
          "updatedAt": "2020-02-18T09:04:40Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "s/defineeach/define each/g",
              "createdAt": "2020-02-13T15:05:04Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            },
            {
              "originalPosition": 54,
              "body": "As the CDDL fixes are based on PR #48 posted by me. Is the change back to string label here intentional?\r\n\r\nAlso, why allow for 7 byte length (56 bit)? Also, the max size is now 264 bit. Is there a reason I missed?\r\n\r\nIf we want to allow for 128 bit and 256 bit. I'd still propose\r\n\r\nueid-claim /= ( ueid => bytes .size 16 )\r\nueid-claim /= ( ueid => bytes .size 32 )\r\n\r\nand do not understand this change, to be honest.",
              "createdAt": "2020-02-13T19:47:43Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            },
            {
              "originalPosition": 72,
              "body": "What is string-or-uri?\r\n\r\nA reference to a cddl type definition would be useful. If there is none, I'd still propose\r\n\r\norigination-claim = ( origination => text / URI )\r\n\r\nas in PR #48\r\n\r\nAlso, is it intentional that this is a string label, too?",
              "createdAt": "2020-02-13T19:50:02Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            },
            {
              "originalPosition": 96,
              "body": "Again a string label.\r\n\r\nAlso, should this not be size differentiated by eui-48 and eui-64 wrt MA-L?\r\n\r\nAlso, new first time customers cannot get MA-L anymore. Should we therefore explicitly differentiate MA-M and MA-S, too? This is in the text, but not captured by CDDL controls. ",
              "createdAt": "2020-02-13T19:59:43Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            },
            {
              "originalPosition": 155,
              "body": "String labels",
              "createdAt": "2020-02-18T08:56:19Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            },
            {
              "originalPosition": 202,
              "body": "location => location-type",
              "createdAt": "2020-02-18T08:56:42Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            },
            {
              "originalPosition": 378,
              "body": "latitude = \"lat\"",
              "createdAt": "2020-02-18T09:03:10Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMjU1NjI4",
          "commit": {
            "abbreviatedOid": "db6096a"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-18T11:14:12Z",
          "updatedAt": "2020-02-18T11:14:13Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "This is an OUI or CD, not EUI.\r\n\r\nIt needs to be possible to use OUIs and such that were obtained 20-30 years ago, so it is OK as is.",
              "createdAt": "2020-02-18T11:14:12Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMjU1ODI2",
          "commit": {
            "abbreviatedOid": "db6096a"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-18T11:14:34Z",
          "updatedAt": "2020-02-18T11:14:34Z",
          "comments": [
            {
              "originalPosition": 378,
              "body": "Fixed",
              "createdAt": "2020-02-18T11:14:34Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMjU2MzUx",
          "commit": {
            "abbreviatedOid": "db6096a"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-18T11:15:22Z",
          "updatedAt": "2020-02-18T11:15:22Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "It is defined later in the doc roughly as you suggest.",
              "createdAt": "2020-02-18T11:15:22Z",
              "updatedAt": "2020-02-19T11:33:45Z"
            }
          ]
        }
      ]
    },
    {
      "number": 56,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgxMzczNzA2",
      "title": "Fix sentences describing Major type 2 and other types",
      "url": "https://github.com/ietf-rats-wg/eat/pull/56",
      "state": "MERGED",
      "author": "puiterwijk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-28T12:48:51Z",
      "updatedAt": "2020-03-19T18:06:21Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "22462da89d970fbb3b5922402263381ea5052692",
      "headRepository": "puiterwijk/eat",
      "headRefName": "fixtypes",
      "headRefOid": "ff3604d2de7f477bb6241f6ff900bdeb55705d28",
      "closedAt": "2020-03-19T18:06:21Z",
      "mergedAt": "2020-03-19T18:06:21Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "fd566501ef6d4de679b8feee7415eacc0e209bcb"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 59,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk0OTc0MTkx",
      "title": "clarify iat claim; remove age claim; add timestamp to location",
      "url": "https://github.com/ietf-rats-wg/eat/pull/59",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is to address the timing diagram from Eric Voit and others. \r\n\r\nTimestamping of measurements is very important, but no measurement is defined in EAT (yet).\r\n",
      "createdAt": "2020-03-27T21:19:41Z",
      "updatedAt": "2020-11-06T19:35:51Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "6c97e22dbce3e2e5f4e8d573f42167e3aa3401ad",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "timestamp",
      "headRefOid": "9d55bd77ac2930bedeb974dcaf5a4d1e3ce7a9df",
      "closedAt": "2020-11-06T19:35:51Z",
      "mergedAt": "2020-11-06T19:35:51Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4a3e78b6f37f192a55c1fa7e210b95bc6ffdc36d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 60,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTYxMDc0",
      "title": "Context claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/60",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/ietf-rats-wg/eat/issues/57",
      "createdAt": "2020-03-28T22:00:06Z",
      "updatedAt": "2020-11-30T19:45:24Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "fc1332ea343f2790f7a204150368c4b6925aaa3e",
      "headRepository": null,
      "headRefName": "context",
      "headRefOid": "ede2c2f70dab0898dd4bacfd6676e71913ae0b78",
      "closedAt": "2020-11-30T19:45:23Z",
      "mergedAt": "2020-11-30T19:45:23Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4cfcbd9a678c498a34ea6e6a2ce9e0fcd42a1c1d"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This seems more like data that would be sent from the RP/Verifier to the Attester to tell it what to put in the token than a claim that goes in the token.\r\n\r\nIs this related to Intel/FIDO SDO?\r\n\r\nWhen a token is generated with one context type, what is it doing that is different from generating it for a different context type? It seems there has to be a difference. If there was no difference the RP wouldn't care and wouldn't need to know.\r\n",
          "createdAt": "2020-11-11T18:41:13Z",
          "updatedAt": "2020-11-11T18:41:13Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@laurencelundblade \r\n\r\nIt is not related to FIDO or Intel/SDO.  It is from QWES token:  https://tools.ietf.org/html/draft-mandyam-rats-qwestoken-00#section-3.3.  \r\n\r\nOne use case is \"hardened TLS\", where a TLS client cert is required using a keypair created in a TEE.  The CA may require an attestation along with the CSR.  The context claim in the EAT will indicate to the RP (in this case a CA) that the private key corresponding to the CSR held is within a trusted environment.\r\n\r\n",
          "createdAt": "2020-11-11T22:04:05Z",
          "updatedAt": "2020-11-11T22:04:05Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNzA0MTcw",
          "commit": {
            "abbreviatedOid": "aaec8cd"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-17T19:11:02Z",
          "updatedAt": "2020-11-17T19:31:38Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Seems like this would be better named \"generic\". It's the one you pick when it's none of the others. I don't think it is on-demand because there will be cases when it is not one of the others and the consumer is not demanding the most recent.",
              "createdAt": "2020-11-17T19:11:03Z",
              "updatedAt": "2020-11-30T19:44:39Z"
            },
            {
              "originalPosition": 33,
              "body": "This should say explicitly that it is PoP *of a key* to be more clear.",
              "createdAt": "2020-11-17T19:12:28Z",
              "updatedAt": "2020-11-30T19:44:39Z"
            },
            {
              "originalPosition": 5,
              "body": "What about renaming this to \"Intended Use\" or \"Intended Use Class\" or \"Use Class\"? It definitely seems like a classification scheme so I think of the different values as different *classes*.",
              "createdAt": "2020-11-17T19:17:30Z",
              "updatedAt": "2020-11-30T19:44:39Z"
            },
            {
              "originalPosition": 8,
              "body": "Maybe add \"This claim can be used as a way for an application using EAT to internally distinguish between different ways it uses EAT\". ",
              "createdAt": "2020-11-17T19:24:24Z",
              "updatedAt": "2020-11-30T19:44:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTE2MTE3",
          "commit": {
            "abbreviatedOid": "2f98e3a"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-29T20:59:46Z",
          "updatedAt": "2020-11-29T20:59:46Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Updated draft to change to 'on-demand' to 'generic'",
              "createdAt": "2020-11-29T20:59:46Z",
              "updatedAt": "2020-11-30T19:44:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTE2MTQ2",
          "commit": {
            "abbreviatedOid": "2f98e3a"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-29T21:00:07Z",
          "updatedAt": "2020-11-29T21:00:07Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Updated draft to include a more specific description of PoP",
              "createdAt": "2020-11-29T21:00:07Z",
              "updatedAt": "2020-11-30T19:44:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTE2MTgy",
          "commit": {
            "abbreviatedOid": "2f98e3a"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-29T21:00:31Z",
          "updatedAt": "2020-11-29T21:00:32Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Changed name from 'context' to 'intended-use'",
              "createdAt": "2020-11-29T21:00:31Z",
              "updatedAt": "2020-11-30T19:44:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTE2MzM3",
          "commit": {
            "abbreviatedOid": "8fc4c70"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-29T21:02:29Z",
          "updatedAt": "2020-11-29T21:02:29Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Added statement.  Please check.",
              "createdAt": "2020-11-29T21:02:29Z",
              "updatedAt": "2020-11-30T19:44:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 61,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA2MjY1OTc1",
      "title": "Disallow floating-point dates",
      "url": "https://github.com/ietf-rats-wg/eat/pull/61",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "CWT allows floating-point dates, but they are of no value and add an implementation burden, thus EAT is disallowing them.\r\n",
      "createdAt": "2020-04-20T19:48:40Z",
      "updatedAt": "2020-11-23T22:24:10Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d7f685d2f808e1f5214d431c9865850982381009",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "no-float",
      "headRefOid": "916b787618c717b1cf71af814d4deba4f701b3c6",
      "closedAt": "2020-11-23T22:23:52Z",
      "mergedAt": "2020-11-23T22:23:52Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "91763d2374840cf79a0f53df7bacaa9425fdab91"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This closes #49",
          "createdAt": "2020-11-23T22:24:06Z",
          "updatedAt": "2020-11-23T22:24:06Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 62,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA2NzU0Nzky",
      "title": "Add defintion of UCCS and UJCS",
      "url": "https://github.com/ietf-rats-wg/eat/pull/62",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "UCCS and UJCS are unprotected CWT/JWT for use in contexts where protection is unnecessary or provided by other means.",
      "createdAt": "2020-04-21T15:59:35Z",
      "updatedAt": "2020-10-28T18:10:50Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "aac5de214068993208b41066f1717222abde6114",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "uccs",
      "headRefOid": "ed0e34b92c3efdfd9d44fc99ab8bf40f15ee79a4",
      "closedAt": "2020-10-28T18:10:50Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "jimsch",
          "authorAssociation": "NONE",
          "body": "The JOSE way to do this is (shudder) to create a JWT with the signature algorithm of None.  You probably need to review this depending on where you are planning to use this.",
          "createdAt": "2020-04-21T16:45:50Z",
          "updatedAt": "2020-04-21T16:45:50Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this meant to address https://github.com/ietf-rats-wg/eat/issues/54?  If not, which issue is associated with the PR?",
          "createdAt": "2020-04-21T16:51:52Z",
          "updatedAt": "2020-04-21T16:51:52Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, this is to address #54 ",
          "createdAt": "2020-04-26T08:21:42Z",
          "updatedAt": "2020-04-26T08:21:42Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed because UCCS is now in a separate draft by Henk",
          "createdAt": "2020-10-28T18:10:50Z",
          "updatedAt": "2020-10-28T18:10:50Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwMjA1NTQx",
      "title": "Clarify and simplify way IMEIs are encoded",
      "url": "https://github.com/ietf-rats-wg/eat/pull/66",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "IMEI is encoded as byte string of 14 bytes eliminating confusion about big/little endian and conversion to/from an integer value. \r\n\r\nDoes make IMEI's encode to 14 bytes instead of 6 so there's a little bit of wasted space due to this.",
      "createdAt": "2020-10-26T17:53:25Z",
      "updatedAt": "2020-11-03T18:41:36Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "ce8393575f5038919f3128f61efecc56c27d4a80",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "IMEI_Encoding",
      "headRefOid": "b52cda59ce5dd00f0629906b05a92ed86239b6a9",
      "closedAt": "2020-11-03T18:41:36Z",
      "mergedAt": "2020-11-03T18:41:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8e3aa5671999d555afc142368445386b20af2f87"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 67,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwMzA4Nzk5",
      "title": "submods: UCCS, bstr wrapping, tagging rules",
      "url": "https://github.com/ietf-rats-wg/eat/pull/67",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Allows UCCS tokens\r\n\r\nIncorporates JWTs, secured and unsecured.\r\n\r\nRequires nested CWT submodules be bstr wrapped.\r\n\r\nHow to bring a UCCS in as a submodule.\r\n\r\nHow to put a JWT submodule in a CWT and vice versa.\r\n\r\nAll the rules for CWT and COSE tag usage.\r\n\r\nTop-level CDDL to handle CWT/COSE, UCCS and JWT",
      "createdAt": "2020-10-26T21:07:48Z",
      "updatedAt": "2020-11-27T18:40:48Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8e6faefcc49715ab9ee8ac99d0fbf5bbe41bc8a3",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "submod_update",
      "headRefOid": "12f3947aacca223a07b7958723eda211561896c5",
      "closedAt": "2020-11-27T18:40:43Z",
      "mergedAt": "2020-11-27T18:40:43Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "700315fa9ee5b95f125969d81870051e03ff1363"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I'd like to propose the following contributions that would introduce changes to the current proposal.\r\n\r\n1.) The current root type is named eat-claims. I'd propose to change that to simply eat. eat-claims implies simply a claims set, I think.\r\n2.) If you really want to include JWT, the nested-token type should look like this:\r\n\r\n    nested-token = bstr .cbor eat / b64url\r\n\r\n3.) Change the name \"Non-token Submodules\" to simply \"Claims Sets\" (label: nested-claims-set)\r\n4.) Change the name \"Nested EAT\" to \"Token\" (label: nested-token). The nesting is intrinsic anyways and the term submodule does not really add anything - or maybe I am missing some context here? This also allows to \"nest\" CWT and not only EAT. CWT and EAT can only be differentiated by the composition of their Claims Sets anyways and therefore it is technically possible to use a CWT here already (although not allowed and that has to be checked by the application every time).\r\n5.) In general, I wonder why submod-name is necessary. This way each \"unknown\" label has to assumed to be a nested token or claims set. That is rather complex to parse on the application layer, isn't it? I propose to use distinct and well-defined labels for CWT and CWT Claims Sets (and if we are really going to do this the JSON equivalents for JWT as well - still not convinced here).",
          "createdAt": "2020-11-11T10:40:04Z",
          "updatedAt": "2020-11-11T10:41:55Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "1) The most correct CDDL top level definition of an \"eat\" would be a type that is either a CWT, UCCS or JWT. It would reference UCCS and COSE cddl. It would take express the tag rules. However, that runs into quite a mess as there's no way I know of to say a \"COSE with eat-claims as payload\" and would require a COSE implementation inside the cddl tool to validate. (Would CDDL sockets help here? How does the cddl tool handle them?)\r\n\r\n2) I tried that and got into trouble with the cddl validation tool. Also, are you sure JWT is always a complete and proper B64url? I think it has some semantically significant blank lines and there for is not.\r\n\r\n3) I am open to name change, but want to get to common understanding first.\r\n\r\n4) When something is an \"EAT\" its purpose is clearly attestation. When something is a \"CWT\" its purpose may be attestation or something else. Submods should only be tokens whose purpose is attestation.\r\n\r\n5) The intended use of submod name is for things like \"Acme TEE\", \"Qualcomm Hexagon DSP\", \"Infineon Secure Element\". For truly standardized identification of a submod, OEMID, HWVersion and CoSWID should be relied upon by the RP.\r\n\r\n\r\n",
          "createdAt": "2020-11-11T19:13:19Z",
          "updatedAt": "2020-11-11T19:43:19Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NTI3MDcy",
          "commit": {
            "abbreviatedOid": "19c2fe5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-25T14:07:30Z",
          "updatedAt": "2020-11-25T14:07:30Z",
          "comments": [
            {
              "originalPosition": 158,
              "body": "spurious line",
              "createdAt": "2020-11-25T14:07:30Z",
              "updatedAt": "2020-11-27T18:39:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwOTc0Njk3",
      "title": "Add chip, board and device hardware versions",
      "url": "https://github.com/ietf-rats-wg/eat/pull/68",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address #33 \r\n\r\nAllows simple text string versions and EAN-based versions. References version-scheme from CoSWID.\r\n\r\nEAN versions is exactly the same as psa-hardware-version from ARM's PSA token definition.\r\nhttps://tools.ietf.org/id/draft-tschofenig-rats-psa-token-05.html\r\n\r\n",
      "createdAt": "2020-10-27T18:41:09Z",
      "updatedAt": "2020-11-20T18:57:47Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "048bf8446e37d4914c96c6a7eb66b3063e149652",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ean_version",
      "headRefOid": "d7f2843104fa12dd6cf1940c505c61c9c4fe5ff3",
      "closedAt": "2020-11-20T18:57:47Z",
      "mergedAt": "2020-11-20T18:57:47Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "c915a7ab28a5a965e4783834b3232174bc4990ad"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 69,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE0MTQzNDQ2",
      "title": "Factor out CDDL",
      "url": "https://github.com/ietf-rats-wg/eat/pull/69",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Reviewing the editor draft, I noticed the CDDL had a few errors and that the examples were drifting away. Therefore I have taken the liberty to do some restructuring to increase internal coherency, remove any need to copy&paste, and more generally automate all things around CDDL and examples.  Specifically:\r\n\r\n* Extract CDDL for each claim into its own snippet file which is sourced from the markdown;\r\n* Build the amalgamated CDDL from all the snippets automatically and source it from the markdown;\r\n* Make the examples validate against the CDDL as a build/deploy precondition.\r\n\r\nIn the process I had to do the following pretty arbitrary moves:\r\n* Fix the nonce claim to allow both array and scalar;\r\n* Commented out `generic-claim-type` which was used without being defined;\r\n* Consequently dropped from the examples the custom claims;\r\n* Give EAT claims a code-point.\r\n\r\nThere is now a dependency on a couple of tools: `cddl` and `diag2cbor`.  I have made the Travis based CI work with them.  Hopefully Travis is the CI in use in the main repo?  If not, we'll need to port the changes to the target CI environment.\r\n\r\nPS: the JSON claims have not been included yet in the full CDDL.",
      "createdAt": "2020-11-02T15:39:25Z",
      "updatedAt": "2020-11-04T09:46:46Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "ce8393575f5038919f3128f61efecc56c27d4a80",
      "headRepository": null,
      "headRefName": "master",
      "headRefOid": "4b85a239b69e78f4e97f8b3f91c662fc1de0e43a",
      "closedAt": "2020-11-03T19:39:48Z",
      "mergedAt": "2020-11-03T19:39:48Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "6c97e22dbce3e2e5f4e8d573f42167e3aa3401ad"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> There is now a dependency on a couple of tools: `cddl` and `diag2cbor`. I have made the Travis based CI work with them. Hopefully Travis is the CI in use in the main repo? If not, we'll need to port the changes to the target CI environment.\r\n\r\nI have made an image at https://hub.docker.com/repository/docker/thomasfossati/i-d-template that could be used for the circle CI.\r\n\r\nI've also opened a PR on the upstream i-d-template: https://github.com/martinthomson/i-d-template/pull/250",
          "createdAt": "2020-11-04T09:46:45Z",
          "updatedAt": "2020-11-04T09:46:45Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 70,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE3NzAyNzcy",
      "title": "Avoid duplicate entries in the EAT map",
      "url": "https://github.com/ietf-rats-wg/eat/pull/70",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As per [RATS ML discussion](https://mailarchive.ietf.org/arch/msg/rats/nIJ7GouxIRk1nU5ivu4fK-rInR8/).",
      "createdAt": "2020-11-09T11:42:54Z",
      "updatedAt": "2020-11-09T18:56:40Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4a3e78b6f37f192a55c1fa7e210b95bc6ffdc36d",
      "headRepository": null,
      "headRefName": "master",
      "headRefOid": "d5227f6edc18e9b4406e26b0b1918d804f578d72",
      "closedAt": "2020-11-09T18:56:40Z",
      "mergedAt": "2020-11-09T18:56:40Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f1c478441475a867b18e81619e591a73ddcb16bc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 71,
      "id": "MDExOlB1bGxSZXF1ZXN0NTE4NzQzNzkw",
      "title": "First draft of key inclusion",
      "url": "https://github.com/ietf-rats-wg/eat/pull/71",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Seems to me there are lots of use cases for key inclusion and they have semantics that vary too much to fit into  one claim. I\u2019ve chosen primarily to write guidelines rather than define claims.\r\n\r\nOne use case is a CSR. However, RFC 8747 doesn\u2019t define a CSR, so referencing it isn\u2019t sufficient.\r\n\r\nAttestations from the Android key store include things like security level and user authentication requirements for use. Going into all that is too much for EAT, but might be good in another document.\r\n\r\nFIDO goes one step beyond Android and binds a relying party/user/device tuple with the key.\r\n\r\nIt is a little tempting to define a security level for the storage and operation of keys since EAT has a security level definition.",
      "createdAt": "2020-11-10T20:24:26Z",
      "updatedAt": "2020-11-25T18:24:28Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d7f685d2f808e1f5214d431c9865850982381009",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "KeyInclusion",
      "headRefOid": "04e5d341f18508037c87ab26a734f468b9c99c9b",
      "closedAt": "2020-11-25T18:24:28Z",
      "mergedAt": "2020-11-25T18:24:28Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9b8d00db49f6575ec1d9e75aa1e044426a4d8a81"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "See https://github.com/ietf-rats-wg/eat/pull/60.  Would recommend tying this concept in specifically for CSR.",
          "createdAt": "2020-11-10T20:39:09Z",
          "updatedAt": "2020-11-10T20:39:09Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "My thought is that a CBOR format CSR is of use outside of EAT and thus should be defined by the COSE work group and referenced by RATS.  A CBOR format CSR seems like a good and useful thing to do, but don't think it belongs in EAT. Maybe we hurry up and create it so EAT can reference it?\r\n",
          "createdAt": "2020-11-10T21:37:06Z",
          "updatedAt": "2020-11-10T21:37:06Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">A CBOR format CSR seems like a good and useful thing to do, but don't think it belongs in EAT. Maybe we hurry up and create it so EAT can reference it?\r\n\r\nI agree that a CBOR-formatted CSR would be a good idea, and I don't think we need to have an EAT dependency on it.  It can be done separately, as you suggested in the COSE WG.\r\n\r\nContext claim, as intended by https://github.com/ietf-rats-wg/eat/pull/60, is not meant to convert or extend an EAT to a CSR object.  It is meant to describe how the attestation is intended to be used - e.g. in the context of a CSR.  I think that is sufficient for key attestation.  If a CBOR CSR object is defined, then it can encapsulate or be appended with an EAT with the appropriate context set.   ",
          "createdAt": "2020-11-10T21:47:27Z",
          "updatedAt": "2020-11-10T21:47:27Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Could someone summarize the use cases for how CSRs are used/useful? I'd like to understand how CSRs of a Evidence / Endorsement / Reference Value claim set fits into the attestation architecture.",
          "createdAt": "2020-11-10T22:06:08Z",
          "updatedAt": "2020-11-10T22:06:08Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I fear that the \"keys\" topic introduces quite some scope creep to the core EAT I-D. I'd recommend to out-source these types of claims and a definition of their purpose to another complementary I-D.\r\n\r\nAdditionally, I think that CSR are not EAT at all. Having said that, it is absolutely fine to create a CBOR/CWT encoding for CSR, but I strongly recommend to do this in a separate I-D (and in a different one than above -> maybe not even in RATS but somewhere else?).",
          "createdAt": "2020-11-11T10:47:29Z",
          "updatedAt": "2020-11-11T10:47:29Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith The use case I know of for including a CSR is IoT device on boarding. When the device first contacts some IoT management system, it includes a CSR. The management system checks out the attestation and maybe checks some other things not related to the attestation and verifies the possession signature in the CSR. If all is OK, the management system records the key in the CSR and uses it with DTLS for further communication with the device.\r\n\r\nThis isn't my design. I just know some folks are interested in this.\r\n\r\nSo it's not really a CSR since no signed certificate is returned. The CSR is being used because it provides proof of possession that just including a bare key does not.\r\n\r\nAt any rate, it seems we're agreed that we will not do any work in EAT to either define a CBOR CSR or to define a claim that allows for their inclusion. (but of course no prohibition against them should some one feel the need)",
          "createdAt": "2020-11-11T18:30:32Z",
          "updatedAt": "2020-11-11T18:30:32Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Now that we agree that CSRs are off the table in EAT, what do you think of the proposed text?\r\n\r\nI noticed that Google/Android prototype codes puts keys in EAT, but not as a COSE_Key.  The text seems like a good hint to not do things like that.",
          "createdAt": "2020-11-11T18:33:35Z",
          "updatedAt": "2020-11-11T18:33:35Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2ODU2Njc2",
          "commit": {
            "abbreviatedOid": "88b9d1e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-23T21:24:11Z",
          "updatedAt": "2020-11-23T21:24:12Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nFor example, the key may be included as part of an IoT device onboarding protocol.\r\n``",
              "createdAt": "2020-11-23T21:24:11Z",
              "updatedAt": "2020-11-24T18:47:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 72,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIxMDQyNjI5",
      "title": "Add CDDL for JSON nonce label; indicate CDDL from CWT, JWT... is included in EAT",
      "url": "https://github.com/ietf-rats-wg/eat/pull/72",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-14T18:25:14Z",
      "updatedAt": "2020-11-20T19:36:54Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "bf3af0fbe1a4015c3165f1bbab52a40a0f736ac7",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "CDDL_for_JWT_CWT",
      "headRefOid": "e467bee08ad3b94a533900beb62a5d05457c38e4",
      "closedAt": "2020-11-20T19:36:54Z",
      "mergedAt": "2020-11-20T19:36:54Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d7f685d2f808e1f5214d431c9865850982381009"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODMzNjY3",
          "commit": {
            "abbreviatedOid": "14ecfc5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-15T20:47:01Z",
          "updatedAt": "2020-11-15T20:47:02Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nSome of the CDDL included here is for claims that are defined in CWT {{RFC8392}} or JWT {{RFC7519}} or are in the IANA CWT or JWT registries.\r\n```",
              "createdAt": "2020-11-15T20:47:01Z",
              "updatedAt": "2020-11-20T19:34:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODM1Mjgw",
          "commit": {
            "abbreviatedOid": "14ecfc5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-15T21:07:20Z",
          "updatedAt": "2020-11-15T21:07:20Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Laurence, while you are on it:\r\n* `debug-disble` should be `debug-disable`, and\r\n* `nested-eat` should be deleted since it doesn't seem to be used\r\n",
              "createdAt": "2020-11-15T21:07:20Z",
              "updatedAt": "2020-11-20T19:34:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODM3ODY0",
          "commit": {
            "abbreviatedOid": "14ecfc5"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-15T21:38:24Z",
          "updatedAt": "2020-11-15T21:38:25Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Also, I think now we could uncomment `CDDL_FRAGS += json.cddl` in `cddl/vars.mk`",
              "createdAt": "2020-11-15T21:38:24Z",
              "updatedAt": "2020-11-20T19:34:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 73,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIxMDQzMjQ0",
      "title": "Clarify that the security level claim is NOT extensible",
      "url": "https://github.com/ietf-rats-wg/eat/pull/73",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If everyone made up their own security level as they will be wont to do, this claim would be generally useless.\r\n\r\nSee also #4 ",
      "createdAt": "2020-11-14T18:30:08Z",
      "updatedAt": "2020-11-24T18:43:50Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d7f685d2f808e1f5214d431c9865850982381009",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "SecurityLevelNotExtensible",
      "headRefOid": "692ef558c90d2da964e3177442a0e2e550f817ab",
      "closedAt": "2020-11-24T18:43:28Z",
      "mergedAt": "2020-11-24T18:43:28Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "029ea4a59f1cbdd3cbe7b2b7535afa5fd3e9c3ba"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Part address #74",
          "createdAt": "2020-11-24T18:43:49Z",
          "updatedAt": "2020-11-24T18:43:49Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODMzNDgz",
          "commit": {
            "abbreviatedOid": "798bcc7"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-15T20:44:40Z",
          "updatedAt": "2020-11-15T20:44:41Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "I would simply say:\r\n_\"If a particular implementation considers this claim to be inadequate, they should omit it and define their own proprietary claim instead.\"_",
              "createdAt": "2020-11-15T20:44:41Z",
              "updatedAt": "2020-11-24T18:41:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIxMjYzNDE1",
      "title": "Add CDDL group socket to the top-level eat map",
      "url": "https://github.com/ietf-rats-wg/eat/pull/80",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The extension mechanism is bootstrapped with the CWT claims set\r\n\r\nFixes #77",
      "createdAt": "2020-11-15T21:35:11Z",
      "updatedAt": "2020-11-18T19:49:50Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c39f92f49675a27aa67ed3ba65143cbfc002c38f",
      "headRepository": null,
      "headRefName": "cddl-socket",
      "headRefOid": "c3ed6e89b85d5c17f059ee2a43716d32552ed5a2",
      "closedAt": "2020-11-18T19:49:50Z",
      "mergedAt": "2020-11-18T19:49:50Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "048bf8446e37d4914c96c6a7eb66b3063e149652"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 81,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIxOTc4MzYw",
      "title": "First proposal for measurements claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/81",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-16T21:43:43Z",
      "updatedAt": "2021-05-28T18:30:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c39f92f49675a27aa67ed3ba65143cbfc002c38f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "MeasurementsClaim",
      "headRefOid": "181abb747f7156ea7d978c8bc00540d3cc8aac81",
      "closedAt": "2021-05-28T18:30:01Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "The use case for this claim seems to be relevant where a large(?) set of measurements are required for a single purpose e.g. Linux IMA as cited.  Where a single measurement accompanies separate metadata for the context of use (e.g. as part of a CoSWID), this structure is not helpful in its current form (too complex for that purpose). It may be better to separate the use cases rather than have a single measurement type. Perhaps therefore this claim should be called 'bulk_measurement' or similar.",
          "createdAt": "2020-11-17T15:22:49Z",
          "updatedAt": "2020-11-17T15:22:49Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@SimonFrost-Arm\r\n\r\nI think this could be used for simple measurements too. Here's an example of a single measurement.\r\n\r\n    25:                       // label/key indicating measurements claim\r\n      [                       // Array of one measurement scheme\r\n        {                     // Map containing a measurement\r\n          0: \"Acme integrity\" // The measurement scheme\r\n          2: \"HLOS Kernel\"    // What was measured\r\n          3:                  // The measurement values\r\n            [                 // Array of one measurement value\r\n              \"code text\": h'459a7e9820a8749a8a123410c8' // The one measurement value\r\n            ]\r\n        }\r\n      ]\r\n\r\nI think this parallels CoSWID in some ways. Some of the structures are a little complex, but mostly reduce in the simple cases.\r\n\r\nCan you describe the simple measurements of interest?\r\n\r\nAlso, this probably needs an optional timestamp and age field as the measurements may be taken at a time different from the token generation.",
          "createdAt": "2020-12-30T21:00:14Z",
          "updatedAt": "2020-12-30T21:00:14Z"
        },
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "Measurement is probably not standalone in usage, but a sub-part of a wider object describing software. If I'm already describing an object, but want to include a measurement, I have probably already identified it and don't need to repeat the measurement-target entry. \r\n\r\nMeasurement-name (NB renaming this to measurement-scheme may avoid confusion with measurement-target, I had to look twice to confirm which was which) and Measurement-value-name may be implicit for the type of use. eg. in a deployment all measurements may use SHA256 and always measure the code text. If I state this in the profile for the deployment, I shouldn't need explicit text strings to accompany the measurement. \r\n\r\nI'll put the usual appeal in for constrained environments: even with single character text entries, this adds 17 bytes overhead to every measurement. With the example quoted, there is a 45 byte overhead. \r\n\r\nCan we make all of the explanatory fields accompanying the actual measurement optional? That would allow more flexible use and probably address the above concerns.\r\n",
          "createdAt": "2021-01-04T14:00:33Z",
          "updatedAt": "2021-01-04T14:00:33Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Helpful comments. Thanks Simon. Will give it another try (but will probably focus on some other work to get a new draft out in the short term).",
          "createdAt": "2021-01-05T19:39:10Z",
          "updatedAt": "2021-01-05T19:39:10Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This is probably replaced by #102 ",
          "createdAt": "2021-03-30T16:25:53Z",
          "updatedAt": "2021-03-30T16:25:53Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #102 ",
          "createdAt": "2021-05-28T18:30:01Z",
          "updatedAt": "2021-05-28T18:30:01Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 82,
      "id": "MDExOlB1bGxSZXF1ZXN0NTI0OTM5MzEw",
      "title": "rename debug-disable to debug-status; mark it as not extensible",
      "url": "https://github.com/ietf-rats-wg/eat/pull/82",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address issue #79",
      "createdAt": "2020-11-20T20:38:58Z",
      "updatedAt": "2020-11-25T18:20:39Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "029ea4a59f1cbdd3cbe7b2b7535afa5fd3e9c3ba",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "DebugUpdate",
      "headRefOid": "764e9f1962a3d01996f6d9a0688a82dec678de77",
      "closedAt": "2020-11-25T18:20:35Z",
      "mergedAt": "2020-11-25T18:20:35Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "98c87484eab8f30e3ab14cda0a52c6d8cb865caf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NzkyNDY4",
          "commit": {
            "abbreviatedOid": "631fc0d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "thanks!",
          "createdAt": "2020-11-20T21:34:54Z",
          "updatedAt": "2020-11-20T21:35:14Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "typo: Endabled",
              "createdAt": "2020-11-20T21:34:54Z",
              "updatedAt": "2020-11-24T18:52:00Z"
            }
          ]
        }
      ]
    },
    {
      "number": 84,
      "id": "MDExOlB1bGxSZXF1ZXN0NTI4NzQ1MDQ1",
      "title": "Indicate major work required with TODO:",
      "url": "https://github.com/ietf-rats-wg/eat/pull/84",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-27T18:39:57Z",
      "updatedAt": "2020-11-29T05:41:47Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "700315fa9ee5b95f125969d81870051e03ff1363",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "TODO",
      "headRefOid": "5517813f5ab304dbef631f4d2a3be5aef71d94f8",
      "closedAt": "2020-11-29T05:41:41Z",
      "mergedAt": "2020-11-29T05:41:41Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "fc1332ea343f2790f7a204150368c4b6925aaa3e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 85,
      "id": "MDExOlB1bGxSZXF1ZXN0NTI5NzYwODA3",
      "title": "fill in specification for location speed, heading...; location privacy",
      "url": "https://github.com/ietf-rats-wg/eat/pull/85",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #83 and #13.",
      "createdAt": "2020-11-30T19:27:01Z",
      "updatedAt": "2020-11-30T20:46:29Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4cfcbd9a678c498a34ea6e6a2ce9e0fcd42a1c1d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "LocFix",
      "headRefOid": "4a331d2446654fa47dff8982bf2e80f04e03aec8",
      "closedAt": "2020-11-30T20:46:23Z",
      "mergedAt": "2020-11-30T20:46:23Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "335e37628994c96dcbdd958462b3efa080f1e0ee"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 86,
      "id": "MDExOlB1bGxSZXF1ZXN0NTM0ODk3NTE1",
      "title": "Add profile claim and section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/86",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-09T04:58:39Z",
      "updatedAt": "2021-01-11T06:14:22Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4bb6296744ae392bd69e70079ef7ce9fb26ca7d5",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "profiles",
      "headRefOid": "4ce635badaf803964cc70c5337a7a9cb399d0a8a",
      "closedAt": "2021-01-11T06:14:16Z",
      "mergedAt": "2021-01-11T06:14:16Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d09f402ef3bd063e05a40bbb3ce0379631892078"
      },
      "comments": [
        {
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "body": "I approve of the addition of this claim. The description covers what should be in the resultant doc well and is consistent with the example use of this claim in the Arm PSA profile document. \r\n",
          "createdAt": "2020-12-11T15:02:16Z",
          "updatedAt": "2020-12-11T15:02:16Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 87,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQxNDY3Nzkw",
      "title": "Add key ID and endorsement identification section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/87",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-16T22:08:05Z",
      "updatedAt": "2021-05-29T20:36:21Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "7577c44003b36894ba9fc8be70a53a41771a5cce",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "KeyID",
      "headRefOid": "73f40fb84dc5d369c021c9f058ba5a904ba4aa76",
      "closedAt": "2021-05-29T20:36:13Z",
      "mergedAt": "2021-05-29T20:36:13Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3cabc15a18c19960f0d04d3bf5c6157fe2ef4417"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 88,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNjkxOTkx",
      "title": "CBOR interoperability section is reworked",
      "url": "https://github.com/ietf-rats-wg/eat/pull/88",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "No longer defines any blanket interoperability requirements so EAT implementations can take advantage of CBOR serializations appropriate to their environment.\r\n\r\nDefines EAT Constrained Device Serialization that can be required to guarantee interoperability in the frequent constrained device use case.\r\n\r\nFill in all the references.\r\n\r\nThis addresses #78 ",
      "createdAt": "2020-12-21T19:55:12Z",
      "updatedAt": "2021-01-16T20:42:24Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d09f402ef3bd063e05a40bbb3ce0379631892078",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "CBORInterop",
      "headRefOid": "f2c364ebaafbc676b3f55dd9693c6a10344bd525",
      "closedAt": "2021-01-16T20:42:11Z",
      "mergedAt": "2021-01-16T20:42:11Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "ae78d8294632672a5a36cb59c7c6e82bfc94fdf6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 89,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjEyNjM2",
      "title": "Fix references and formatting",
      "url": "https://github.com/ietf-rats-wg/eat/pull/89",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-12-28T19:36:44Z",
      "updatedAt": "2020-12-28T19:55:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "050501dc4cb22c7f9ea7f72cffe4b64d3536089b",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "LinkFixes",
      "headRefOid": "e5b9c7b490c80e05c0dcb05c66871392bab4c51f",
      "closedAt": "2020-12-28T19:55:29Z",
      "mergedAt": "2020-12-28T19:55:28Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4bb6296744ae392bd69e70079ef7ce9fb26ca7d5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 90,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQ5NTYwNzY0",
      "title": "Claim keys and examples for IANA pre-assignment",
      "url": "https://github.com/ietf-rats-wg/eat/pull/90",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This clarifies which labels are preassigned by IANA and which are TBD.\r\n\r\nThis should not be merged until the IANA reassignment process is complete.\r\n\r\nThis also splits the cddl built into two versions, one for the document that has <TBDxx> labels and one for CDDL validation which has real label numbers.",
      "createdAt": "2021-01-05T21:33:00Z",
      "updatedAt": "2021-02-05T01:52:08Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "05a2a0fefbfde35f836aee115d600201a5fd1df1",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "PreAssign",
      "headRefOid": "063760c86ce73e49d48b04f629ff49dcf5ca58fc",
      "closedAt": "2021-02-05T01:52:07Z",
      "mergedAt": "2021-02-05T01:52:07Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "c6729746befa6fd0852b009a0413dbf3abaac8de"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 93,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc5NzI5MDgw",
      "title": "Change profile claim to be URL or OID",
      "url": "https://github.com/ietf-rats-wg/eat/pull/93",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-25T01:51:45Z",
      "updatedAt": "2021-03-02T18:06:09Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "554e6fda210f07af4a5ed70b75fe5b7f2a4156a6",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "profile-oid",
      "headRefOid": "2019f8ef0b0dc6f6e7c1c869d2cfd9b548c7b908",
      "closedAt": "2021-03-02T18:05:57Z",
      "mergedAt": "2021-03-02T18:05:57Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f8f8859e93749868e7d8b9863231f315a2a1f5ac"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4NTg0Nzcx",
          "commit": {
            "abbreviatedOid": "bda26f9"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for taking a stab at this!",
          "createdAt": "2021-02-25T13:53:01Z",
          "updatedAt": "2021-02-25T13:55:48Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "CDDL nits: I think we need to import the definition of oid from https://datatracker.ietf.org/doc/draft-ietf-cbor-tags-oid/, i.e.: `oid = #6.111(bstr)`\r\n\r\nAlso, if we are requiring an URL, maybe better letting the type system help out: `uri = #6.32(tstr)`?",
              "createdAt": "2021-02-25T13:53:01Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nIt may exist anywhere in the OID tree.\r\n```",
              "createdAt": "2021-02-25T13:53:25Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 10,
              "body": "I think this should be moved up to L959",
              "createdAt": "2021-02-25T13:54:44Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5OTI5OTA2",
          "commit": {
            "abbreviatedOid": "56efa9a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-26T20:47:03Z",
          "updatedAt": "2021-02-26T20:47:04Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "a curiosity: what is the rationale for unwrapping?",
              "createdAt": "2021-02-26T20:47:04Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMjEwODc4",
          "commit": {
            "abbreviatedOid": "56efa9a"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-28T02:27:40Z",
          "updatedAt": "2021-02-28T02:27:40Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "You can tell uri from old by the CBOR type (text vs byte string) so no need for the tag. \r\n\r\nGenerally, it seems the convention in CBOR is to unwrap if possible to not have redundancy (which creates an error condition) and to save bytes. If others think otherwise, fill me in. :-)",
              "createdAt": "2021-02-28T02:27:40Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMjY4NzU5",
          "commit": {
            "abbreviatedOid": "fab621a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-28T14:57:27Z",
          "updatedAt": "2021-02-28T14:57:27Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "makes sense, thanks for the explanation",
              "createdAt": "2021-02-28T14:57:27Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMjY5MDgy",
          "commit": {
            "abbreviatedOid": "56efa9a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-28T15:00:28Z",
          "updatedAt": "2021-02-28T15:20:24Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n```\r\nthese two lines are duplicates of L973-974",
              "createdAt": "2021-02-28T15:00:28Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nA profile is identified by either an absolute URI {{!RFC3896}} or an absolute OID (ASN.1 Type \"OBJECT IDENTIFIER\").\r\n```",
              "createdAt": "2021-02-28T15:07:45Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nTypically, the URI will reference a document describing the profile.\r\n```",
              "createdAt": "2021-02-28T15:08:43Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 37,
              "body": "I don't understand why is it important to state this?",
              "createdAt": "2021-02-28T15:10:48Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nBoth are unwrapped and thus the outer tag is removed.\r\n```",
              "createdAt": "2021-02-28T15:12:36Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 52,
              "body": "```suggestion\r\n* oid -- is encoded using dotted decimal notation as per Section 5 of {{CBOR-OID}} \r\n```",
              "createdAt": "2021-02-28T15:13:17Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 17,
              "body": "```suggestion\r\n  CBOR-OID: I-D.ietf-cbor-tags-oid\r\n```",
              "createdAt": "2021-02-28T15:19:09Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            },
            {
              "originalPosition": 17,
              "body": "so that updates to the ref are tracked automatically",
              "createdAt": "2021-02-28T15:19:39Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMjg0MDQw",
          "commit": {
            "abbreviatedOid": "3943ac7"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-28T17:51:11Z",
          "updatedAt": "2021-02-28T17:51:11Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "This is JSON representation of OIDs so a reference to CBOR representation of OID seems wrong.\r\nI haven't found any standard to reference for text representation of OIDs in JSON so far. ",
              "createdAt": "2021-02-28T17:51:11Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMzA5MjM1",
          "commit": {
            "abbreviatedOid": "2ef23cd"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-28T21:48:23Z",
          "updatedAt": "2021-02-28T21:48:23Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Yeah that doesn't sound entirely right, but it's the only reference I had found.\r\n\r\nI've given my google-foo another spin and found that Section 3.2 of RFC5675 has an ABNF for the dotted-decimal notation.  Or otherwise let's just say \"using the well established dotted-decimal notation\" or similar",
              "createdAt": "2021-02-28T21:48:23Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMzU5OTU1",
          "commit": {
            "abbreviatedOid": "2ef23cd"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-01T03:02:10Z",
          "updatedAt": "2021-03-01T03:02:10Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I'm leaving this as is because, there is no possibility of any tag here (no inner tag). Also, contrary to normal English use of the word tag, in CBOR the tag is the whole thing with the value, not just the tag number.",
              "createdAt": "2021-03-01T03:02:10Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwMzYwMzI4",
          "commit": {
            "abbreviatedOid": "1728e7b"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-01T03:03:26Z",
          "updatedAt": "2021-03-01T03:03:26Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "OK. Pushed a change for this.",
              "createdAt": "2021-03-01T03:03:26Z",
              "updatedAt": "2021-03-02T18:05:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 99,
      "id": "MDExOlB1bGxSZXF1ZXN0NTkwOTgyNzQz",
      "title": "Several Profile Improvements",
      "url": "https://github.com/ietf-rats-wg/eat/pull/99",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address freshness\r\nAddress CBOR preferred serialization\r\nUse CDDL in profile documents\r\n",
      "createdAt": "2021-03-11T16:07:40Z",
      "updatedAt": "2021-05-25T18:35:44Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "41685066d17a580679e7bdb038d1a30042966920",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "profile-improvements",
      "headRefOid": "27feb4225d17f35920114e7313f012ba7a97bcfe",
      "closedAt": "2021-03-26T16:53:30Z",
      "mergedAt": "2021-03-26T16:53:30Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f5823e0e12e6413ccb7a15adda201a9b00e3f23d"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The nonces claim should reference RATS architecture for freshness too.",
          "createdAt": "2021-03-11T20:15:20Z",
          "updatedAt": "2021-03-11T20:15:20Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEwNjIwMDk2",
          "commit": {
            "abbreviatedOid": "e1e6b58"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "lgmt, I've left a couple of minor comments",
          "createdAt": "2021-03-12T09:55:40Z",
          "updatedAt": "2021-03-12T10:10:53Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nIn some cases CDDL may be created that replaces CDDL in this or other document to express some profile requirements.\r\n```",
              "createdAt": "2021-03-12T09:55:40Z",
              "updatedAt": "2021-03-15T18:30:50Z"
            },
            {
              "originalPosition": 29,
              "body": "Are these \"should indicate\" normative?  (IMO, yes)",
              "createdAt": "2021-03-12T09:57:01Z",
              "updatedAt": "2021-03-15T18:30:50Z"
            },
            {
              "originalPosition": 42,
              "body": "Same as previous comment: is this a normative should?",
              "createdAt": "2021-03-12T09:58:35Z",
              "updatedAt": "2021-03-15T18:30:50Z"
            },
            {
              "originalPosition": 43,
              "body": "Maybe we could make it clearer here that one is not bound to the freshness models examined in {{RATS-Architecture}}.  E.g., a protocol embedding EAT could use a time notion based on some kind of event stored in Merkle tree, or anything else really as long as it fits the bill.\r\n",
              "createdAt": "2021-03-12T10:10:03Z",
              "updatedAt": "2021-03-15T18:30:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEyNTE5MjQx",
          "commit": {
            "abbreviatedOid": "6bb0e7d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-15T18:27:54Z",
          "updatedAt": "2021-03-15T18:27:54Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "All the things in the profile are described as \"should\" right now.\r\n\r\nIf we are going to start using \"must\" then we are describing a formal protocol for creating profile documents to the degree that some profiles comply with EAT and some don't. That seems like an overreach and a tall order.\r\n\r\nMy leaning is to leave it as \"should\", but we can have a larger discussion about more formalism here. Maybe do this by filing a separate issue for it.",
              "createdAt": "2021-03-15T18:27:54Z",
              "updatedAt": "2021-03-15T18:30:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEyNjc0ODgy",
          "commit": {
            "abbreviatedOid": "27feb42"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-15T21:54:20Z",
          "updatedAt": "2021-03-15T21:54:20Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "OK!  I raised #100 to discuss this.",
              "createdAt": "2021-03-15T21:54:20Z",
              "updatedAt": "2021-03-15T21:54:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 101,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAxODE4NzMx",
      "title": "Add SUEID, discuss IDevID",
      "url": "https://github.com/ietf-rats-wg/eat/pull/101",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This adds the semi-permanent device ID, on that can change on lifecycle events.\r\n\r\nThis adds an appendix on several aspects of the relationship between IDevID and EAT.\r\n\r\nThis is to address #98 and #45",
      "createdAt": "2021-03-26T18:12:13Z",
      "updatedAt": "2021-06-03T18:14:55Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3cabc15a18c19960f0d04d3bf5c6157fe2ef4417",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "idevid",
      "headRefOid": "147cb1f117fef0f65e4a0a12d3d13ebb136d3d53",
      "closedAt": "2021-06-03T18:14:47Z",
      "mergedAt": "2021-06-03T18:14:47Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7e63b47b5c6cd81e554459febb8b1f5b0c24e2aa"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The IDevID compare/contrast is an appendix. Definitely doesn't belong in the main document.\r\n\r\nI think it is valuable as an appendix give the fairly broad interest and understanding of IDevID. In particular I hope it help TCG and IEEE folks to understand EAT better and why EAT made different choices than they did.\r\n",
          "createdAt": "2021-04-01T18:21:07Z",
          "updatedAt": "2021-04-01T18:21:07Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNjYwMTc2",
          "commit": {
            "abbreviatedOid": "be07a29"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for this.  However, I think it says too much.  The whole side-by-side comparison EAT v DevID is not necessary (certainly not in the main document body, *maybe* in an appendix).  I reckon it's sufficient to note the similarity en-passant (via an informative ref) and just stick to the {S,}UEID description.",
          "createdAt": "2021-03-27T15:51:25Z",
          "updatedAt": "2021-03-27T16:27:16Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "You might want to:\r\n```suggestion\r\nThis section describes several distinct ways in which an IEEE IDevID {{IEEE802-1AR}} relates to EAT, particularly to UEID and SUEID.\r\n```\r\nAnd append the following to the informative refs:\r\n```\r\ninformative:\r\n  IEEE802-1AR:\r\n    target: \"https://standards.ieee.org/standard/802_1AR-2018.html\"\r\n    title: \"IEEE 802.1AR Secure Device Identifier\"\r\n    author:\r\n      org: \"IEEE\"\r\n    date: 2018\r\n```\r\n",
              "createdAt": "2021-03-27T15:51:25Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nFor IDevID the unique identifier is through a X.500 distinguished name, perhaps constructed from the certificate chain, \r\n```\r\n```suggestion\r\nFor IDevID the unique identifier is through and X.500 distinguished name, perhaps constructed from the certificate chain, \r\n```",
              "createdAt": "2021-03-27T15:53:29Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nsomehow derived from the key material.\r\n```\r\n```suggestion\r\nsome how derived from the key material.\r\n```",
              "createdAt": "2021-03-27T15:53:44Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            },
            {
              "originalPosition": 57,
              "body": "I suggest to drop this, it sounds like a value judgement.  Just say \"Compared to DevID, EAT allows an open-ended [...]\"",
              "createdAt": "2021-03-27T16:14:29Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\n{{IEEE802-1AR}} describes much of this permanence as resistant to attacks that seek to change the ID.\r\n```",
              "createdAt": "2021-03-27T16:15:46Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            },
            {
              "originalPosition": 72,
              "body": "plural/singular: device, device, devices",
              "createdAt": "2021-03-27T16:18:08Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            },
            {
              "originalPosition": 74,
              "body": "I don't understand these two claims.  Also IDevID is not a document.",
              "createdAt": "2021-03-27T16:22:30Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NTMxODQ4",
          "commit": {
            "abbreviatedOid": "1b6acb0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T18:16:30Z",
          "updatedAt": "2021-04-01T18:16:30Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Done",
              "createdAt": "2021-04-01T18:16:30Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NTMyMTkz",
          "commit": {
            "abbreviatedOid": "1b6acb0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T18:16:57Z",
          "updatedAt": "2021-04-01T18:16:58Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "Done",
              "createdAt": "2021-04-01T18:16:57Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NTMyMjk1",
          "commit": {
            "abbreviatedOid": "1b6acb0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T18:17:05Z",
          "updatedAt": "2021-04-01T18:17:05Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Done",
              "createdAt": "2021-04-01T18:17:05Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NTMyNDI5",
          "commit": {
            "abbreviatedOid": "1b6acb0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T18:17:15Z",
          "updatedAt": "2021-04-01T18:17:15Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "Done",
              "createdAt": "2021-04-01T18:17:15Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NTMyNTI1",
          "commit": {
            "abbreviatedOid": "1b6acb0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T18:17:23Z",
          "updatedAt": "2021-04-01T18:17:23Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Done",
              "createdAt": "2021-04-01T18:17:23Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NTMzMDE1",
          "commit": {
            "abbreviatedOid": "1b6acb0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T18:18:03Z",
          "updatedAt": "2021-04-01T18:18:03Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Have done a lot of rewording do better here.",
              "createdAt": "2021-04-01T18:18:03Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NTMzNDgx",
          "commit": {
            "abbreviatedOid": "1b6acb0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T18:18:40Z",
          "updatedAt": "2021-04-01T18:18:41Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Hopefully rewording in first part of this appending addresses this.",
              "createdAt": "2021-04-01T18:18:41Z",
              "updatedAt": "2021-04-01T18:22:29Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2NjQ4NDA3",
          "commit": {
            "abbreviatedOid": "be07a29"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-01T21:05:53Z",
          "updatedAt": "2021-04-01T21:05:53Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "FDO IOT standard has reached a final state:  https://fidoalliance.org/specs/FDO/fido-device-onboard-v1.0-ps-20210323/fido-device-onboard-v1.0-ps-20210323.html#DevAttnProt.  Removing the 'should' requirement will mean it is not compliant with EAT.  Would recommend leaving text as is.",
              "createdAt": "2021-04-01T21:05:53Z",
              "updatedAt": "2021-04-01T21:05:53Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMwNTM1Mjg0",
          "commit": {
            "abbreviatedOid": "fa6f2bf"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-07T20:27:31Z",
          "updatedAt": "2021-04-07T20:27:31Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "A couple points here Giri,\r\n\r\nEAT's definition of the UEID as permanent has stood for a long time and we shouldn't really change that underneath of other implementations. FIDO IoT is not the only user of EAT.\r\n\r\nThe solution of two identifiers, one permanent and one that changes on lifecycle events seems like a good one that can serve lots of use cases. It is validated by IDevID/LDevID doing the same. Removing the should would destroy this solution.\r\n\r\nFIDO standards change all the time, so this could be changed. FIDO also knew the situation before finalizing. Is there a substantial installed base of concern here for which there is no workaround?\r\n\r\nIs there anything wrong with SUEID in this PR that would make it unsuitable for FIDO IoT? Haven't heard any comment on that yet.\r\n\r\n",
              "createdAt": "2021-04-07T20:27:31Z",
              "updatedAt": "2021-04-07T20:27:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMwODUxMTc3",
          "commit": {
            "abbreviatedOid": "fa6f2bf"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-07T23:58:00Z",
          "updatedAt": "2021-04-07T23:58:00Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "No issue with SUEID.  Will take up the proposal with FIDO to get feedback.  \r\n\r\nThe other relevant text from Sec. 8.1:  \r\n\r\n\"The device authenticates the relying party and generates a derived UEID just for that particular relying party. \"\r\n\r\nThis above is consistent with current FIDO usage, as the UEID is transitioned from manufacturer-assigned to the new relying party (in this case the Device Owner).  Or is SUEID meant to supplant the above?",
              "createdAt": "2021-04-07T23:58:00Z",
              "updatedAt": "2021-04-07T23:58:00Z"
            }
          ]
        }
      ]
    },
    {
      "number": 102,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA0MDM3NDAy",
      "title": "Add manifests and swevidence claims to carry CoSWID and other",
      "url": "https://github.com/ietf-rats-wg/eat/pull/102",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-03-30T16:23:50Z",
      "updatedAt": "2021-05-28T18:27:55Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "0b66d8a17da3061cd7fe7612c090bd4f54e9a7e2",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "CoSWID",
      "headRefOid": "efa80a2eb5b370fe8a7b8f8fd46a3476b1130517",
      "closedAt": "2021-05-28T18:27:51Z",
      "mergedAt": "2021-05-28T18:27:51Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7577c44003b36894ba9fc8be70a53a41771a5cce"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MDI2OTUy",
          "commit": {
            "abbreviatedOid": "531f968"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-31T08:30:52Z",
          "updatedAt": "2021-03-31T08:38:02Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "What's an installation process?",
              "createdAt": "2021-03-31T08:30:52Z",
              "updatedAt": "2021-03-31T08:38:02Z"
            },
            {
              "originalPosition": 24,
              "body": "Why is this a lower case should and not an upper case MUST?",
              "createdAt": "2021-03-31T08:33:41Z",
              "updatedAt": "2021-03-31T08:38:02Z"
            },
            {
              "originalPosition": 11,
              "body": "Independent from what?",
              "createdAt": "2021-03-31T08:34:52Z",
              "updatedAt": "2021-03-31T08:38:02Z"
            },
            {
              "originalPosition": 17,
              "body": "How do you deal with cases where there is no tag registered?",
              "createdAt": "2021-03-31T08:35:48Z",
              "updatedAt": "2021-03-31T08:38:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY0OTQyNTg2",
          "commit": {
            "abbreviatedOid": "9e4c652"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-20T22:06:01Z",
          "updatedAt": "2021-05-20T22:06:01Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "See update",
              "createdAt": "2021-05-20T22:06:01Z",
              "updatedAt": "2021-05-20T22:06:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY0OTQyNjU0",
          "commit": {
            "abbreviatedOid": "9e4c652"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-20T22:06:08Z",
          "updatedAt": "2021-05-20T22:06:08Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Fixed",
              "createdAt": "2021-05-20T22:06:08Z",
              "updatedAt": "2021-05-20T22:06:09Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY0OTQyNzI5",
          "commit": {
            "abbreviatedOid": "9e4c652"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-20T22:06:16Z",
          "updatedAt": "2021-05-20T22:06:16Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "See update",
              "createdAt": "2021-05-20T22:06:16Z",
              "updatedAt": "2021-05-20T22:06:16Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY0OTQzMzg5",
          "commit": {
            "abbreviatedOid": "9e4c652"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-20T22:07:32Z",
          "updatedAt": "2021-05-20T22:07:33Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Tags are required so one has to be registered. Seems reasonable for something as big and involved as a manifest or SW evidence format.",
              "createdAt": "2021-05-20T22:07:33Z",
              "updatedAt": "2021-05-20T22:07:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY1OTQ0ODk0",
          "commit": {
            "abbreviatedOid": "a2968a3"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-21T21:40:59Z",
          "updatedAt": "2021-05-21T21:57:07Z",
          "comments": [
            {
              "originalPosition": 3,
              "body": "```suggestion\r\nmanifests-claim = (\r\n```",
              "createdAt": "2021-05-21T21:40:59Z",
              "updatedAt": "2021-05-21T21:57:07Z"
            },
            {
              "originalPosition": 3,
              "body": "```suggestion\r\nswevidence-claim = (\r\n```",
              "createdAt": "2021-05-21T21:43:21Z",
              "updatedAt": "2021-05-21T21:57:07Z"
            },
            {
              "originalPosition": 5,
              "body": "I guess we should also add\r\n```\r\nmanifests = 42\r\nswevidence = 43\r\n```\r\nto eat-tbd-labels-validate.cddl",
              "createdAt": "2021-05-21T21:44:56Z",
              "updatedAt": "2021-05-21T21:57:07Z"
            },
            {
              "originalPosition": 1,
              "body": "If we have an idea of what is acceptable here we should try and constrain the type.  (The type should be extensible)\r\nSomething like:\r\n```\r\nswevidence-type = [+ $swevidence-format]\r\n\r\n$swevidence-format /= bytes .cbor concise-swid-tag\r\n```\r\nNot sure this would work as-is, but just to give the idea.",
              "createdAt": "2021-05-21T21:56:47Z",
              "updatedAt": "2021-05-21T21:57:07Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY3NDE3NDkx",
          "commit": {
            "abbreviatedOid": "5f38e4b"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-25T06:01:20Z",
          "updatedAt": "2021-05-25T06:01:20Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Fixed\r\n",
              "createdAt": "2021-05-25T06:01:20Z",
              "updatedAt": "2021-05-25T06:01:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY3NDMzNTk3",
          "commit": {
            "abbreviatedOid": "5f38e4b"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-25T06:28:44Z",
          "updatedAt": "2021-05-25T06:28:44Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Hi Thomas,\r\n\r\nI mostly like this. I think it works for the document if you add some explanatory text.\r\n\r\nBut it doesn't work for the CDDL validation part of make for the document because concise-swid-tag is not defined. I have the same problem with the re use of CoSWID's $version-scheme for the HW version claim. Seems there ought to be a convention in CDDL standards docs for handling this sort of thing.\r\n\r\nThe best I can come up with is more split between the CDDL in the document and the CDDL for validation when running make. \r\n\r\nAny better ideas?\r\n",
              "createdAt": "2021-05-25T06:28:44Z",
              "updatedAt": "2021-05-25T06:28:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY3NDc1MTU4",
          "commit": {
            "abbreviatedOid": "5f38e4b"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-25T07:22:47Z",
          "updatedAt": "2021-05-25T07:22:47Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "> But it doesn't work for the CDDL validation part of make for the document because concise-swid-tag is not defined. I have the same problem with the re use of CoSWID's $version-scheme for the HW version claim. Seems there ought to be a convention in CDDL standards docs for handling this sort of thing.\r\n\r\nIn CoRIM we [pull CoSWID from the authoritative repo](https://github.com/ietf-rats/ietf-corim-cddl/blob/9d165166f3ae29f2da9e0c261a8289ea58d1d04a/Makefile#L44-L50) and merge it into the final CDDL. This is probably the least worst one can do within the set of constraints of CDDL processing.  I would give this a try first and see if it works.  You want me to test this hypothesis?\r\n\r\n",
              "createdAt": "2021-05-25T07:22:47Z",
              "updatedAt": "2021-05-25T07:22:47Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4MTc0Nzkw",
          "commit": {
            "abbreviatedOid": "e0d7cce"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-05-25T17:56:40Z",
          "updatedAt": "2021-05-25T17:56:41Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Pulling CoSWID (or any other) CDDL into the actual published referencing document seems wrong to me. I can see that is being done with CoRIM. It might eventually snowball into the last CDDL standard written having the all the CDDL that came before it copied into it. :-0\r\n\r\nHowever, if the CDDL builds in two forms, one for the document and one for validation, then this works and seems like a good idea. I fixed up EAT so it does that now for CoSWID and SUIT manifests and it is working so far.\r\n\r\nI've run into a bit of a name space issue where both EAT and CoSWID define \"location\". That will eventually be a problem in the CDDL world if we keep doing this.\r\n\r\nSo thanks for the idea!",
              "createdAt": "2021-05-25T17:56:40Z",
              "updatedAt": "2021-05-25T17:56:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4MjI2ODcx",
          "commit": {
            "abbreviatedOid": "e0d7cce"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "super!",
          "createdAt": "2021-05-25T18:41:25Z",
          "updatedAt": "2021-05-25T18:44:17Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "you probably want to add this and the suit manifest to the `CLEANFILES`",
              "createdAt": "2021-05-25T18:41:25Z",
              "updatedAt": "2021-05-25T18:44:17Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nconcise-swid-tag.cddl: ; $(curl) -O $(COSWID_REPO_URL)/$@\r\n\r\nCLEANFILES += concise-swid-tag.cddl\r\n```",
              "createdAt": "2021-05-25T18:41:52Z",
              "updatedAt": "2021-05-25T18:44:17Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\ndraft-ietf-suit-manifest.cddl: ; $(curl) -O $(SUIT_REPO_URL)/$@\r\n\r\nCLEANFILES += draft-ietf-suit-manifest.cddl\r\n```",
              "createdAt": "2021-05-25T18:43:23Z",
              "updatedAt": "2021-05-25T18:44:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 103,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA0MTA2ODc2",
      "title": "Add section on Evidence and Attestation Results",
      "url": "https://github.com/ietf-rats-wg/eat/pull/103",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-03-30T17:11:01Z",
      "updatedAt": "2021-05-20T18:19:47Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f5823e0e12e6413ccb7a15adda201a9b00e3f23d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "results",
      "headRefOid": "f7f98cd92418b31a8f67f1b51c3876b1c9956018",
      "closedAt": "2021-05-20T18:19:43Z",
      "mergedAt": "2021-05-20T18:19:43Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "09c2d3235d923b2d7bb645d2ce2b2c76d6909d21"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 104,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA1MjY0ODQ3",
      "title": "add the draft in XML to the published artefacts",
      "url": "https://github.com/ietf-rats-wg/eat/pull/104",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This change is to enable the extraction of EAT's \"amalgamated\" CDDL using XPath, with per-branch granularity.\r\n\r\n[EAT-test-vectors](https://github.com/laurencelundblade/EAT-test-vectors) will be a primary user of this feature.",
      "createdAt": "2021-03-31T08:08:40Z",
      "updatedAt": "2021-03-31T17:45:30Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f5823e0e12e6413ccb7a15adda201a9b00e3f23d",
      "headRepository": null,
      "headRefName": "patch-1",
      "headRefOid": "1c23ef1399ebd28f32a3280824551a26df84787d",
      "closedAt": "2021-03-31T17:45:29Z",
      "mergedAt": "2021-03-31T17:45:29Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f068f6a22249c16f63bb8d463668883c44a52d61"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 105,
      "id": "MDExOlB1bGxSZXF1ZXN0NjEyOTUzOTQ2",
      "title": "First attempt at claims for layered attestation",
      "url": "https://github.com/ietf-rats-wg/eat/pull/105",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "Relates to https://github.com/ietf-rats-wg/architecture/issues/293 and https://github.com/ietf-rats-wg/architecture/pull/294",
      "createdAt": "2021-04-10T19:47:01Z",
      "updatedAt": "2022-07-09T16:39:36Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "37eb1857258c0dcef61154a0e390fd350705398d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "layered",
      "headRefOid": "855d1aabebd8e0e7ea130dcb2bc91cd2feaf090d",
      "closedAt": "2022-07-09T16:39:36Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "No consensus on this. If this gets done it should probably be in a future draft.",
          "createdAt": "2022-07-09T16:39:36Z",
          "updatedAt": "2022-07-09T16:39:36Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQzMzUzMzE1",
          "commit": {
            "abbreviatedOid": "855d1aa"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-23T14:22:52Z",
          "updatedAt": "2021-04-23T14:33:27Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Not the current Attesting Environment that generated that Evidence, tough, but a \"potential future\" one in an upcoming \"secure state transition\" to the next layer. Maybe this could be read as \"an Attesting Environment generates Evidence about itself\", which it does not do?",
              "createdAt": "2021-04-23T14:22:52Z",
              "updatedAt": "2021-04-23T14:33:27Z"
            },
            {
              "originalPosition": 36,
              "body": "This addresses the concern above, but later in the text. Maybe some minor rewording above suffices.",
              "createdAt": "2021-04-23T14:23:59Z",
              "updatedAt": "2021-04-23T14:33:27Z"
            },
            {
              "originalPosition": 38,
              "body": "so... initially there is the root Attesting Environment and state transitions then go to layered Attesting Environments? I kinda like these words. Will bring that up in the arch team.",
              "createdAt": "2021-04-23T14:25:45Z",
              "updatedAt": "2021-04-23T14:33:27Z"
            },
            {
              "originalPosition": 42,
              "body": "That's impossible for me to parse. The current Attesting Environment should include the pub-key of a layered Attesting Environment in the Evidence generated about that layered Attesting Environment? If so, maybe elaborate on the reasoning? What's the use case you have in mind here?",
              "createdAt": "2021-04-23T14:28:51Z",
              "updatedAt": "2021-04-23T14:33:27Z"
            },
            {
              "originalPosition": 55,
              "body": "So these are \"EAT options\", right? In general, a third option is that the Verifiers can obtain Endorsements that are about the Attesting Environment, I think.",
              "createdAt": "2021-04-23T14:30:46Z",
              "updatedAt": "2021-04-23T14:33:27Z"
            },
            {
              "originalPosition": 61,
              "body": "I don't understand what that means. It probably means \"The layered Attesting Environment\" from the first sentence, but still I cannot really make sense of it.",
              "createdAt": "2021-04-23T14:33:05Z",
              "updatedAt": "2021-04-23T14:33:27Z"
            },
            {
              "originalPosition": 62,
              "body": "Same",
              "createdAt": "2021-04-23T14:33:17Z",
              "updatedAt": "2021-04-23T14:33:27Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc4Njg0Njcy",
          "commit": {
            "abbreviatedOid": "855d1aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-08T15:37:13Z",
          "updatedAt": "2021-06-08T15:37:13Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Regarding lines 955 - 957: The target environment contains an attesting environment but could contain other code, setup vectors, files or code that has functionality other than that used by an attesting environment. Structures representing a layer 'target environment' should allow for multiple disparate measurements.",
              "createdAt": "2021-06-08T15:37:13Z",
              "updatedAt": "2021-06-08T15:37:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc4Njg4NzA4",
          "commit": {
            "abbreviatedOid": "855d1aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-08T15:40:15Z",
          "updatedAt": "2021-06-08T15:40:15Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "line 1118 seems wordy. Is it saying \"Trust for layers above depends on the root and possibly other layers beneath. Evidence about a layer is provided by one or more of the layers beneath.\" ",
              "createdAt": "2021-06-08T15:40:15Z",
              "updatedAt": "2021-06-08T15:40:15Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc4Njk0OTcw",
          "commit": {
            "abbreviatedOid": "855d1aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-08T15:45:23Z",
          "updatedAt": "2021-06-08T15:45:23Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "1117 seems to be saying \"An Endorser provides claims about the root since there isn't a layer beneath the root layer that supplies Evidence. An Endorser also provides cryptographic material used by the root to authenticate the device and to sign evidence pertaining to upper / other layers.\"",
              "createdAt": "2021-06-08T15:45:23Z",
              "updatedAt": "2021-06-08T15:45:23Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc4NzAwMDQ1",
          "commit": {
            "abbreviatedOid": "855d1aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-08T15:49:49Z",
          "updatedAt": "2021-06-08T15:49:49Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "1121 seems too strong. The names of the measurements pertaining to the attesting environment (or other measurements in the target) provides intended use semantics. If using submods then submod-name captures the intended semantics.\r\n\r\n1124 seems to be saying layers can be cryptographically linked, therefore it may be appropriate to include a public key in the Evidence related to an attesting environment.",
              "createdAt": "2021-06-08T15:49:49Z",
              "updatedAt": "2021-06-08T15:49:49Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc4NzAzNjk2",
          "commit": {
            "abbreviatedOid": "855d1aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-08T15:52:59Z",
          "updatedAt": "2021-06-08T15:53:00Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "1135 I don't see how it is possible for a lower layer to know or assert that it knows the upper layer is trusted without going through a recursive verification. However, verification is done by a verifier which is a complex function. It would be a mistake to assert that layering requires attesting environments to also be verifiers according to the RATS Arch. The is-trusted claim is actually an attestation result structure. Doesn't belong here IMO.",
              "createdAt": "2021-06-08T15:53:00Z",
              "updatedAt": "2021-06-08T15:53:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc4NzA5MjYz",
          "commit": {
            "abbreviatedOid": "855d1aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-08T15:57:26Z",
          "updatedAt": "2021-06-08T15:57:26Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "There are two ways to structure layers. (a) as nested entities or (b) as linked entities. Nesting has the undesirable side-effect that the signer (aka top layer) has to be in possession of all of the lower layer evidence in order to sign anything. This makes for ever increasing evidence blobs. Linking allows the upper layer to only sign the evidence it directly controls. The lower layer linked its evidence about the upper layer so there is no reason to counter-sign something that has already been signed by a lower layer.  Lets not think of submods as a hammer that forces nesting in ways that don't make sense.",
              "createdAt": "2021-06-08T15:57:26Z",
              "updatedAt": "2021-06-08T15:57:26Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njc4NzEwNDEx",
          "commit": {
            "abbreviatedOid": "855d1aa"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-06-08T15:58:26Z",
          "updatedAt": "2021-06-08T15:58:26Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "1141 this is too strong.",
              "createdAt": "2021-06-08T15:58:26Z",
              "updatedAt": "2021-06-08T15:58:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 106,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUyNzEzNjkx",
      "title": "Add string labels and values for JSON tokens",
      "url": "https://github.com/ietf-rats-wg/eat/pull/106",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This also fixes a few other CDDL issues.\r\n\r\nThis addresses #92",
      "createdAt": "2021-05-25T19:04:36Z",
      "updatedAt": "2021-05-27T17:30:54Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "adbc62f13bd9bf996128d9a955c93c8f85b358fe",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "json-strings",
      "headRefOid": "f9a33c6fd2911643cf3dcef02be4c29cf4352a69",
      "closedAt": "2021-05-27T17:30:51Z",
      "mergedAt": "2021-05-27T17:30:51Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "0b66d8a17da3061cd7fe7612c090bd4f54e9a7e2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 107,
      "id": "MDExOlB1bGxSZXF1ZXN0NjUyODc4MTg5",
      "title": "clarify non-use of URI tag",
      "url": "https://github.com/ietf-rats-wg/eat/pull/107",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address #51",
      "createdAt": "2021-05-25T21:56:06Z",
      "updatedAt": "2021-05-27T17:24:58Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "adbc62f13bd9bf996128d9a955c93c8f85b358fe",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "uri",
      "headRefOid": "baf6de04e227b90c8786159e2ea49eab661dac70",
      "closedAt": "2021-05-27T17:24:54Z",
      "mergedAt": "2021-05-27T17:24:54Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d15ba703316c7c87d62b3697cc6aad6899a9cb36"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 109,
      "id": "MDExOlB1bGxSZXF1ZXN0NjYxMjMwNTY0",
      "title": "Make EAN-13 HW versions a part of the CoSWID version scheme",
      "url": "https://github.com/ietf-rats-wg/eat/pull/109",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-06-03T21:38:15Z",
      "updatedAt": "2021-06-03T21:42:52Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "7e63b47b5c6cd81e554459febb8b1f5b0c24e2aa",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ean13",
      "headRefOid": "5d4ccc6f815d9dde6632ab3ac255b457cafc2a54",
      "closedAt": "2021-06-03T21:42:49Z",
      "mergedAt": "2021-06-03T21:42:49Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "cc627cec845b3a2f93f5c77fb0790555e6f564a3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 112,
      "id": "MDExOlB1bGxSZXF1ZXN0NjczNzM2OTU2",
      "title": "Add a claim to report the results of a SW measurement",
      "url": "https://github.com/ietf-rats-wg/eat/pull/112",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This can be used in Attestation Results to report the output of the Verifier's check against reference values for SW evidence to the Relying Party.\r\n\r\nThis can also be used in Attestation Evidence if the Attester has the ability to measure and verify on the device. For example Samsung TIMA can do this.\r\n\r\nThis is to address #108\r\n",
      "createdAt": "2021-06-18T21:14:38Z",
      "updatedAt": "2021-07-15T05:20:30Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "754a276ee243b2f814acf17010204305fea9d1ad",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "swresults",
      "headRefOid": "9f336faa77f967610c0dd1c94d7573f914d8a756",
      "closedAt": "2021-07-15T05:20:22Z",
      "mergedAt": "2021-07-15T05:20:22Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "16fb677a8b2f03c74e0a8cba42bc3d6f0fe98b2f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 113,
      "id": "MDExOlB1bGxSZXF1ZXN0Njc2NzgxMjY2",
      "title": "rearrange hw version type",
      "url": "https://github.com/ietf-rats-wg/eat/pull/113",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-06-24T04:32:32Z",
      "updatedAt": "2021-07-01T18:15:52Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "be1b2c42c0c6488d410015856807f8edaf8741b6",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hwv-fix",
      "headRefOid": "fa3e5dbc6333f97289bc1a5cb16edc7ad31f1b5d",
      "closedAt": "2021-07-01T18:15:48Z",
      "mergedAt": "2021-07-01T18:15:48Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "754a276ee243b2f814acf17010204305fea9d1ad"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 114,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg2NDE0NTEw",
      "title": "Claim for DLOA -- Digital Letter or Approval",
      "url": "https://github.com/ietf-rats-wg/eat/pull/114",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-09T00:58:17Z",
      "updatedAt": "2021-08-04T06:14:42Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "5081d76c94975e06e1d2fb0c6213d2b4256ddb72",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "dloa",
      "headRefOid": "4081fddab4aba9a4ef4804db636f25cfee2a5460",
      "closedAt": "2021-08-04T06:14:38Z",
      "mergedAt": "2021-08-04T06:14:37Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a2a2b7d26327440b2ef99abd58f27e27e018b203"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 116,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkwNDAyOTMz",
      "title": "Improvements in security level description",
      "url": "https://github.com/ietf-rats-wg/eat/pull/116",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-15T05:19:16Z",
      "updatedAt": "2021-08-02T17:47:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "16fb677a8b2f03c74e0a8cba42bc3d6f0fe98b2f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "sec-level-update",
      "headRefOid": "5392d95e8002e40bfd3b3d09ef3d37c9b9418430",
      "closedAt": "2021-08-02T17:47:19Z",
      "mergedAt": "2021-08-02T17:47:19Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "5081d76c94975e06e1d2fb0c6213d2b4256ddb72"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This addresses #4 ",
          "createdAt": "2021-08-01T00:20:45Z",
          "updatedAt": "2021-08-01T00:20:45Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 121,
      "id": "MDExOlB1bGxSZXF1ZXN0NzAxMTcwMTA4",
      "title": "Shorten and improve section 3 intro",
      "url": "https://github.com/ietf-rats-wg/eat/pull/121",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Rather than discuss claim optionality, just refer to the CWT and JWT documents that are pretty much exactly right on this.\r\n\r\nRemoved a lot of other text that no longer seems necessary.",
      "createdAt": "2021-08-02T06:37:21Z",
      "updatedAt": "2021-08-08T06:46:06Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "16fb677a8b2f03c74e0a8cba42bc3d6f0fe98b2f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "3intro",
      "headRefOid": "b3bca04887f63b183a0003c7a8f826de2022e523",
      "closedAt": "2021-08-08T06:46:06Z",
      "mergedAt": "2021-08-08T06:46:06Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d599df82f0d9e66420b7001e89909a3b0d170546"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 123,
      "id": "MDExOlB1bGxSZXF1ZXN0NzA2ODAyMjc3",
      "title": "Detached submodules",
      "url": "https://github.com/ietf-rats-wg/eat/pull/123",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A submodule may be a digest of a claims set that is convey separately.\r\n\r\nAlso defines a Detached EAT Bundle, a DEB, a top-level structure to convey detached submodules.\r\n",
      "createdAt": "2021-08-09T20:05:26Z",
      "updatedAt": "2021-10-07T19:55:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "98d7bdee481be937863ad3557aadd62b8211ce50",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "detached",
      "headRefOid": "1e7b4e6359e6bd67a55154a7048e464f09a32f5a",
      "closedAt": "2021-10-07T19:55:29Z",
      "mergedAt": "2021-10-07T19:55:29Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "db8b5df1eefd7b5fc39738a132c371ba801ab628"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 124,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE2MzI0ODQ0",
      "title": "Make OEM ID specifically for HW, add PEN option, add RNG option",
      "url": "https://github.com/ietf-rats-wg/eat/pull/124",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Previously OEM ID was just an IEEE OUI.\r\n\r\nNow it is specifically for identifying HW.\r\n\r\nIn addition to IEEE, PEN and a 128-bit random number of a hash of something can be used.\r\n",
      "createdAt": "2021-08-19T23:18:09Z",
      "updatedAt": "2021-10-08T02:27:51Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "db8b5df1eefd7b5fc39738a132c371ba801ab628",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "improve-oemid",
      "headRefOid": "464ca8bd4c9b0547fab9aa1ac6d3225041e5834b",
      "closedAt": "2021-10-08T02:27:46Z",
      "mergedAt": "2021-10-08T02:27:46Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "224e1812ca7c9a1cbf457d10754bf42d9970d782"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Would not want URIs. If you had some set of URIs you wanted to use, they should be hashed and go in oemid-random.\r\n\r\nI also don't really want to encourage any more forms for oemid for the sake of simplicity and to pin vendors into doing one of the approved schemes which we know is thought out and works correctly to give global uniqueness.\r\n\r\nThis is definitely not about allowing every vendor, standards org and specific industry to plug in their existing company naming schemes. It's about picking a minimal set that works.\r\n",
          "createdAt": "2021-08-25T01:21:30Z",
          "updatedAt": "2021-08-25T01:21:30Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM3NzM0MDY3",
          "commit": {
            "abbreviatedOid": "4349fe2"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "If you make oemid a type choice (ie $oemid) the parser can more deterministically resolve which form to use.  e.g.:\r\n\r\n```\r\n$oemid /= oemid-pen\r\n$oemid /= oemid-ieee\r\n$oemid /= oemid-random\r\n```\r\n\r\nIf there is a strong desire to allow URIs as vendor IDs that could be supported in the future as\r\n`$oemid /= uri `\r\nor\r\n`$oemid /= tstr`\r\n",
          "createdAt": "2021-08-24T22:07:41Z",
          "updatedAt": "2021-08-24T22:08:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 125,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE3MjAwNzc0",
      "title": "Add Device ID URNs for UEID and SUEID",
      "url": "https://github.com/ietf-rats-wg/eat/pull/125",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address #122 \r\n\r\nAdds to Device Identifier URN defined in RFC 9039.",
      "createdAt": "2021-08-21T19:49:59Z",
      "updatedAt": "2021-08-23T18:20:03Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d599df82f0d9e66420b7001e89909a3b0d170546",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ueid-urn",
      "headRefOid": "dce4ac32a15177d567caed6db50fdf08bab4f0fb",
      "closedAt": "2021-08-23T18:19:56Z",
      "mergedAt": "2021-08-23T18:19:56Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a06c07b601154e75f8a432e3acbc2913a8faf535"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 126,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE3MjAyMDEw",
      "title": "CDDL for each claim no longer in a separate sub section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/126",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-08-21T19:59:53Z",
      "updatedAt": "2021-08-21T20:00:28Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d599df82f0d9e66420b7001e89909a3b0d170546",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "nocddlheading",
      "headRefOid": "9139cb5d42f5514008ce5b7bc310022a3d69bee5",
      "closedAt": "2021-08-21T20:00:23Z",
      "mergedAt": "2021-08-21T20:00:23Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a72204a312f4d5c968d67009a3d86a612e2d852b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 127,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE3MjA0Nzg4",
      "title": "fFx headings in Changes From Previous section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/127",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-08-21T20:24:48Z",
      "updatedAt": "2021-08-21T20:25:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a72204a312f4d5c968d67009a3d86a612e2d852b",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "fixheadings",
      "headRefOid": "054b181fb4676ac83f622c09a9a8e17b7ee08ec2",
      "closedAt": "2021-08-21T20:25:11Z",
      "mergedAt": "2021-08-21T20:25:11Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3f3b16c2b0710ad3a6f2e9f40dbd84c9c75a85f9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 128,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE4MTgxNjM3",
      "title": "Update references to IETF drafts",
      "url": "https://github.com/ietf-rats-wg/eat/pull/128",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Use the short means of referencing a draft independent of it version.\r\n\r\nMoved a few drafts to Informative since the are only mentioned in the profiles section. Also RATS architecture draft is informative since it is not a full standards track document.\r\n",
      "createdAt": "2021-08-23T20:51:12Z",
      "updatedAt": "2021-08-24T17:43:46Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a06c07b601154e75f8a432e3acbc2913a8faf535",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "draft-refs",
      "headRefOid": "e338f9b3a11e4323b68e613cffa9b833656a27ac",
      "closedAt": "2021-08-24T17:43:43Z",
      "mergedAt": "2021-08-24T17:43:43Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "e83f154b21ff5d9320c68ff0943bd9e47ebad197"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 129,
      "id": "MDExOlB1bGxSZXF1ZXN0NzIyNzU1NDIx",
      "title": "Rework intro and other to use RATS and CWT terminology, procedures and such",
      "url": "https://github.com/ietf-rats-wg/eat/pull/129",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This updates some very old text that was created before there was even a rats architecture document or that it was decided an EAT would be a CWT.\r\n\r\nEAT now heavily relies on RATS architecture and CWT/JWT for terminology, procedures and such.\r\n\r\nThis addresses #119, #27 and #19\r\n",
      "createdAt": "2021-08-30T19:24:27Z",
      "updatedAt": "2021-08-31T17:23:52Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "e83f154b21ff5d9320c68ff0943bd9e47ebad197",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "general-update",
      "headRefOid": "dae57f26ece37b47bbe6f8d8da6f5cb118e12bce",
      "closedAt": "2021-08-31T17:23:46Z",
      "mergedAt": "2021-08-31T17:23:46Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "98d7bdee481be937863ad3557aadd62b8211ce50"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 132,
      "id": "PR_kwDOCEWCXc4s-cc0",
      "title": "More examples",
      "url": "https://github.com/ietf-rats-wg/eat/pull/132",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-09T19:10:48Z",
      "updatedAt": "2021-10-20T20:12:57Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "983f1c407d7a0f8cd5dd1ab3b3f7fae88c0135ad",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "examples",
      "headRefOid": "5954b5b61d7d325f22819ea9c36b8ef15b0f9915",
      "closedAt": "2021-10-20T20:12:50Z",
      "mergedAt": "2021-10-20T20:12:50Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "55aeab70fae46973c9d0b80408f206aa2f41d28b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 133,
      "id": "PR_kwDOCEWCXc4tZuMc",
      "title": "New simple SW name and version claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/133",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A simple alternative to a SW manifest / CoSWID",
      "createdAt": "2021-10-19T19:13:55Z",
      "updatedAt": "2021-10-20T01:13:40Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8a06a42ea07fbc11f42496fd2acd57de8ad72f42",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "swname",
      "headRefOid": "eb51aa796cea7cd9055087ddea4e416d054435f5",
      "closedAt": "2021-10-20T01:13:36Z",
      "mergedAt": "2021-10-20T01:13:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "983f1c407d7a0f8cd5dd1ab3b3f7fae88c0135ad"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 134,
      "id": "PR_kwDOCEWCXc4td8vZ",
      "title": "Many CDDL fixes and rearrangements",
      "url": "https://github.com/ietf-rats-wg/eat/pull/134",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-21T01:25:42Z",
      "updatedAt": "2021-10-21T04:10:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3c8c81b60d1d8016a08597cd5fd7f5cc130d8478",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "cddlfix",
      "headRefOid": "05c1fe731c2e80045fc3e7141d9b0b7643ca5d23",
      "closedAt": "2021-10-21T04:10:23Z",
      "mergedAt": "2021-10-21T04:10:23Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "0980e04d1a58f0472c3240ea6b585888fc356d37"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 137,
      "id": "PR_kwDOCEWCXc4uDtRe",
      "title": "Add the result code claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/137",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-11-03T19:24:12Z",
      "updatedAt": "2021-11-08T20:42:50Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "e5d9e24dcaf51ae45f732b9e261d81925923e1ec",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "resultcode",
      "headRefOid": "826ea003f9804d4aeb1dc0e3c919bcd47765a3bb",
      "closedAt": "2021-11-08T20:42:50Z",
      "mergedAt": "2021-11-08T20:42:50Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "21d08b469ad83166c6d92ecaf19e02c722027c11"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 139,
      "id": "PR_kwDOCEWCXc4uQEun",
      "title": "Add HW Class Claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/139",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-11-08T21:15:12Z",
      "updatedAt": "2021-12-06T18:39:11Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3c0eb487d01676bea7ea16c918bcfe9cedd8af6a",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "class",
      "headRefOid": "0f190ff79a2b74b0cda07160255951270c5b30b6",
      "closedAt": "2021-12-06T18:39:11Z",
      "mergedAt": "2021-12-06T18:39:11Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8a80cef4b419f53ed0f33f95abfabb82295d74ea"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Address #138 ",
          "createdAt": "2021-11-08T21:16:03Z",
          "updatedAt": "2021-11-08T21:16:03Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "This is blocking the next release of the spec.  Can we merge?",
          "createdAt": "2021-11-10T14:54:40Z",
          "updatedAt": "2021-11-10T14:54:40Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I do not see consensus on this, I am afraid. Could we please do an explicit call for consensus on the list real quick? Like \"this is how it works in English test, here are three examples in JSON and CBOR, any objections?\"",
          "createdAt": "2021-11-10T16:08:44Z",
          "updatedAt": "2021-11-10T16:08:44Z"
        },
        {
          "author": "bremoran",
          "authorAssociation": "NONE",
          "body": "Hardware classes MUST NOT be human readable. If they are, they will be abused as human-facing identifiers, then incompatible hardware revisions will be shoehorned into the same \"version\" for the sake of \"preserving image,\" hiding cost reductions, etc., etc.\r\n\r\nHardware classes are for machines to read. Don't make them human readable. Humans don't need to read them. UUIDs are a great solution because you can't read them, so you won't be tempted to hide human-readable information in them. A plain hash is good too.",
          "createdAt": "2021-11-11T11:35:41Z",
          "updatedAt": "2021-11-11T11:35:41Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc4vvzpl",
          "commit": {
            "abbreviatedOid": "d4e19b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-09T09:52:38Z",
          "updatedAt": "2021-11-09T09:52:38Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "is the assumption here that the raw `bytes` is really `bytes .cbor pluggable_hw_class_type` ?",
              "createdAt": "2021-11-09T09:52:38Z",
              "updatedAt": "2021-11-09T09:52:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4vw0TW",
          "commit": {
            "abbreviatedOid": "d4e19b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-09T14:10:16Z",
          "updatedAt": "2021-11-09T14:10:17Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "FYI, the way we deal with this same problem in CoRIM is to create an extensible type with a few reasonable (tagged) ID formats to start with, and an associated registry where new code points (and associated semantics) can be added in the future.",
              "createdAt": "2021-11-09T14:10:16Z",
              "updatedAt": "2021-11-09T14:10:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4vxuPe",
          "commit": {
            "abbreviatedOid": "d4e19b4"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-09T16:57:01Z",
          "updatedAt": "2021-11-09T16:57:02Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "My thinking is that the structure of the bytes is OEM-specific and that we should not try to herd the OEM's into any standard formats. Doesn't seem like any need for this.\r\n\r\nAn OEM could define the structure in CBOR and then use .cbor to write CDDL for it. Nothing we're doing here stops that.\r\n\r\nKind of the intent here is the concatenation of HW OEM ID, HW Class and HW Version really gets you the exact unique type of the HW. You can do that without knowing the structure of the individual claims.\r\n\r\nSo, yes, really a byte string. (I thought about also allowing a text string)",
              "createdAt": "2021-11-09T16:57:02Z",
              "updatedAt": "2021-11-09T16:57:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4vygVb",
          "commit": {
            "abbreviatedOid": "d4e19b4"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-09T19:48:40Z",
          "updatedAt": "2021-11-09T19:48:40Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Noting that this approach makes the claim extremely context sensitive.\r\n\r\nI guess for those EATs that carry an explicit profile claim, the profile could be used to unambiguously cast to the intended format.",
              "createdAt": "2021-11-09T19:48:40Z",
              "updatedAt": "2021-11-10T10:09:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4v2ei8",
          "commit": {
            "abbreviatedOid": "d4e19b4"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-10T16:06:48Z",
          "updatedAt": "2021-11-10T16:06:48Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "I am having a hard time understanding how to use this claim. Maybe we can have a comprehensive example from the TEEP space that demonstrates very precisely how this claim (and the other \"teep required claims\" are supposed to work?",
              "createdAt": "2021-11-10T16:06:48Z",
              "updatedAt": "2021-11-10T16:06:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4v3F5g",
          "commit": {
            "abbreviatedOid": "d4e19b4"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-10T18:17:57Z",
          "updatedAt": "2021-11-10T18:17:57Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "@thomas-fossati  I think this works without any specified structure if the receiver understands it is only to provide uniqueness.  The original specification of this from Henk has no structure either https://datatracker.ietf.org/doc/html/draft-birkholz-rats-suit-claims-02#section-3.1.2 It is a UUID which has some structure but don't think the UUID structure is the same as the structure you are after.\r\n\r\nI'm not opposed to structure if there's a clear reason for it, but it seems overkill right now and I'm not sure what that structure would look like.\r\n",
              "createdAt": "2021-11-10T18:17:57Z",
              "updatedAt": "2021-11-10T18:26:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4v3IXD",
          "commit": {
            "abbreviatedOid": "d4e19b4"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-10T18:24:44Z",
          "updatedAt": "2021-11-10T18:24:44Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "@henkbirkholz This is a replacement for https://datatracker.ietf.org/doc/html/draft-birkholz-rats-suit-claims-02#section-3.1.2 so it should be used in a similar way.\r\n\r\nI probably could add some text saying it can be thought of as a HW model number.",
              "createdAt": "2021-11-10T18:24:44Z",
              "updatedAt": "2021-11-10T18:24:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4v3SlO",
          "commit": {
            "abbreviatedOid": "019465c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-10T18:55:07Z",
          "updatedAt": "2021-11-10T18:55:08Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "> @thomas-fossati I think this works without any specified structure if the receiver understands it is only to provide uniqueness.\r\n\r\nReading the accompanying prose below, I gather the assumption is that this is a completely unregulated space, so I am not sure how uniqueness is guaranteed?\r\n\r\n> The original specification of this from Henk has no structure either https://datatracker.ietf.org/doc/html/draft-birkholz-rats-suit-claims-02#section-3.1.2 It is a UUID which has some structure but don't think the UUID structure is the same as the structure you are after.\r\n\r\nNot a lot of extensibility there, but at least it's a standardised way to mint *unique* IDs. \r\n\r\n> I'm not opposed to structure if there's a clear reason for it, but it seems overkill right now and I'm not sure what that structure would look like.\r\n\r\nOne way to attack this would be what I wrote [upthread](https://github.com/ietf-rats-wg/eat/pull/139/files#r745651422).\r\n",
              "createdAt": "2021-11-10T18:55:07Z",
              "updatedAt": "2021-11-10T19:00:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4v3nm_",
          "commit": {
            "abbreviatedOid": "019465c"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-10T20:25:19Z",
          "updatedAt": "2021-11-10T20:25:19Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "My interpolation of the TEEP/SUIT requirements  is that it up to the OEM to create what ever uniqueness it thinks is necessary under their HW OEM ID. Some might want a lot, some might not want any.\r\n\r\nFrom the long threads with Brendon and TEEP/SUIT in the past, it seems that this is really about the OEM choosing what uniqueness they want for their product lines, their SW loads and such.\r\n\r\nWhile UUIDs give some uniqueness techniques, they don't inform the SUIT/TEEP use case because UUIDs are not about product lines and SW load compatibility.\r\n\r\nDo you have any examples of what formats you'd define for use with a socket/plug? That would really help me understand.\r\n\r\nI'm trying to interpolate the use case and come up with a design to move EAT forward. I am also OK deleting this claim or making it TEEP/SUIT specific. I am kind of a middle-man here.\r\n",
              "createdAt": "2021-11-10T20:25:19Z",
              "updatedAt": "2021-11-10T20:25:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4v377M",
          "commit": {
            "abbreviatedOid": "019465c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-10T22:03:56Z",
          "updatedAt": "2021-11-10T22:03:57Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "> My interpolation of the TEEP/SUIT requirements is that it up to the OEM to create what ever uniqueness it thinks is necessary under their HW OEM ID. Some might want a lot, some might not want any.\r\n\r\nLifting this up into EAT automatically gives it a much wider applicability, so we need to carefully look into the implications.  In its current form I don't think this can work unless we [couple it to the profile claim](https://github.com/ietf-rats-wg/eat/pull/139/files#r745959664).  But if that is the case, I don't see a strong reason for giving it global semantics.\r\n\r\n> From the long threads with Brendon and TEEP/SUIT in the past, it seems that this is really about the OEM choosing what uniqueness they want for their product lines, their SW loads and such.\r\n\r\nThanks a lot for the additional context.\r\n\r\n> While UUIDs give some uniqueness techniques, they don't inform the SUIT/TEEP use case because UUIDs are not about product lines and SW load compatibility.\r\n> \r\n> Do you have any examples of what formats you'd define for use with a socket/plug? That would really help me understand.\r\n\r\nI'd start with a set of standardised identifiers that either have strong collision-resistant properties, or are natively namespaced.   So, the first three that come to mind are OIDs, URIs, UUIDs.  And, most importantly, I'd make it possible to extend the type.  Concretely:\r\n```\r\nhardware-class-label => $hardware-class-type\r\n\r\n$hardware-class-type /= tagged-oid\r\n$hardware-class-type /= tagged-uuid\r\n$hardware-class-type /= tagged-url\r\n\r\n; extensions will need to allocate their own CBOR tag, e.g., in another document:\r\n$hardware-class-type /= tagged-vendor-x-hw-class-type\r\n```\r\n \r\n> I'm trying to interpolate the use case and come up with a design to move EAT forward. I am also OK deleting this claim or making it TEEP/SUIT specific. I am kind of a middle-man here.\r\n\r\nAppreciate this fully; apologies for taking on the role of the torturer. :-)\r\n",
              "createdAt": "2021-11-10T22:03:56Z",
              "updatedAt": "2021-11-10T22:03:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4v59Rz",
          "commit": {
            "abbreviatedOid": "d4e19b4"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-11-11T12:05:32Z",
          "updatedAt": "2021-11-11T12:05:32Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "It is both reasonable for EAT to define a base set of types and to allow these to be extended by profiles, accepting that profile-defined types inevitably introduce some context sensitivity.\r\n\r\nHowever I don't think we need to boil the ocean at this time - it would be a massive undertaking to determine a universal (or even \"fairly widely applicable\") HW class type, and I don't think we ned to do this in EAT.\r\n\r\nIf I look at the GlobalPlatform TEE identifiers, for example (a reasonable class of TEE to wish to attest even if not at all TEEP compliant), I see no reasonable way to do something that would be interoperable outside of a GlobalPlatform profile (where interoperability would be assured).\r\n\r\nLooking at Thomas' approach above, only problem I have is what a verifier should do if it sees a `$hardware-class-type` it does not understand. For this reason I think I prefer something like:\r\n\r\n```\r\nhardware-class-label => $hardware-class-type\r\n\r\n$hardware-class-type /= tagged-oid\r\n$hardware-class-type /= tagged-uuid\r\n$hardware-class-type /= tagged-url\r\n$hardware-class-type /= bytes .cbor pluggable-x-hw-class-type\r\n```\r\n\r\nwhich has some similarity to Thomas' first comment. It would be straightforward for e.g. GlobalPlatform to define its own HW class type.\r\n\r\nI'm not sure that it is absolutely necessary to tie use of pluggable HW class type to the profile claim with a SHALL, but it seems reasonable to me that pluggable class type SHOULD be used in conjunction with profile claim and that the combination profile claim + CBOR encoded pluggable class type MUST uniquely distinguish different HW. ",
              "createdAt": "2021-11-11T12:05:32Z",
              "updatedAt": "2021-11-11T12:05:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc4xDm4o",
          "commit": {
            "abbreviatedOid": "434daf8"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "This approach makes sense to me. EAT Profiles can always make the format of the byte strong explicit if they wish to do so.",
          "createdAt": "2021-12-03T19:51:06Z",
          "updatedAt": "2021-12-03T19:51:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 141,
      "id": "PR_kwDOCEWCXc4u_cZA",
      "title": "Reduce HW Version to one claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/141",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Rather than having separate claims for HW Version for chip, board and device, there is only one. \r\n\r\nAn example is given using sumods to achieve what was possible before with the three claims, including giving OEM IDs and OEM classes.",
      "createdAt": "2021-11-25T00:18:51Z",
      "updatedAt": "2021-12-06T18:44:22Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8a80cef4b419f53ed0f33f95abfabb82295d74ea",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "3level",
      "headRefOid": "7b8b40279d50c41fee497211de512524f503f270",
      "closedAt": "2021-12-06T18:44:11Z",
      "mergedAt": "2021-12-06T18:44:11Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8df4193c338270e9ac44778f1b9b90a444aa5a7f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc4xDmY5",
          "commit": {
            "abbreviatedOid": "ab18c08"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Verified - all looks as we discussed today, and sufficient to meths e requirement. Much preferred over the previous chip/board/device labels.\r\n\r\nExample for board + device submods is helpful",
          "createdAt": "2021-12-03T19:48:30Z",
          "updatedAt": "2021-12-03T19:48:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 142,
      "id": "PR_kwDOCEWCXc4vX00V",
      "title": "Back out result code",
      "url": "https://github.com/ietf-rats-wg/eat/pull/142",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "(Will put this back in a separate PR so it can be discussed)",
      "createdAt": "2021-12-03T17:22:56Z",
      "updatedAt": "2021-12-03T17:51:33Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "84579cc484d33c4ae16f941141df090012469f52",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "no-ar",
      "headRefOid": "8954798f6523e0af27eb93e880942009b6e2236a",
      "closedAt": "2021-12-03T17:51:26Z",
      "mergedAt": "2021-12-03T17:51:26Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3c0eb487d01676bea7ea16c918bcfe9cedd8af6a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 143,
      "id": "PR_kwDOCEWCXc4vX9Tz",
      "title": "Add general result code, useful for attestation results",
      "url": "https://github.com/ietf-rats-wg/eat/pull/143",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-12-03T18:20:39Z",
      "updatedAt": "2022-08-11T17:56:58Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "37eb1857258c0dcef61154a0e390fd350705398d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "resultcode2",
      "headRefOid": "2b3ceb0d9204e488d6bd0277905f4b89fe352a31",
      "closedAt": "2022-08-11T17:56:58Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Have decided no to add this.",
          "createdAt": "2022-08-11T17:56:58Z",
          "updatedAt": "2022-08-11T17:56:58Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 145,
      "id": "PR_kwDOCEWCXc4vtKt0",
      "title": "Remove comments from CDDL",
      "url": "https://github.com/ietf-rats-wg/eat/pull/145",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Also, squeeze out some blank space",
      "createdAt": "2021-12-11T04:24:00Z",
      "updatedAt": "2021-12-15T22:34:32Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "99dc74bb995991437b23cd2db41d40f6393e2038",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "no-cddl-comments",
      "headRefOid": "352e729e8f57d5356a2675a0130a662756afe968",
      "closedAt": "2021-12-15T22:34:27Z",
      "mergedAt": "2021-12-15T22:34:27Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "63627fbdd358610f202e2d43d23c45ee0783dfec"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 146,
      "id": "PR_kwDOCEWCXc4wDyaN",
      "title": "Rename class claim to model claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/146",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Seems the TEEP folks really did mean class, not model.\r\n\r\nThe class claim is coming in a separate PR.\r\n",
      "createdAt": "2021-12-20T05:55:33Z",
      "updatedAt": "2021-12-22T20:38:59Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8d53b2d298f5e13128779a5bf9c42f62bb27b8a5",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "model",
      "headRefOid": "704933cb79001c7b633c34486e2cdec5b66db1a0",
      "closedAt": "2021-12-22T20:38:55Z",
      "mergedAt": "2021-12-22T20:38:55Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9c5d1b8e371d9d05a935f260164a365fea99bc0b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 147,
      "id": "PR_kwDOCEWCXc4wM-0v",
      "title": "Add HW Class claim (really this time)",
      "url": "https://github.com/ietf-rats-wg/eat/pull/147",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "wontfix"
      ],
      "body": "",
      "createdAt": "2021-12-22T20:55:16Z",
      "updatedAt": "2022-07-09T16:37:46Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "37eb1857258c0dcef61154a0e390fd350705398d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hwclass",
      "headRefOid": "e394ba6af48dd68edc0619d90bfcf810f1bda277",
      "closedAt": "2022-07-09T16:37:46Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This is to really address #138",
          "createdAt": "2021-12-22T21:10:21Z",
          "updatedAt": "2021-12-22T21:10:21Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Here's some design rationale...\r\n\r\nFrom talking to Dave, this is really about HW IP like that from Arm, Synopis and the like. These are companies that do HW designs, but don't manufacture them. With contract foundries like TSMC and these HW IP designers, there's lots more people making chips with a lot more common HW blocks, so I can see the use in such a generic claim.\r\n\r\nSince I worked on HW for a while, I can say \"IP\" is the term used in the HW industry. Any interest in calling this the \"HW IP Claim\"? It would be crystal clear to me, where as \"Class\" was extremely confusing to me.\r\nhttps://en.wikipedia.org/wiki/Semiconductor_intellectual_property_core\r\n\r\nThe identifier really does have to be globally unique. It can't be anchored with the OEM, because the key point here is that multiple OEMs are using the same design. It can't be anchored in something like a MAC address or IEEE OUI.\r\n\r\nThe two extant global identifier schemes not associated with an OEM are URI's and OIDs, so I've allowed them.\r\n\r\nGlobal uniqueness can also be achieved probabilistically with a large random number, so there's a 16-byte string too. There's probably not very many of these designs, only thousands, so 16 bytes is enough. This also fulfills the non-human-readable characteristic that is desired. It can be a UUID too.\r\n\r\nFor this to work, someone has create an ID for each HW design and make sure the OEMs manufacturing with the design use that ID. Ideally, each HW designer would tell the OEM the EAT HW Class for the HW block you are putting in your chip is xxx.\r\n\r\nI thought about an IANA registry for HW IP identifiers, but that seems a bit of an overreach. On the other hand, it would be clear what they all are and they could be integers like PENs. They would be very compact.\r\n\r\n\r\nThis is also completely different from a HW Model number. Before my conversation with Dave, I though this was a HW Model number so that's what I defined.\r\n\r\nNow I think we need both a HW Model number and a HW Class/IP identifier. I've renamed the previous text to be the HW Model number and created this new PR that is the HW Class ID.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
          "createdAt": "2021-12-23T21:45:33Z",
          "updatedAt": "2021-12-23T21:48:31Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "A HW model number was added. There was no consensus on HW Class/IP.",
          "createdAt": "2022-07-09T16:37:46Z",
          "updatedAt": "2022-07-09T16:37:46Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 148,
      "id": "PR_kwDOCEWCXc4wSZOs",
      "title": "Major change to prefer the term \"entity\" to \"device\"",
      "url": "https://github.com/ietf-rats-wg/eat/pull/148",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address #16 and other comments.",
      "createdAt": "2021-12-27T02:28:31Z",
      "updatedAt": "2022-01-05T21:19:16Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c5d1b8e371d9d05a935f260164a365fea99bc0b",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "entity",
      "headRefOid": "6770a20c3fc44100f19c170a64f8f7e126496588",
      "closedAt": "2022-01-05T21:19:12Z",
      "mergedAt": "2022-01-05T21:19:12Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "bc8d3c79cfe696e40a26108396697500bb6c2a57"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc4yFZ-m",
          "commit": {
            "abbreviatedOid": "3f94f6c"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-12-27T10:00:34Z",
          "updatedAt": "2021-12-27T10:03:07Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "As a read I do know what to unpack from \"roughly\" here. It is the main semantic anchor of the document.\r\n\r\n",
              "createdAt": "2021-12-27T10:00:34Z",
              "updatedAt": "2021-12-27T10:03:07Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nAn entity corresponds to a \"system component\" as defined in the Internet Security Glossary {{RFC4949}}.\r\n```",
              "createdAt": "2021-12-27T10:00:54Z",
              "updatedAt": "2021-12-27T10:03:07Z"
            },
            {
              "originalPosition": 26,
              "body": "If that feels like it is not enough, please add text that specifically elaborates on the difference.",
              "createdAt": "2021-12-27T10:01:43Z",
              "updatedAt": "2021-12-27T10:03:07Z"
            },
            {
              "originalPosition": 32,
              "body": "Same here",
              "createdAt": "2021-12-27T10:02:32Z",
              "updatedAt": "2021-12-27T10:03:07Z"
            },
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nAn entity corresponds to an Attester as defined in RATS Architecture.\r\n```",
              "createdAt": "2021-12-27T10:02:46Z",
              "updatedAt": "2021-12-27T10:03:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 149,
      "id": "PR_kwDOCEWCXc4wlTJ9",
      "title": "Tighten up section 1 (address comments from Hannes)",
      "url": "https://github.com/ietf-rats-wg/eat/pull/149",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-01-05T22:23:37Z",
      "updatedAt": "2022-01-16T19:46:29Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "bc8d3c79cfe696e40a26108396697500bb6c2a57",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hannes1",
      "headRefOid": "94e81b415d698c1eaf0520cf9ddb2344d28fdc74",
      "closedAt": "2022-01-16T19:46:24Z",
      "mergedAt": "2022-01-16T19:46:24Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "ee023dce97d6a23b60c51d9837d1648de1859f3a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 150,
      "id": "PR_kwDOCEWCXc4w9gvv",
      "title": "Remove boot-seed and uptime claims",
      "url": "https://github.com/ietf-rats-wg/eat/pull/150",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Non-critical claims; make the document a little shorter.",
      "createdAt": "2022-01-13T20:12:14Z",
      "updatedAt": "2022-05-30T16:11:45Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "37eb1857258c0dcef61154a0e390fd350705398d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "rm_claims",
      "headRefOid": "fa3e8a7c0d6eda0d2a97d96d14f7849dea92e17a",
      "closedAt": "2022-05-30T16:11:45Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "We have identified cases for uptime.  Moreover I could not identify a request to remove these 2 claims based on the list feedback, nor the issues list.  Recommend withdrawing this PR.",
          "createdAt": "2022-01-14T17:05:34Z",
          "updatedAt": "2022-01-14T17:05:34Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Hannes and others have said the document is too long and that it doesn't need to define so many claims. These are the two claims I thought were the first on the list to go.\r\n\r\nI'm personally neutral on whether they stay or go. I'll leave this PR open for a while and withdraw it if no one else wants them removed.",
          "createdAt": "2022-01-16T19:44:12Z",
          "updatedAt": "2022-01-16T19:44:12Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@laurencelundblade \r\n\r\nIt seems that an alternative candidate for claim removal are the DLOA claim - which is not clear that anyone will make use of it outside of GP, which seems to already have this information covered independent of EAT.  Security level may also be a candidate for removal given that it does not provide additional security assurances to a relying party - it is self-attested claim.   Also, removal of the current Section 4 (if we are interested in shortening the doc) may be in order as it is not clear that a discussion on unsigned JWT's should be addressed in an attestation document.",
          "createdAt": "2022-01-18T17:54:07Z",
          "updatedAt": "2022-01-18T17:54:07Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Unprotected JWT Claims Sets are now at least covered in Appendix A of the UCCS I-D: https://www.ietf.org/rfcdiff?url2=draft-ietf-rats-uccs-02.txt",
          "createdAt": "2022-01-18T18:37:45Z",
          "updatedAt": "2022-01-18T18:37:45Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Let's keep issues separate and independent.  If you want to remove DLOA's and security level please file separate issues for them.\r\n\r\nWe already have issues filed for the UCCS stuff.\r\n",
          "createdAt": "2022-01-25T19:14:31Z",
          "updatedAt": "2022-01-25T19:14:31Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">Let's keep issues separate and independent. If you want to remove DLOA's and security level please file separate issues for them.\r\n\r\nActually I was responding to your rationale on selecting these 2 claims:\r\n\r\n>These are the two claims I thought were the first on the list to go.\r\n\r\nThis seems to be based on arbitrary criteria, so I suggested two others that could be \"first on the list to go\".",
          "createdAt": "2022-01-25T19:59:49Z",
          "updatedAt": "2022-01-25T19:59:49Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing.  No consensus to remove these claims.",
          "createdAt": "2022-05-30T16:11:45Z",
          "updatedAt": "2022-05-30T16:11:45Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 152,
      "id": "PR_kwDOCEWCXc4xctrl",
      "title": "Second attempt at early allocation of CWT Labels",
      "url": "https://github.com/ietf-rats-wg/eat/pull/152",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This brings in the CWT Labels for EAT claims including updating the CDDL and examples.\r\n\r\nThis also fill out all the IANA section for the TBD items too, that was previously a \"TODO\" item.",
      "createdAt": "2022-01-22T21:25:31Z",
      "updatedAt": "2022-04-05T16:31:30Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "76722d0ef25c0cd7b54e42b59431bfb9b238863f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "early2",
      "headRefOid": "de7f7230764985b30fdf6e728655b4736520f02b",
      "closedAt": "2022-02-17T18:52:08Z",
      "mergedAt": "2022-02-17T18:52:08Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "6e89874a97d43aa55f77a7b7d438ec381409bf90"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This addresses #131",
          "createdAt": "2022-01-22T23:59:59Z",
          "updatedAt": "2022-01-22T23:59:59Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc40gCma",
          "commit": {
            "abbreviatedOid": "0a686e6"
          },
          "author": "selfissued",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-12T03:20:13Z",
          "updatedAt": "2022-02-12T03:20:13Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Please update all the \"CWT Claim Key\" values to use the form:\r\n\r\n- CWT Claim Key: TBD (requested value NNN)\r\n\r\nFor instance, this example should be:\r\n\r\n- CWT Claim Key: TBD (requested value 256)",
              "createdAt": "2022-02-12T03:20:13Z",
              "updatedAt": "2022-02-12T03:20:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc40wo7g",
          "commit": {
            "abbreviatedOid": "de7f723"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "TL;DR\r\n\r\nThe axiom/principle-decision to allow for every Claim defined by EAT to be included in both RATS Conceptual Messages that are Evidence and Attestation Results appears to be quite confusing to me.\r\n\r\nA more detailed overview and selected examples are included in the comments for [draft-ietf-rats-eat.md](https://github.com/ietf-rats-wg/eat/pull/152/files/c8b39f500de29237c1b3916bb8249c27c7ee2fdd..de7f7230764985b30fdf6e728655b4736520f02b#diff-a14dc11088917fcc59b3a1cf2f73b0fd477930cf32583c0264038cd78e68fd9d).\r\n\r\nA comment intended as a more elaborate overview is located in [cddl/eat-tbd-labels.cddl](https://github.com/ietf-rats-wg/eat/pull/152/files/c8b39f500de29237c1b3916bb8249c27c7ee2fdd..de7f7230764985b30fdf6e728655b4736520f02b#diff-af71a31529405c70227897845f05d0a1c611c044f8e358e2eb8700b3f38ca5d8).",
          "createdAt": "2022-02-16T21:29:25Z",
          "updatedAt": "2022-02-16T22:48:01Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Actually, I am simply skipping this one as I am pretty sure that there is no tangible consensus on how the semantics of this Claim should be defined. See the ongoing threads in security-level on the mail list.",
              "createdAt": "2022-02-16T21:29:25Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 13,
              "body": "This comment is placed as the top comment of a batch review and serves as a kind of introduction to the review.\r\n\r\nIn general, I am under the impression that a significant source for debate is the undifferentiated use of the defined sets of Claims in both EATs that reflect Evidence or EATs that reflect Attestation Results.\r\n\r\nAdditionally, I am not clear about how an EAT shall express that its content is either Evidence or Attestation Results. Adding to that, I am not clear about how an EAT shall expresses the identity the responsible Attesting Environment of an Attester or the responsible Verifier that produces the Claims and puts them into the corresponding RATS Conceptual Message (except implicitly due to the key material used for signing, which might not apply if UCCS or UJCS are used and nesting EATs are conveyed).\r\n\r\nTo reiterate, the more I try to compose RATS Conceptual Messages via the current Claim definition provided by this document, the more my doubts concerning the feasibility of the entire approach increase. I am not clear on how to compose useful and unambiguous EAT with the current definitions, tbh. To illustrate my confusion, I selected the very first issue that came to mind for each Claim definition that is covered by this PR.\r\n\r\nAnalogously, each following comment of this review batch is target towards a single Claim in the set for early allocation, specifically. The Claim specific comments are associated with [draft-ietf-rats-eat.md](https://github.com/ietf-rats-wg/eat/pull/152/files/c8b39f500de29237c1b3916bb8249c27c7ee2fdd..de7f7230764985b30fdf6e728655b4736520f02b#diff-a14dc11088917fcc59b3a1cf2f73b0fd477930cf32583c0264038cd78e68fd9d).",
              "createdAt": "2022-02-16T21:39:26Z",
              "updatedAt": "2022-02-16T22:50:28Z"
            },
            {
              "originalPosition": 14,
              "body": "A Claim that only belongs into Evidence, I think. What purpose would it serve, if it is produced by a Verifier and put into Attestation Results?",
              "createdAt": "2022-02-16T21:40:19Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 23,
              "body": "Same. A Claim that only belongs into Evidence, I think. What purpose would it serve, if it is produced by a Verifier and put into Attestation Results? Do I want to know a boodseed of a Verifier? Wouldn't that be Evidence about the Verifier that takes on the role of an Attester in a \"separate RATS layer\"?",
              "createdAt": "2022-02-16T21:40:37Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 32,
              "body": "I am not sure what the intend (sorry for pun) of this Claim actually is. \r\n\r\nOne example:\r\n\r\n\"security assessment of the attesting entity\". Security assessment come from the Verifier, so it seems to belong into Attestation Results, but it says attesting entity, so it belongs into Evidence? These conditions are mutually exclusive and belong into separate Conceptual Messages, right?\r\n\r\nAnother example:\r\n\r\n\"to provide an attestation\". I do not understand what that means. Is that Evidence? Or is that an Attestation Result? Or not even part of a artifact (Conceptual Message), but an activity?\r\n\r\nI hope these two examples (and there are more) illustrate my confusion.",
              "createdAt": "2022-02-16T21:47:14Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 41,
              "body": "The definition of this Claim states: \"This claim is typically issued by a Verifier, not an Attester.\"\r\n\r\nSo what does it mean, if it is included in Evidence (which is clearly allowed)?",
              "createdAt": "2022-02-16T21:49:01Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 50,
              "body": "The definition of this Claim implies that the EAT it is included in is about a software component that could alternatively be expressed as a CoSWID. This again brings up the question of the system boundaries that one EAT encompasses. I assume the definition implies \"if you find this Claim (or the corresponding CoSWID Claim) in this EAT, the whole EAT is about a single software component\". Is that correct? What if there are other signed EATs in this EAT that do not include any of the two claimes? Are they also about that software component (the same goes for UCCS and UJCS, of course)?",
              "createdAt": "2022-02-16T21:54:13Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 59,
              "body": "same as for swname",
              "createdAt": "2022-02-16T21:54:58Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 68,
              "body": "The CDDL defintion for this Claim includes \"manifests-type = [+ $$manifest-formats]\", which means that you can express multiple CoSWIDs or SUIT Manifests as content of an EAT. As CoSWIDs are either \"Evidence\" (which literally translates to Claims produced by an Attester) or \"Payload\" (\"which means they are Endorsements that can be co-located with endorsed software components on an Attester), why should they be produced by the Verifier and included in Attestation Results? See below, the output of an appraisal conducted by a Verifier that is \"swresult\".",
              "createdAt": "2022-02-16T22:01:57Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 77,
              "body": "Why should a Verifier be allowed to include this Claim in Attestation Results. The descriptive text clearly implies that this Claim must originate from an Attester. What is the purpose of allowing this for Attestation Results?",
              "createdAt": "2022-02-16T22:04:33Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            },
            {
              "originalPosition": 86,
              "body": "The complement to \"swevidence\". Why should this Claim ever be produced by an Attester? What is the purpose of allowing this for Evidence?",
              "createdAt": "2022-02-16T22:05:16Z",
              "updatedAt": "2022-02-16T22:28:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 154,
      "id": "PR_kwDOCEWCXc4xh8OD",
      "title": "Wording improvements, more use of normative langauge",
      "url": "https://github.com/ietf-rats-wg/eat/pull/154",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These are changes to section 3, except for the submodules section to address comments from Hannes.\r\n\r\nThe biggest group of changes is to use normative language when needed.",
      "createdAt": "2022-01-25T01:28:38Z",
      "updatedAt": "2022-01-26T05:24:00Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "ee023dce97d6a23b60c51d9837d1648de1859f3a",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hannes3",
      "headRefOid": "d7a9e9cca9d34e61f88519e8fa40368bf3e30799",
      "closedAt": "2022-01-26T05:23:56Z",
      "mergedAt": "2022-01-26T05:23:56Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "c71282e01efe9b88cca58bcb82d559ed05bb9c96"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 156,
      "id": "PR_kwDOCEWCXc4xohmq",
      "title": "Introduction of the Odometer Claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/156",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-01-26T18:45:34Z",
      "updatedAt": "2022-02-17T18:53:30Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c71282e01efe9b88cca58bcb82d559ed05bb9c96",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-1",
      "headRefOid": "731544fd504647bcd7ee7b7a3f0ad539651c3d41",
      "closedAt": "2022-02-17T18:53:30Z",
      "mergedAt": "2022-02-17T18:53:30Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3eab6a0db7f7dc05451265197dcfe6ce3cd0d0e6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 158,
      "id": "PR_kwDOCEWCXc4xwNoI",
      "title": "IANA registrations for the application/eat+cbor media type",
      "url": "https://github.com/ietf-rats-wg/eat/pull/158",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "question"
      ],
      "body": "Fixes #157",
      "createdAt": "2022-01-28T18:46:49Z",
      "updatedAt": "2022-01-31T17:55:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8e6182ca3c4fb4a8b466db901f73a583249e3e96",
      "headRepository": null,
      "headRefName": "eat-media-type",
      "headRefOid": "872bf9fa0eff4dd762a67a7cc60eb6c80c5a378d",
      "closedAt": "2022-01-31T17:55:01Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "a) This PR lacks detail as to when to use the proposed media type in place of application/CWT.\r\n\r\nb) This PR does not state whether eat+cbor excludes COSE/CWT encapsulation.\r\n\r\nc) This PR lacks a corresponding section for security considerations, particularly in the presence of content-filtering proxies.  EAT was designed to provide a self-protecting payload, which could therefore be transported without any corresponding x-port security (e.g. TLS/DTLS).  However an intermediary could choose to drop an unrecognized content type if it can peek into the headers, and many existing proxies will.  The original intent of the editors was to avoid defining new media types to allow for seamless transition with existing proxies/gateways, without having to compel the use of a specific type of transport security.  Contrast this to protocols such as HTTP 2.0, which had to essentially mandate the use of TLS 1.2 (https://datatracker.ietf.org/doc/html/rfc7540#section-9.2) in practice (https://daniel.haxx.se/blog/2015/03/06/tls-in-http2/) to ensure in part that outdated proxies would not drop the traffic.  What is the security guidance on the use of new media types?  \r\n\r\nI don't think this PR is ready for inclusion in the EAT spec, and I think this topic would be better handled more comprehensively in a separate draft that provides for all attestation media types, along with sufficient guidance for implementors, and associated security considerations.  Moreover, this topic seems broader than just attestation.  Many data types that appear in a protocol that involves attestation conveyance may benefit from a more expressive CWT/JWT media type.",
          "createdAt": "2022-01-30T20:28:35Z",
          "updatedAt": "2022-01-30T20:28:35Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 159,
      "id": "PR_kwDOCEWCXc4xyAnP",
      "title": "Clarifications to the submods section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/159",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is based on comments from Hannes.",
      "createdAt": "2022-01-29T19:16:10Z",
      "updatedAt": "2022-01-29T20:30:40Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8e6182ca3c4fb4a8b466db901f73a583249e3e96",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "submod-tweaks",
      "headRefOid": "40af595e6e8c83076b7f6b3266c76b4bb08cefb9",
      "closedAt": "2022-01-29T20:30:40Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Something is wrong with this PR. It's not picking up the last push.",
          "createdAt": "2022-01-29T20:30:39Z",
          "updatedAt": "2022-01-29T20:30:39Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 160,
      "id": "PR_kwDOCEWCXc4xyD3s",
      "title": "Improve submods section based on comments from Hannes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/160",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-01-29T20:31:20Z",
      "updatedAt": "2022-01-29T20:51:27Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f9b30878904d2d2dc52b106ce950988f43df6f4d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "submod-tweaks",
      "headRefOid": "032732fd9f63bd86e55fc93a91387ced0f86a1fd",
      "closedAt": "2022-01-29T20:51:26Z",
      "mergedAt": "2022-01-29T20:51:26Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "76722d0ef25c0cd7b54e42b59431bfb9b238863f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 161,
      "id": "PR_kwDOCEWCXc4xyEPt",
      "title": "fix plural of UEID and some merge conflict indicators",
      "url": "https://github.com/ietf-rats-wg/eat/pull/161",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-01-29T20:42:45Z",
      "updatedAt": "2022-01-29T20:43:09Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d88aeb5535c0bd176624ea15eaad80f6a8ca7ad9",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "fix-recent-confusion",
      "headRefOid": "48b46a4e7ecff28d77683533126e311235cbb060",
      "closedAt": "2022-01-29T20:43:09Z",
      "mergedAt": "2022-01-29T20:43:09Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f9b30878904d2d2dc52b106ce950988f43df6f4d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 162,
      "id": "PR_kwDOCEWCXc4xzGu2",
      "title": "Clarify the security level claimed ",
      "url": "https://github.com/ietf-rats-wg/eat/pull/162",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From mailing list comment by MCR.\r\n\r\nLaurence Lundblade <lgl@island-resort.com> wrote:\r\n- It is claiming the lowest level possible (as a warning)\r\n\r\nI think that this is the key part that makes it useful, even when self-asserted.\r\n\r\nIt is saying, \"I am *least* THIS vulnerable\",\r\n         not \"I am at *most* THIS secure\".\r\n",
      "createdAt": "2022-01-30T18:53:07Z",
      "updatedAt": "2022-05-16T16:21:50Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3dd71068383b9738b9afab1aa588ccf70f986b94",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "sl1",
      "headRefOid": "f2c42015cca8e93da6d1f789d323f2c49bc36f67",
      "closedAt": "2022-05-16T16:21:47Z",
      "mergedAt": "2022-05-16T16:21:47Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d4c8feadae672393a92552c0b104ee648801fa8f"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "\"The security level claimed MUST be for the weakest point in the entity, not the strongest.  For example, if attestation key is protected by hardware, but the rest of the attester is in a TEE, the claim must be for secure-restriced.\".  \r\n\r\nIn my opinion this does not fully capture the original intent, which was also to convey a security level whose value could be determined independent from the entity manufacturer.  Therefore, in the example above, a manufacturer of an entity should not be able to claim a TEE-level of security assurance if this level of assurance has not been independently verified (e.g. by a cert house).     I would recommend adding text to clarify the difference between a security level that has been self-asserted versus a security level that has been independently verified.\r\n\r\nI would also recommend avoiding terms like 'self-assertion' and suggest 'self-determination' instead.  This is because 'assertion' already has definitions that may not correspond directly to the intent in this case (see https://www.w3.org/TR/webauthn-2/#sctn-terminology).\r\n\r\nI suggest the following:\r\n\r\n\"The security level claimed MUST be for the weakest point in the entity, not the strongest.  The weakest point of the entity could be determined by the attester itself, in which case it is self-determined.  The weakest point may also be determined by independent analysis (e.g. via a 3rd-party security certification program), in which case the security level is not self-determined and can be confirmed separately from the attestation (e.g. NIST's Cryptographic Module Validation Program online lookup - see https://csrc.nist.gov/projects/cryptographic-module-validation-program/validated-modules/search).  \r\n\r\nFor example, in the case of self-determination if the attestation key is protected by hardware, but the rest of the attester is in a TEE, the claim must be for secure-restricted.  However, if the security level is not self-determined then the attester should only claim the security level at which the entity was verified by an independent 3rd-party.  In this example, if the manufacturer only obtained a security certification for the entity that corresponded to 'restricted' level, then that is the level at which the claim should be set even though the entity contains a TEE\".",
          "createdAt": "2022-01-30T23:30:58Z",
          "updatedAt": "2022-01-31T03:56:46Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 164,
      "id": "PR_kwDOCEWCXc4yMtMb",
      "title": "Add section on privacy considerations for replay protection",
      "url": "https://github.com/ietf-rats-wg/eat/pull/164",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-07T21:41:13Z",
      "updatedAt": "2022-02-17T19:07:10Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "76722d0ef25c0cd7b54e42b59431bfb9b238863f",
      "headRepository": null,
      "headRefName": "PrivacyMods",
      "headRefOid": "2e3ddfbeead83c8d9aee07b3786b94b26a50450e",
      "closedAt": "2022-02-17T19:07:10Z",
      "mergedAt": "2022-02-17T19:07:10Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "80900556448aeb130f05baf55e3b919c9954646f"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "For https://github.com/ietf-rats-wg/eat/issues/163",
          "createdAt": "2022-02-07T21:41:33Z",
          "updatedAt": "2022-02-07T21:41:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc40LhN8",
          "commit": {
            "abbreviatedOid": "5dc232f"
          },
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM modulo a couple typos.",
          "createdAt": "2022-02-08T01:43:58Z",
          "updatedAt": "2022-02-08T01:45:32Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nEAT offers 2 primary mechanisms for token replay protection (also sometimes\r\nknown as token \"freshness\"):  the cti/jti claim and the nonce claim.  The cti/jti claim\r\n```",
              "createdAt": "2022-02-08T01:43:58Z",
              "updatedAt": "2022-02-08T01:45:32Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nan implementor may choose a cti that is equivalent to a username associated with the device (e.g., account\r\n```",
              "createdAt": "2022-02-08T01:44:42Z",
              "updatedAt": "2022-02-08T01:45:32Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nof the token or an account associated with the token (e.g., if the account name is used to derive the nonce).  In order\r\n```",
              "createdAt": "2022-02-08T01:44:56Z",
              "updatedAt": "2022-02-08T01:45:32Z"
            }
          ]
        }
      ]
    },
    {
      "number": 166,
      "id": "PR_kwDOCEWCXc4zAt6B",
      "title": "a few more things for odometer claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/166",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Add the label, makefile variables and such for odometer claim",
      "createdAt": "2022-02-17T19:04:19Z",
      "updatedAt": "2022-02-17T19:06:06Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3eab6a0db7f7dc05451265197dcfe6ce3cd0d0e6",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "odom2",
      "headRefOid": "f64537a3a1468f1ca151f1192264056ce23fd966",
      "closedAt": "2022-02-17T19:06:02Z",
      "mergedAt": "2022-02-17T19:06:02Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "87a375dab358a0156790b35c3fa5139b684103be"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 167,
      "id": "PR_kwDOCEWCXc4zAyza",
      "title": "minor fixes to replay privacy",
      "url": "https://github.com/ietf-rats-wg/eat/pull/167",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Formatting and changes list",
      "createdAt": "2022-02-17T19:21:58Z",
      "updatedAt": "2022-02-17T19:22:17Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "80900556448aeb130f05baf55e3b919c9954646f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "rep-priv-2",
      "headRefOid": "170c88502a93d794d7856957c8759110d581b166",
      "closedAt": "2022-02-17T19:22:13Z",
      "mergedAt": "2022-02-17T19:22:13Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "17959f3c7711d484a6c64cf13d8b182fa5a0584a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 171,
      "id": "PR_kwDOCEWCXc4zv4CO",
      "title": "Sort the claims into four categories",
      "url": "https://github.com/ietf-rats-wg/eat/pull/171",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "1. Claims about the Entity (most claims)\r\n2. Claims about the Token (e.g. profile, intended use)\r\n3. Nonce\r\n4. Encoding keys\r\n\r\nThis is to clarify claims occurring in attestation evidence and/or attestation results",
      "createdAt": "2022-03-01T19:13:53Z",
      "updatedAt": "2022-04-07T17:09:48Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "b50a70c0f31f8880c94f170ac5c79cc514f7c939",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ClaimCategories",
      "headRefOid": "c8ac8d61616d75e79b6edf82071c7b1ada54a041",
      "closedAt": "2022-04-07T17:09:44Z",
      "mergedAt": "2022-04-07T17:09:44Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7f0168fb2798f800d668f462caa6a57c9a3674ee"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 172,
      "id": "PR_kwDOCEWCXc4zway7",
      "title": "remove half-precision exclusion from location claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/172",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-01T22:17:23Z",
      "updatedAt": "2022-03-22T13:12:22Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "17959f3c7711d484a6c64cf13d8b182fa5a0584a",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "LocationHalf",
      "headRefOid": "c24061883fa2c369282655cb954968fa77225a49",
      "closedAt": "2022-03-22T13:12:18Z",
      "mergedAt": "2022-03-22T13:12:18Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "c88bea72b9697fc0a7302e8143f698b54327af82"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 173,
      "id": "PR_kwDOCEWCXc40HvFc",
      "title": "first go at using JC<> template from uccs",
      "url": "https://github.com/ietf-rats-wg/eat/pull/173",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-08T17:53:09Z",
      "updatedAt": "2022-04-29T23:00:12Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "37eb1857258c0dcef61154a0e390fd350705398d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "jc-cddl",
      "headRefOid": "4a1432d15329c1ba6c54cba32e6e402fcf322985",
      "closedAt": "2022-04-29T23:00:08Z",
      "mergedAt": "2022-04-29T23:00:08Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4a8e6da095768ae2f02bfcdfd743737106bf6c53"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 174,
      "id": "PR_kwDOCEWCXc41W8ey",
      "title": "Type in DLOS's claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/174",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-31T01:15:53Z",
      "updatedAt": "2022-04-05T16:31:26Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c88bea72b9697fc0a7302e8143f698b54327af82",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "of",
      "headRefOid": "7dba54da104a9179dbe2ae448f22be66fe6c32cb",
      "closedAt": "2022-03-31T06:15:29Z",
      "mergedAt": "2022-03-31T06:15:29Z",
      "mergedBy": "henkbirkholz",
      "mergeCommit": {
        "oid": "b50a70c0f31f8880c94f170ac5c79cc514f7c939"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc43Qal8",
          "commit": {
            "abbreviatedOid": "7dba54d"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-31T06:15:19Z",
          "updatedAt": "2022-03-31T06:15:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 175,
      "id": "PR_kwDOCEWCXc41xDmq",
      "title": "Clarify UEID manufacturing type switch",
      "url": "https://github.com/ietf-rats-wg/eat/pull/175",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address #170",
      "createdAt": "2022-04-06T21:55:48Z",
      "updatedAt": "2022-04-07T17:14:43Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "7f0168fb2798f800d668f462caa6a57c9a3674ee",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "clarify-ueid",
      "headRefOid": "7bbee76c98db5c48178108f3cd9a39f56df40907",
      "closedAt": "2022-04-07T17:14:39Z",
      "mergedAt": "2022-04-07T17:14:38Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "37eb1857258c0dcef61154a0e390fd350705398d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 176,
      "id": "PR_kwDOCEWCXc43Gupj",
      "title": "Use JC<> Generic for Java vs CBOR; remove UCCS reference...",
      "url": "https://github.com/ietf-rats-wg/eat/pull/176",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-04-29T23:06:57Z",
      "updatedAt": "2022-05-16T03:15:14Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "e637243fea7edbc510727d80b4dfe73f1b4a8e20",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "jc-cddl",
      "headRefOid": "720dab748e68268260ebf309afe57ac59b1eb37e",
      "closedAt": "2022-05-16T03:15:10Z",
      "mergedAt": "2022-05-16T03:15:10Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "0dc8ba028cde570cabe862e82ffb7333b05e0161"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 179,
      "id": "PR_kwDOCEWCXc43MYa6",
      "title": "Use CoAP Content format for swevidence and manifest claims",
      "url": "https://github.com/ietf-rats-wg/eat/pull/179",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address #177. \r\n\r\nPrevious text was broken for JSON tokens and this seems like a much better and more universal design.",
      "createdAt": "2022-05-02T21:34:28Z",
      "updatedAt": "2022-05-08T17:05:32Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "37eb1857258c0dcef61154a0e390fd350705398d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "CoAP",
      "headRefOid": "f7a0aacedc08a954ca0d597b4b5412578894bfa0",
      "closedAt": "2022-05-08T17:05:28Z",
      "mergedAt": "2022-05-08T17:05:28Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "e637243fea7edbc510727d80b4dfe73f1b4a8e20"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 182,
      "id": "PR_kwDOCEWCXc432boC",
      "title": "Improved sec level",
      "url": "https://github.com/ietf-rats-wg/eat/pull/182",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reduce to 3 levels.\r\n\r\nExplain this is only a rough broad simple characterization that can't be made sharp.\r\n\r\nIf there is no consensus around this, then I will drop if from the document and registered in the specification-required range, not the standards-action range.",
      "createdAt": "2022-05-16T04:26:45Z",
      "updatedAt": "2022-05-16T16:07:13Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "0dc8ba028cde570cabe862e82ffb7333b05e0161",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "improved-sec-level",
      "headRefOid": "492537537ace6139eb81a3e762567f1f98819d17",
      "closedAt": "2022-05-16T16:07:08Z",
      "mergedAt": "2022-05-16T16:07:08Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3dd71068383b9738b9afab1aa588ccf70f986b94"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 183,
      "id": "PR_kwDOCEWCXc435yDP",
      "title": "correct JSON label for profile claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/183",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "There is already a profile claim registered for JWT that serves a different purpose so the \"profile\" label can't be used.\r\n\r\nIt was called \"eat_profile\" in previous drafts, but got unfixed, so the change puts it back correct.",
      "createdAt": "2022-05-16T19:20:44Z",
      "updatedAt": "2022-05-16T19:21:02Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d4c8feadae672393a92552c0b104ee648801fa8f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "profilelabel",
      "headRefOid": "3abd928d666a97750a27a8f496b6535fc9ef1940",
      "closedAt": "2022-05-16T19:20:58Z",
      "mergedAt": "2022-05-16T19:20:58Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f1fb51349bb3b772f4665f89bc38010cf0775ea5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 184,
      "id": "PR_kwDOCEWCXc4353kx",
      "title": "make JSON nonce the same as the EAT CBOR nonce",
      "url": "https://github.com/ietf-rats-wg/eat/pull/184",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address #180",
      "createdAt": "2022-05-16T19:42:41Z",
      "updatedAt": "2022-05-17T03:31:50Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f1fb51349bb3b772f4665f89bc38010cf0775ea5",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "jnonce",
      "headRefOid": "df1d2f175cc25492fb9204f39269c576915d4414",
      "closedAt": "2022-05-17T03:31:47Z",
      "mergedAt": "2022-05-17T03:31:46Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a012c58711fc4af8c3117d97591f41418df5d0a5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 185,
      "id": "PR_kwDOCEWCXc44E9cz",
      "title": "swresults->measurement results + revamp",
      "url": "https://github.com/ietf-rats-wg/eat/pull/185",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "swresults is renamed measurement results.\r\n\r\nIt is revamped to be more general.",
      "createdAt": "2022-05-19T01:38:08Z",
      "updatedAt": "2022-05-19T01:39:06Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a012c58711fc4af8c3117d97591f41418df5d0a5",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "mr",
      "headRefOid": "443b5ce985667c32279adbda7fb2add3b3eece97",
      "closedAt": "2022-05-19T01:39:03Z",
      "mergedAt": "2022-05-19T01:39:03Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "88873ad247acbd87d538a0c248043482f2f7f33f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 186,
      "id": "PR_kwDOCEWCXc44b5Mp",
      "title": "improve OID regex",
      "url": "https://github.com/ietf-rats-wg/eat/pull/186",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This change tightens the regex for matching OIDs, which is currently too lax (for example, it allows \"...\", \"1..2\", \"1.2.\", etc. to successfully validate.)\r\n",
      "createdAt": "2022-05-25T10:46:28Z",
      "updatedAt": "2022-07-08T05:28:48Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1addc802a403b6839053aea967c20194aef2c1b",
      "headRepository": null,
      "headRefName": "patch-2",
      "headRefOid": "c59097f2e898f4743941315dfd22e4d586501147",
      "closedAt": "2022-07-08T05:28:48Z",
      "mergedAt": "2022-07-08T05:28:48Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "531741c04f529fe8ad05b2b376201307e2243756"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "not clear what is the reason for closing this?",
          "createdAt": "2022-07-07T08:49:05Z",
          "updatedAt": "2022-07-07T08:49:05Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks like a good change to me. Not sure why it was closed.",
          "createdAt": "2022-07-07T16:34:35Z",
          "updatedAt": "2022-07-07T16:34:35Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Did you test this or get it from a good source? I made an attempt to test it, but didn't get too far.",
          "createdAt": "2022-07-08T03:07:20Z",
          "updatedAt": "2022-07-08T03:07:20Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Did you test this or get it from a good source? \r\n\r\nI did it for [RFC9115](https://www.rfc-editor.org/rfc/rfc9115.html#name-csr-template-cddl).  There is some limited coverage [in the validation tests](https://github.com/yaronf/I-D/tree/main/STAR-Delegation/CSR-template/test).\r\n\r\nI have made [this](https://github.com/thomas-fossati/oids) just now.  Feel free to use it as a base.\r\n\r\n",
          "createdAt": "2022-07-08T05:14:38Z",
          "updatedAt": "2022-07-08T05:14:38Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "OK. That's good enough for me. Thanks!",
          "createdAt": "2022-07-08T05:28:40Z",
          "updatedAt": "2022-07-08T05:28:40Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 188,
      "id": "PR_kwDOCEWCXc44tXYx",
      "title": "Update draft-ietf-rats-eat.md",
      "url": "https://github.com/ietf-rats-wg/eat/pull/188",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To address https://github.com/ietf-rats-wg/eat/issues/187",
      "createdAt": "2022-05-31T01:17:49Z",
      "updatedAt": "2022-06-01T18:54:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1addc802a403b6839053aea967c20194aef2c1b",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch1",
      "headRefOid": "5d0548e9e2569110d2f8ba7766016563533e1138",
      "closedAt": "2022-06-01T16:27:46Z",
      "mergedAt": "2022-06-01T16:27:46Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "07e374d586bfba2fa85d9e841d4d625b1d12c353"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gmandyam did you consider my PR (https://github.com/gmandyam/eat/pull/1/files) before merging?",
          "createdAt": "2022-06-01T18:54:23Z",
          "updatedAt": "2022-06-01T18:54:23Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@gmandyam did you consider my PR (https://github.com/gmandyam/eat/pull/1/files) before merging?",
          "createdAt": "2022-06-01T18:54:23Z",
          "updatedAt": "2022-06-01T18:54:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc47A6Ei",
          "commit": {
            "abbreviatedOid": "08ed861"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "editorial suggestion",
          "createdAt": "2022-05-31T09:01:53Z",
          "updatedAt": "2022-06-01T09:33:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe Boot Seed claim contains a value created at system boot time that\r\nallows differentiation of attestation reports from different boot sessions of a\r\nparticular entity (e.g., a certain UEID).\r\n```",
              "createdAt": "2022-05-31T09:01:53Z",
              "updatedAt": "2022-06-01T08:35:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc47Fjb8",
          "commit": {
            "abbreviatedOid": "08ed861"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-01T01:50:08Z",
          "updatedAt": "2022-06-01T01:50:08Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "@thomas-fossati \r\n\r\n>The Boot Seed claim contains a value created at system boot time that MUST allow differentiation of attestation reports ...\r\n\r\nWhy should this be a MUST requirement?  It is up to the RP to determine what kind of security assurances it assigns to an implementation that re-uses the boot seed.\r\n\r\n>Note that this claim is effectively a semi-stable entity identifier and therefore it is not suitable for use in attestation schemes that are privacy preserving.\r\n\r\nWould prefer to put privacy discussions in the Privacy Considerations section - see https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat#section-10.  We can add a Boot Seed subsection.  That being said, would recommend refining the wording as \"is effectively a stable entity identifier within a given boot epoch ...\".\r\n\r\nAlso, should 'boot epoch' be defined or is it a term-of-art?",
              "createdAt": "2022-06-01T01:50:08Z",
              "updatedAt": "2022-06-01T01:50:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc47Go0P",
          "commit": {
            "abbreviatedOid": "08ed861"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-01T08:34:27Z",
          "updatedAt": "2022-06-01T08:34:27Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "> Why should this be a MUST requirement? It is up to the RP to determine what kind of security assurances it assigns to an implementation that re-uses the boot seed.\r\n\r\nAgree.  It's a semantic requirement, not an interoperability one, so it's moot.\r\n\r\n> > Note that this claim is effectively a semi-stable entity identifier and therefore it is not suitable for use in attestation schemes that are privacy preserving.\r\n> \r\n> Would prefer to put privacy discussions in the Privacy Considerations section - see https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat#section-10. We can add a Boot Seed subsection.\r\n\r\n\ud83d\udc4d will raise a separate PR (or try and piggyback on this one, GitHub permitting)\r\n\r\n> That being said, would recommend refining the wording as \"is effectively a stable entity identifier within a given boot epoch ...\".\r\n\r\nExcellent suggestion.\r\n\r\n> Also, should 'boot epoch' be defined or is it a term-of-art?\r\n\r\nIt's just something I made up which sounded fit for purpose.  I'm open to suggestions.\r\n",
              "createdAt": "2022-06-01T08:34:27Z",
              "updatedAt": "2022-06-01T08:41:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc47G8T1",
          "commit": {
            "abbreviatedOid": "08ed861"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-01T09:33:11Z",
          "updatedAt": "2022-06-01T09:33:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "addressed in https://github.com/gmandyam/eat/pull/1",
              "createdAt": "2022-06-01T09:33:11Z",
              "updatedAt": "2022-06-01T09:33:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc47JDB3",
          "commit": {
            "abbreviatedOid": "08ed861"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-01T16:04:38Z",
          "updatedAt": "2022-06-01T16:04:39Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This works for me. OK if I merge it?",
              "createdAt": "2022-06-01T16:04:39Z",
              "updatedAt": "2022-06-01T16:04:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc47JJHJ",
          "commit": {
            "abbreviatedOid": "08ed861"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-01T16:19:30Z",
          "updatedAt": "2022-06-01T16:19:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "@laurencelundblade just to be sure: are you talking about https://github.com/gmandyam/eat/pull/1/files?\r\n\r\nIf so, I think @gmandyam has to first merge it into his fork.  (I built the delta on top of his.)",
              "createdAt": "2022-06-01T16:19:30Z",
              "updatedAt": "2022-06-01T16:19:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 189,
      "id": "PR_kwDOCEWCXc44wgnr",
      "title": "nuke trailing whitespace",
      "url": "https://github.com/ietf-rats-wg/eat/pull/189",
      "state": "MERGED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-05-31T17:32:46Z",
      "updatedAt": "2022-06-01T16:30:56Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1addc802a403b6839053aea967c20194aef2c1b",
      "headRepository": "mcr/eat",
      "headRefName": "trailing-whitespace-errors",
      "headRefOid": "4695a06812cd904cf082bbc7b909af3b36413472",
      "closedAt": "2022-06-01T16:30:56Z",
      "mergedAt": "2022-06-01T16:30:56Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "4695a06812cd904cf082bbc7b909af3b36413472"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 190,
      "id": "PR_kwDOCEWCXc44wihE",
      "title": "Mcr typos",
      "url": "https://github.com/ietf-rats-wg/eat/pull/190",
      "state": "MERGED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-05-31T17:41:18Z",
      "updatedAt": "2022-06-01T16:30:55Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1addc802a403b6839053aea967c20194aef2c1b",
      "headRepository": "mcr/eat",
      "headRefName": "mcr-typos",
      "headRefOid": "888f54118f798588a0da7536b27e37b3232bd6b9",
      "closedAt": "2022-06-01T16:30:54Z",
      "mergedAt": "2022-06-01T16:30:54Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "e0e3765f5a0cb61902ffd70a014c192a83c389e3"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you for these edits.  Will merge.",
          "createdAt": "2022-06-01T16:30:48Z",
          "updatedAt": "2022-06-01T16:30:48Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 192,
      "id": "PR_kwDOCEWCXc446g2C",
      "title": "Revert \"Update draft-ietf-rats-eat.md\"",
      "url": "https://github.com/ietf-rats-wg/eat/pull/192",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reverts ietf-rats-wg/eat#188",
      "createdAt": "2022-06-01T20:56:58Z",
      "updatedAt": "2022-06-01T20:57:36Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "e0e3765f5a0cb61902ffd70a014c192a83c389e3",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "revert-188-branch1",
      "headRefOid": "62c4ad92cae95cad627b765bf225a5af9bc16d3e",
      "closedAt": "2022-06-01T20:57:36Z",
      "mergedAt": "2022-06-01T20:57:36Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "6d296e9d20d385091f178ff98fc519415bed220c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 193,
      "id": "PR_kwDOCEWCXc446kzm",
      "title": "Branch1",
      "url": "https://github.com/ietf-rats-wg/eat/pull/193",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "For https://github.com/ietf-rats-wg/eat/issues/187",
      "createdAt": "2022-06-01T21:05:36Z",
      "updatedAt": "2022-06-02T13:21:03Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "6d296e9d20d385091f178ff98fc519415bed220c",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch1",
      "headRefOid": "de32f79c17a718bfb77cb4778a93cc35841de9f2",
      "closedAt": "2022-06-02T13:21:03Z",
      "mergedAt": "2022-06-02T13:21:03Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "480b703ac13518b6b624e522e28edc25b40aeac4"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@thomas-fossati Please review",
          "createdAt": "2022-06-01T21:07:04Z",
          "updatedAt": "2022-06-01T21:07:04Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc47N_Xs",
          "commit": {
            "abbreviatedOid": "de32f79"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-02T13:15:41Z",
          "updatedAt": "2022-06-02T13:15:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 194,
      "id": "PR_kwDOCEWCXc44_cEv",
      "title": "Future eat formats must be IETF standards",
      "url": "https://github.com/ietf-rats-wg/eat/pull/194",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-02T17:08:33Z",
      "updatedAt": "2022-07-08T03:04:02Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "480b703ac13518b6b624e522e28edc25b40aeac4",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "socket",
      "headRefOid": "27014c01ce78d76795ae9d200232a7e97cbe1783",
      "closedAt": "2022-07-08T03:04:02Z",
      "mergedAt": "2022-07-08T03:04:02Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "309780d229fe02858e42a2f43a07e82f3b57c963"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc47Qa6P",
          "commit": {
            "abbreviatedOid": "ae66ab1"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "suggested edits",
          "createdAt": "2022-06-02T20:33:43Z",
          "updatedAt": "2022-06-02T20:34:16Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "```suggestion\r\nAny new format that plugs into this socket MUST be defined in a IETF standards track document.\r\n```",
              "createdAt": "2022-06-02T20:33:44Z",
              "updatedAt": "2022-06-02T20:34:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 195,
      "id": "PR_kwDOCEWCXc45Lxwr",
      "title": "typo in CDDL",
      "url": "https://github.com/ietf-rats-wg/eat/pull/195",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "`hwvers` is called `hwversion` in the CWT registry",
      "createdAt": "2022-06-06T17:55:26Z",
      "updatedAt": "2022-06-10T17:10:52Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "480b703ac13518b6b624e522e28edc25b40aeac4",
      "headRepository": "thomas-fossati/eat",
      "headRefName": "patch-1",
      "headRefOid": "61807f9c04d41b70925dc134ac389492083c3b20",
      "closedAt": "2022-06-10T17:10:52Z",
      "mergedAt": "2022-06-10T17:10:52Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 196,
      "id": "PR_kwDOCEWCXc45e5RA",
      "title": "UEID length and type clarifications",
      "url": "https://github.com/ietf-rats-wg/eat/pull/196",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses comments from MCR and Elliot.",
      "createdAt": "2022-06-10T17:51:26Z",
      "updatedAt": "2022-07-07T04:26:19Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ueid-edits",
      "headRefOid": "40ccfaf540066d7d525a1a72956b4a3c0a24b607",
      "closedAt": "2022-07-07T04:26:19Z",
      "mergedAt": "2022-07-07T04:26:19Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "5bf6eaab7cbc45849fe172ab9055de9372ac5d1a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc47z7hW",
          "commit": {
            "abbreviatedOid": "40ccfaf"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-11T14:26:17Z",
          "updatedAt": "2022-06-11T14:26:17Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Again, SHOULD. Is there an exception then?",
              "createdAt": "2022-06-11T14:26:17Z",
              "updatedAt": "2022-06-11T14:26:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc47z7kd",
          "commit": {
            "abbreviatedOid": "40ccfaf"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-11T14:28:50Z",
          "updatedAt": "2022-06-11T14:28:50Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "What do the EUI and IMEI types bring to the table?  \r\nWhy not just have a 32-byte RAND UEID and be done with it?",
              "createdAt": "2022-06-11T14:28:50Z",
              "updatedAt": "2022-06-11T14:28:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc474YzS",
          "commit": {
            "abbreviatedOid": "40ccfaf"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-13T16:40:42Z",
          "updatedAt": "2022-06-13T16:40:43Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "To allow for some future type that is longer. Some unanticipated use case. Some unanticipated attack.",
              "createdAt": "2022-06-13T16:40:43Z",
              "updatedAt": "2022-06-13T16:40:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc49c1qZ",
          "commit": {
            "abbreviatedOid": "40ccfaf"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-07T04:25:43Z",
          "updatedAt": "2022-07-07T04:25:44Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "EUI and IMEI are much shorter, they may be ready-to-hand and and a random number generator might not be.",
              "createdAt": "2022-07-07T04:25:44Z",
              "updatedAt": "2022-07-07T04:25:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 197,
      "id": "PR_kwDOCEWCXc45e_eq",
      "title": "Address comments on SUEIDs",
      "url": "https://github.com/ietf-rats-wg/eat/pull/197",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address Eliot and MCR's comments on SUEIDs.\r\n\r\nThis is just clarifications. No actual change to the definition of an SUEID.",
      "createdAt": "2022-06-10T18:26:17Z",
      "updatedAt": "2022-07-07T04:27:37Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "sueid-edits",
      "headRefOid": "f1ea23dcd9bcbbbeab470ef7cfe9dbfc8680fd65",
      "closedAt": "2022-07-07T04:27:37Z",
      "mergedAt": "2022-07-07T04:27:37Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "ba1b42a4d46b49d781516d2dbde4db30cfe9c9da"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc47z7mp",
          "commit": {
            "abbreviatedOid": "f1ea23d"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-11T14:30:47Z",
          "updatedAt": "2022-06-11T14:30:47Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Since EUI and IMEI labels come from a registry, they can't change during a life-cycle event.\r\nIt seems that really only the RAND type makes any sense for the SUEID.\r\n",
              "createdAt": "2022-06-11T14:30:47Z",
              "updatedAt": "2022-06-11T14:30:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc47z7nW",
          "commit": {
            "abbreviatedOid": "f1ea23d"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-11T14:31:12Z",
          "updatedAt": "2022-06-11T14:31:13Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "So, it's okay for me to use FDO to mean something else?",
              "createdAt": "2022-06-11T14:31:12Z",
              "updatedAt": "2022-06-11T14:31:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc474au1",
          "commit": {
            "abbreviatedOid": "f1ea23d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-13T16:47:01Z",
          "updatedAt": "2022-06-13T16:47:02Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Agreed it seems unlikely, but it is not un heard of for device to change MAC address or to have multiple MAC addresses. IMEI less so.\r\n\r\nNew values can be allocated for global registries easily, so that isn't a restricting characteristic here.",
              "createdAt": "2022-06-13T16:47:02Z",
              "updatedAt": "2022-06-13T16:47:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc474av8",
          "commit": {
            "abbreviatedOid": "f1ea23d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-13T16:47:04Z",
          "updatedAt": "2022-06-13T16:47:04Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Yes.\r\n\r\nIt doesn't quite say it explicit, but if you are really concerned about collisions with these labels in a particularly use case then define a profile which says how they are allocated.",
              "createdAt": "2022-06-13T16:47:04Z",
              "updatedAt": "2022-06-13T16:47:05Z"
            }
          ]
        }
      ]
    },
    {
      "number": 198,
      "id": "PR_kwDOCEWCXc45lDvc",
      "title": "\"Attestation Evidence\" -> \"Evidence\"",
      "url": "https://github.com/ietf-rats-wg/eat/pull/198",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Align with RATs architecture which uses \"Evidence\", not \"Attestation Evidence\".\r\n",
      "createdAt": "2022-06-13T17:46:34Z",
      "updatedAt": "2022-07-07T04:28:31Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "Evidence",
      "headRefOid": "b289e505db4ea0b4d02d1ac233df89decd0cb2e9",
      "closedAt": "2022-07-07T04:28:30Z",
      "mergedAt": "2022-07-07T04:28:30Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a6d4cb6284e5dad8e8976761942a2bdb44f2b94f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 199,
      "id": "PR_kwDOCEWCXc45lI3J",
      "title": "Wording clarification for \"entity\"",
      "url": "https://github.com/ietf-rats-wg/eat/pull/199",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Response to MCR's comment.",
      "createdAt": "2022-06-13T18:11:03Z",
      "updatedAt": "2022-07-07T04:30:17Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "entity",
      "headRefOid": "e566002db7b79e0f9bd1b471fc13bee1b61e9550",
      "closedAt": "2022-07-07T04:30:17Z",
      "mergedAt": "2022-07-07T04:30:17Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7e804e74279afa94f7502eccd13a79d1b5a6ea57"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 200,
      "id": "PR_kwDOCEWCXc45pvhv",
      "title": "Wording clarifications for DLOAs",
      "url": "https://github.com/ietf-rats-wg/eat/pull/200",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address Eliot's comments.\r\n\r\nDon't mention that a DLOA is XML in case the standard is changed to allow JSON or such.",
      "createdAt": "2022-06-14T18:05:08Z",
      "updatedAt": "2022-07-07T04:31:21Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "dloa-clarify",
      "headRefOid": "0023238bc985d864665e9631f401c7b7517c77ee",
      "closedAt": "2022-07-07T04:31:21Z",
      "mergedAt": "2022-07-07T04:31:21Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "97a3d5e98b4ef79bcee974f1e39114e8c18a76ea"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 201,
      "id": "PR_kwDOCEWCXc45p6-3",
      "title": "CDDL type for CoAP Content Format",
      "url": "https://github.com/ietf-rats-wg/eat/pull/201",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Make a CDDL type for CoAP Content-Format and limit it's value to the range in the CoAP RFC.",
      "createdAt": "2022-06-14T18:47:37Z",
      "updatedAt": "2022-07-07T04:32:13Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "coap-c-f",
      "headRefOid": "792971d68ed9f346adadde147b783453ab61a28a",
      "closedAt": "2022-07-07T04:32:13Z",
      "mergedAt": "2022-07-07T04:32:13Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2b2abc990a26d10e968b298982b8c70a362c67ad"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 202,
      "id": "PR_kwDOCEWCXc45qAwp",
      "title": "Move Claim Characteristics to an Appendix",
      "url": "https://github.com/ietf-rats-wg/eat/pull/202",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This keeps the IANA section clear and clean while preserving the work that was done early by RATS to come up with some principles for claim definition.\r\n",
      "createdAt": "2022-06-14T19:16:57Z",
      "updatedAt": "2022-07-07T04:33:02Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "claim-char",
      "headRefOid": "ba6415edfc8ff2fc96c1034c2e79f023844ac037",
      "closedAt": "2022-07-07T04:33:01Z",
      "mergedAt": "2022-07-07T04:33:01Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "dbe0b806d162aeac730f19057cdd358a14f1a177"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 203,
      "id": "PR_kwDOCEWCXc45qpZU",
      "title": "MCR wording improvements in section 1 related to AR",
      "url": "https://github.com/ietf-rats-wg/eat/pull/203",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-14T22:43:12Z",
      "updatedAt": "2022-07-07T21:23:06Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f65eb1e2310f14749c117097e727d93af0cb2ae6",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "mcr-4",
      "headRefOid": "5ca0695e49db407ddcf171398e6f68c9ac5d946f",
      "closedAt": "2022-07-07T21:23:06Z",
      "mergedAt": "2022-07-07T21:23:06Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d9cf6715c7f9b043e5da3165f26fdebf67dbdeac"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 204,
      "id": "PR_kwDOCEWCXc45qrJL",
      "title": "Rename odometer to boot-count",
      "url": "https://github.com/ietf-rats-wg/eat/pull/204",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Suggested by MCR. Makes sense to me.",
      "createdAt": "2022-06-14T22:57:29Z",
      "updatedAt": "2022-07-07T04:40:32Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "boot-counter",
      "headRefOid": "1daba5929da978e3e8724dbc03192ce8fe21f607",
      "closedAt": "2022-07-07T04:40:31Z",
      "mergedAt": "2022-07-07T04:40:31Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3673a1d76fbe8f8ada90515f0ac0d0e420cb574a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 205,
      "id": "PR_kwDOCEWCXc45zhwN",
      "title": "Fix COSE references",
      "url": "https://github.com/ietf-rats-wg/eat/pull/205",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Refer to 9052 instead of 8152.\r\n\r\nMention COSE in Appendix D per comment from Carl Wallace.\r\n\r\n(Check the build before merging. There's a problem with the 9052 reference, but I think it is the RFC Editor web site's issue).\r\n",
      "createdAt": "2022-06-16T21:39:04Z",
      "updatedAt": "2022-07-08T03:16:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f5e6a416d07069ffc537e81c096c2cce05ae1f54",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "COSE-ref",
      "headRefOid": "03db8df2e44c69e147fcc27adf75eddbe55e4fc3",
      "closedAt": "2022-07-08T03:16:15Z",
      "mergedAt": "2022-07-08T03:16:15Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d3f112ded49b9fdefb5d94ed36f189091db2c1f6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 206,
      "id": "PR_kwDOCEWCXc45zkZT",
      "title": "Correct/clarify section on JSON/CBOR labels",
      "url": "https://github.com/ietf-rats-wg/eat/pull/206",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Previous text was from before \"JC <>\". \r\n\r\nAlso address Carl's comments that there are more exceptions than were listed.",
      "createdAt": "2022-06-16T21:56:51Z",
      "updatedAt": "2022-07-07T04:42:02Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "labels",
      "headRefOid": "df2bb8bc0dcd1f2d3ee9fe2d617d980449acd0bd",
      "closedAt": "2022-07-07T04:42:02Z",
      "mergedAt": "2022-07-07T04:42:02Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "88bce00d0b703d6287a1fda7d78125ee4ee53dc0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 207,
      "id": "PR_kwDOCEWCXc45znIR",
      "title": "Appendix C clarifications",
      "url": "https://github.com/ietf-rats-wg/eat/pull/207",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per Carl's comment on \"network protocol\", EAT is now referred to in Appendix C as a message format.  Also fix another error.",
      "createdAt": "2022-06-16T22:14:49Z",
      "updatedAt": "2022-07-07T04:44:56Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "AppendixC",
      "headRefOid": "8af7cba469dddacf75bfc2c53523a8a332dce69c",
      "closedAt": "2022-07-07T04:44:56Z",
      "mergedAt": "2022-07-07T04:44:56Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b71ef315d556966f056945bfa827ecc97f3be168"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 208,
      "id": "PR_kwDOCEWCXc4534wc",
      "title": "xxx encoded -> xxx-encoded",
      "url": "https://github.com/ietf-rats-wg/eat/pull/208",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per Eliot's comment.",
      "createdAt": "2022-06-17T19:59:24Z",
      "updatedAt": "2022-07-07T04:45:56Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hyphen",
      "headRefOid": "869fa22ed67d8720df493e6fa9941569fd9ed964",
      "closedAt": "2022-07-07T04:45:55Z",
      "mergedAt": "2022-07-07T04:45:55Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a6802c98ad938067f2dc1500d15e4ca7b7750768"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 209,
      "id": "PR_kwDOCEWCXc453861",
      "title": "Clarifications for cti and jti claims",
      "url": "https://github.com/ietf-rats-wg/eat/pull/209",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-17T20:25:25Z",
      "updatedAt": "2022-07-07T04:46:50Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "cti",
      "headRefOid": "e881fc701d44eecb646a3c966df5b0faf040b8f7",
      "closedAt": "2022-07-07T04:46:49Z",
      "mergedAt": "2022-07-07T04:46:49Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4271333b91426905754b79b373c8173e59f16eb8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 210,
      "id": "PR_kwDOCEWCXc455PG3",
      "title": "Clarify how a profile can re-define an EAT claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/210",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://mailarchive.ietf.org/arch/msg/rats/zubR3clEkOwh68bPvwbD8NPwY2k/ (ioT Directorate review):\r\n\r\n\"This statement in particular is quite disturbing.\r\n\r\n   In some cases CDDL may be created that replaces CDDL in this or other\r\n   document to express some profile requirements.\r\n\r\nNot only is this counter-cultural, but it would require an Updates:\r\nheader on any such profile, and would further just be plain out\r\nconfusing.\r\n\r\nIn short, the profile mechanism is harmful to the very concept of\r\ninteroperability\"",
      "createdAt": "2022-06-18T15:48:14Z",
      "updatedAt": "2022-07-08T03:06:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch2",
      "headRefOid": "b439c4ca2a0d388ae40ec3475f1f028841f96ba7",
      "closedAt": "2022-07-08T03:06:01Z",
      "mergedAt": "2022-07-08T03:06:01Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f5e6a416d07069ffc537e81c096c2cce05ae1f54"
      },
      "comments": [
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "I would like to try to read Eliot's comment here.\r\n\r\nThe way profiling is phrased does not work. We have to:\r\n\r\n1.) define the hard issue with current profiling\r\n2.) agree on what profiling in general means\r\n\r\nWithout theses two actions done on the list, in the open, with consensus, any tinkering on this issues is moot.",
          "createdAt": "2022-06-20T12:22:46Z",
          "updatedAt": "2022-06-20T12:22:46Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Made another attempt to clarify profile usage of existing claims.  ",
          "createdAt": "2022-06-23T00:19:15Z",
          "updatedAt": "2022-06-23T00:19:15Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc48SVWS",
          "commit": {
            "abbreviatedOid": "30530f0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-06-18T17:51:56Z",
          "updatedAt": "2022-06-18T17:52:04Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "If this means that we'd need to renumber the [nonce](https://datatracker.ietf.org/doc/html/draft-tschofenig-rats-psa-token#section-3.1.1) and the the [instance ID](https://datatracker.ietf.org/doc/html/draft-tschofenig-rats-psa-token#section-3.2.1) claims only because they express some kind of constraints over the EAT type, I am definitely opposed to this change.",
              "createdAt": "2022-06-18T17:51:56Z",
              "updatedAt": "2022-06-18T17:52:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc48SVb9",
          "commit": {
            "abbreviatedOid": "30530f0"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-18T17:57:24Z",
          "updatedAt": "2022-06-18T17:57:24Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "@thomas-fossati \r\n\r\n>If this means that we'd need to renumber the [nonce](https://datatracker.ietf.org/doc/html/draft-tschofenig-rats-psa-token#section-3.1.1) and the the [instance ID](https://datatracker.ietf.org/doc/html/draft-tschofenig-rats-psa-token#section-3.2.1) claims only because they express some kind of constraints over the EAT type, I am definitely opposed to this change.\r\n\r\nThe cited text above is referring to the example of the location claim (\"In this case ...\").  This particular example is not an instance of constraining the claim but fundamentally changing the definition of the claim by making what was originally an optional attribute into a mandatory one.  The PSA Token definition's use of nonce is compliant with the current EAT definition in my opinion, so I think the location example is not comparable.\r\n\r\nPlease refer also to the CWT and JWT claims registry requirements:  https://datatracker.ietf.org/doc/html/rfc8392#section-9.1 and https://datatracker.ietf.org/doc/html/rfc7519#section-10.1.  The specification requirement states \"Reference to the document or documents that specify the parameter\".  So I assume that it may be possible to amend the list of documents providing the specification beyond the EAT reference (e.g. to a profile specification that seeks to amend the claim definition), but this would be subject to the expert review process of the claims registry. ",
              "createdAt": "2022-06-18T17:57:24Z",
              "updatedAt": "2022-06-18T21:06:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc48U7X_",
          "commit": {
            "abbreviatedOid": "30530f0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-20T11:25:31Z",
          "updatedAt": "2022-06-20T11:32:55Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nIn some cases it may be desirable for CDDL to be created that constrains CDDL in this or other document to express some profile requirements.\r\n```",
              "createdAt": "2022-06-20T11:25:31Z",
              "updatedAt": "2022-06-20T11:32:55Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n```",
              "createdAt": "2022-06-20T11:30:19Z",
              "updatedAt": "2022-06-20T11:32:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc48VJ-D",
          "commit": {
            "abbreviatedOid": "30530f0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-20T12:17:26Z",
          "updatedAt": "2022-06-20T12:17:26Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I like the focus on actual \"profiling\", which literally means \"constraining\" to a subset. Thank you Thomas, for that clarification. I am seconding this suggestion. ",
              "createdAt": "2022-06-20T12:17:26Z",
              "updatedAt": "2022-06-20T12:17:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc48VKXP",
          "commit": {
            "abbreviatedOid": "30530f0"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-20T12:18:42Z",
          "updatedAt": "2022-06-20T12:18:42Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "As in the above, I 100% agree with the increase of a constraint in a profile. 2nding this suggestion.",
              "createdAt": "2022-06-20T12:18:42Z",
              "updatedAt": "2022-06-20T12:18:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc48psS8",
          "commit": {
            "abbreviatedOid": "b439c4c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-23T19:52:18Z",
          "updatedAt": "2022-06-23T19:52:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 211,
      "id": "PR_kwDOCEWCXc455SsU",
      "title": "Rework of section on including keys",
      "url": "https://github.com/ietf-rats-wg/eat/pull/211",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Triggered by comments from Eliot.\r\n\r\nRe read the proof-of-possession/confirmation RFCs and concluded they are authentication-specific so they are now NOT recommend.\r\n\r\nMake whole section a lot shorter by removing background and explanatory text.\r\n",
      "createdAt": "2022-06-18T17:20:18Z",
      "updatedAt": "2022-07-07T04:51:29Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "keys",
      "headRefOid": "5893e9c8ad4323be2d5eb8fff993a4d8b619f51b",
      "closedAt": "2022-07-07T04:51:29Z",
      "mergedAt": "2022-07-07T04:51:29Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "13e8b07bcc499cd92c84db78229eab902f438578"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 212,
      "id": "PR_kwDOCEWCXc455S5F",
      "title": "Fix reference to swevidence",
      "url": "https://github.com/ietf-rats-wg/eat/pull/212",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Simple typo fix.",
      "createdAt": "2022-06-18T17:25:38Z",
      "updatedAt": "2022-07-07T04:44:10Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "swevidence-typo",
      "headRefOid": "7e378d77c0ca14b3e7e2d699e9f8ad37afc29c2d",
      "closedAt": "2022-07-07T04:44:10Z",
      "mergedAt": "2022-07-07T04:44:10Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "1eab14b624c3d4d997b7467fe0971925fb3a2f45"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 213,
      "id": "PR_kwDOCEWCXc455Z0R",
      "title": "Security Considerations for DEB",
      "url": "https://github.com/ietf-rats-wg/eat/pull/213",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Detached EAT Bundle security considerations.  Initial attempt.",
      "createdAt": "2022-06-18T20:31:31Z",
      "updatedAt": "2022-07-09T16:32:32Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d844f4c8eea54acd239aa436c8244d1d952670c0",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch3",
      "headRefOid": "acf07180b4bcd463d38d7a4319b93e4214f76159",
      "closedAt": "2022-07-09T16:32:32Z",
      "mergedAt": "2022-07-09T16:32:32Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "9cfbb2b3c07aadd3833f087ba7f7224b06cb6d30"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 214,
      "id": "PR_kwDOCEWCXc455mlD",
      "title": "Clarify which epoch time is used for iat",
      "url": "https://github.com/ietf-rats-wg/eat/pull/214",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per comment from Eliot",
      "createdAt": "2022-06-19T03:59:06Z",
      "updatedAt": "2022-07-08T02:02:37Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "epoch",
      "headRefOid": "40c38a8dc6cf818cb7cf2e895cc818733bb1048c",
      "closedAt": "2022-07-08T02:02:37Z",
      "mergedAt": "2022-07-08T02:02:37Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "faf77ddef6c4678c9d9806bffe93511e4e0a332d"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The use of \"epoch-based\" here is to reference the section in RFC 8949.  I don't think every time you use CBOR epoch time you have to reference POSIX.",
          "createdAt": "2022-07-08T02:02:30Z",
          "updatedAt": "2022-07-08T02:02:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc48UBmJ",
          "commit": {
            "abbreviatedOid": "40c38a8"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "CHANGES_REQUESTED",
          "body": "Referring indirectly to:\r\n\r\n> [TIME_T]   The Open Group, \"The Open Group Base Specifications\",\r\n              [Section 4.16](https://datatracker.ietf.org/doc/html/rfc8949#section-4.16), 'Seconds Since the Epoch', Issue 7, 2018\r\n              Edition, IEEE Std 1003.1, 2018,\r\n              <[https://pubs.opengroup.org/onlinepubs/9699919799/](https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_16)\r\n              [basedefs/V1_chap04.html#tag_04_16](https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_16)>.\r\n\r\ndoes not really help here. \"Epoch based time\" only makes sense in context. You mean \"POSIX, IEEE Std 1003, Seconds since Epoch\"? Say that. Every instantiation of #6.1002 would have it's individual epoch, initiating its own small timescale for the duration, starting at 0.\r\n\r\nI's assume the at you want to reference and in text elaborate on the most recent IEEE posix document. The current change does not add clarity, I think.",
          "createdAt": "2022-06-20T08:24:45Z",
          "updatedAt": "2022-06-20T08:24:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 215,
      "id": "PR_kwDOCEWCXc46DoZv",
      "title": "Improve introduction to profiles",
      "url": "https://github.com/ietf-rats-wg/eat/pull/215",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This introduces profiles with a lot more rationale for there existence. Also reference to the notion of profile already in the COSE standard.\r\n\r\nThis is to address Eliot's comments.",
      "createdAt": "2022-06-21T19:36:57Z",
      "updatedAt": "2022-07-08T04:47:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d3f112ded49b9fdefb5d94ed36f189091db2c1f6",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "profile",
      "headRefOid": "fd449bb8adcb106a011c88874e5691f1d41611d9",
      "closedAt": "2022-07-08T04:47:34Z",
      "mergedAt": "2022-07-08T04:47:34Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "138b140f09ba7ad84f12976284f886cdc562895b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 216,
      "id": "PR_kwDOCEWCXc46KIWx",
      "title": "Add standard constrained device profile",
      "url": "https://github.com/ietf-rats-wg/eat/pull/216",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-22T20:27:59Z",
      "updatedAt": "2022-07-08T16:57:37Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "condev",
      "headRefOid": "37507c74ae57c08bb4c04be5ded7d0ed0bd4732e",
      "closedAt": "2022-07-08T16:57:37Z",
      "mergedAt": "2022-07-08T16:57:37Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2b7099c7a52c6a083c131e97f3ffefc9a4929ddc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc48jMeB",
          "commit": {
            "abbreviatedOid": "9df2927"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-06-22T20:51:27Z",
          "updatedAt": "2022-06-22T20:59:17Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\n| Algorithms | Receiver must accept ES256, ES384 and ES512. Sender must send one of these |\r\n```",
              "createdAt": "2022-06-22T20:51:27Z",
              "updatedAt": "2022-06-22T20:59:17Z"
            },
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n| DEB Usage | DEB is not sent with this profile |\r\n```",
              "createdAt": "2022-06-22T20:52:21Z",
              "updatedAt": "2022-06-22T20:59:17Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n| Claims | No requirement is made on the presence or absence of claims. The general EAT rules apply -- the nonce MUST be present and the receiver MUST not error out on any claims it doesn't understand |\r\n```",
              "createdAt": "2022-06-22T20:54:02Z",
              "updatedAt": "2022-06-22T20:59:17Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nStrictly speaking, slight modifications such use of a different means of key identification are a divergence from this profile and MUST use a different profile identifier.\r\n```",
              "createdAt": "2022-06-22T20:54:28Z",
              "updatedAt": "2022-06-22T20:59:17Z"
            },
            {
              "originalPosition": 9,
              "body": "We should ask if there is any prior art on allocating URIs under the IETF.org domain name.",
              "createdAt": "2022-06-22T20:59:13Z",
              "updatedAt": "2022-06-22T20:59:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc49iV1Y",
          "commit": {
            "abbreviatedOid": "9df2927"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-08T05:21:35Z",
          "updatedAt": "2022-07-08T05:21:36Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "I kind of prefer your wording here, but I've had some comments that say it should be more of the MUST/SHOULD/MAY form.",
              "createdAt": "2022-07-08T05:21:36Z",
              "updatedAt": "2022-07-08T05:21:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc49iWq1",
          "commit": {
            "abbreviatedOid": "9df2927"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-08T05:27:56Z",
          "updatedAt": "2022-07-08T05:27:56Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Not sure who to ask. I don't think it is IANA.\r\n\r\nNote that I'm just using the URL for the EAT document itself. There's not really any allocation required, but it does need to be set to the right number. \r\n\r\nMaybe we just need a note to the RFC editor?",
              "createdAt": "2022-07-08T05:27:56Z",
              "updatedAt": "2022-07-08T05:27:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc49jYrk",
          "commit": {
            "abbreviatedOid": "9df2927"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-08T09:57:10Z",
          "updatedAt": "2022-07-08T09:57:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Looking at [the RFC Editor archival policies](https://www.rfc-editor.org/rfc/rfc8153.html#section-2.3), it seems that something like `https://www.rfc-editor.org/rfc/rfcXXXX` would be the stable URI we would be looking for.  (Note that tools.ietf.org is being [decommissioned](https://www.ietf.org/blog/finalizing-ietf-tools-transition/) as we speak, so that's really a no-no.)\r\n\r\nAn alternative is to grab an OID from somewhere, though I wouldn't know under which arc as there doesn't seem to be one for IETF as a whole.  Certain working groups (notably [PKIX](https://datatracker.ietf.org/doc/html/rfc7299)) have their own arc.\r\n",
              "createdAt": "2022-07-08T09:57:11Z",
              "updatedAt": "2022-07-08T10:12:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc49jb9y",
          "commit": {
            "abbreviatedOid": "ad77480"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-08T10:09:27Z",
          "updatedAt": "2022-07-08T10:09:27Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "However, a more fundamental question is: do we need an identifier or can we leave this \"anonymous\"?\r\n\r\nThe fact is that without defining the acceptable claims-set I suspect no one will use it as-is, but only by normatively referencing this section / table and slapping their claims-set on.  That combination is what will be given a profile identifier, while this bit is just a highly reusable factorisation.\r\n\r\nBTW, we might as well define a similar profile but based on JSON, for when EAT is used to convey attestation results.  So, we'd provide a baseline for attesters and one for verifiers.",
              "createdAt": "2022-07-08T10:09:27Z",
              "updatedAt": "2022-07-08T13:28:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc49lOlb",
          "commit": {
            "abbreviatedOid": "9df2927"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-08T16:56:41Z",
          "updatedAt": "2022-07-08T16:56:42Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "OK. Fixed the URI. I like the idea that it is there as an example and that you can find the document by the URI.\r\n\r\nFiled an issue for a JSON profile. Don't have time to do it for the cutoff date.\r\n\r\nI am merging this so it can be in the next draft publication.\r\n\r\nThanks for the help here.",
              "createdAt": "2022-07-08T16:56:41Z",
              "updatedAt": "2022-07-08T16:56:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 217,
      "id": "PR_kwDOCEWCXc46Q5uU",
      "title": "Improve SW Name description",
      "url": "https://github.com/ietf-rats-wg/eat/pull/217",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-23T18:40:32Z",
      "updatedAt": "2022-07-07T16:39:10Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "swname",
      "headRefOid": "3a273288a27a0444261a87b1c376d1850f9584f5",
      "closedAt": "2022-07-07T16:39:10Z",
      "mergedAt": "2022-07-07T16:39:10Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "133d36cbe550a15d93e6dfae8c21ac890731d850"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 218,
      "id": "PR_kwDOCEWCXc46Vdeb",
      "title": "Remove most of section 8.3 on CBOR Serialization,  redundant with profiles",
      "url": "https://github.com/ietf-rats-wg/eat/pull/218",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It was mostly redundant in relation to section 7. It is also made redundant with the addition of a standard constrained device profile (another PR).\r\n\r\nThis addresses some of MCR's comments (by removing the text).",
      "createdAt": "2022-06-24T20:35:10Z",
      "updatedAt": "2022-07-07T04:50:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "cbor-interop",
      "headRefOid": "9c153f31e6a9db7570f9ded31e024bf1ab735307",
      "closedAt": "2022-07-07T04:50:35Z",
      "mergedAt": "2022-07-07T04:50:35Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9aeb3783bdbbbf28678e4754783b31b4250c1ad0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 220,
      "id": "PR_kwDOCEWCXc46csB1",
      "title": "Bring terminology section up to date with RATS Architecture",
      "url": "https://github.com/ietf-rats-wg/eat/pull/220",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Term is \"Evidence\", not \"Attestation Evidence\".\r\n\r\nAdd definition of Endorser.",
      "createdAt": "2022-06-27T21:25:36Z",
      "updatedAt": "2022-07-07T21:31:33Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "467f4f6f1f342a30cb4419b69c6d410118fcf02f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "arch-terms",
      "headRefOid": "22ddbc1402e5dcf7d5100c7ecb1e3ba1da8ce4b5",
      "closedAt": "2022-07-07T21:31:33Z",
      "mergedAt": "2022-07-07T21:31:33Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b5653c2db4d773c7bdee7c5a766834a47b64f0cc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 222,
      "id": "PR_kwDOCEWCXc46d4ix",
      "title": "Make profile issues more prescriptive",
      "url": "https://github.com/ietf-rats-wg/eat/pull/222",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "and generally tighten up the language\r\n\r\nAs suggested in some comments.",
      "createdAt": "2022-06-28T05:03:15Z",
      "updatedAt": "2022-07-07T21:24:27Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "prescriptive",
      "headRefOid": "7006f6eebdb559aa3d51d27aa7f5f4324d5f9343",
      "closedAt": "2022-07-07T21:24:27Z",
      "mergedAt": "2022-07-07T21:24:27Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "467f4f6f1f342a30cb4419b69c6d410118fcf02f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 223,
      "id": "PR_kwDOCEWCXc46lPUy",
      "title": "Add SPDX and CycloneDX to manifests claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/223",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-29T16:50:39Z",
      "updatedAt": "2022-07-09T16:16:56Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "spdx",
      "headRefOid": "293e701f02677d7710f9d39c56f94eb020822a18",
      "closedAt": "2022-07-09T16:16:56Z",
      "mergedAt": "2022-07-09T16:16:55Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "43bacc5bdda4c887d13ba7863087e60ecff106c1"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Do not understand sending XML in a JS object.  XML would have to be cast to JSON first.  There have been attempts to standardize this casting in the past, e.g. see https://datatracker.ietf.org/doc/draft-rsalz-jsonx/.  Would recommend removing the CycloneDX XML option alltogether.",
          "createdAt": "2022-07-05T15:34:08Z",
          "updatedAt": "2022-07-05T15:34:08Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Well, um we mix formats regularly. There's no CBOR format for CycloneDX. That doesn't/shouldn't stop putting a JSON or XML format CycloneDX into a CBOR token. \r\n\r\n There's a lot more formats for SPDX and CycloneDX. I just registered the ones for which there were MIME types. ",
          "createdAt": "2022-07-08T05:07:29Z",
          "updatedAt": "2022-07-08T05:07:29Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">Well, um we mix formats regularly. There's no CBOR format for CycloneDX. That doesn't/shouldn't stop putting a JSON or XML format CycloneDX into a CBOR token.\r\n\r\nThat isn't really relevant to the point I was making.  Casting XML to JSON (or CBOR) is not automatic just because we define some CDDL in the EAT spec.  XML must be first converted to a JS or CBOR object, and there are multiple ways of doing this.  \r\n\r\nIt is certainly possible to serialize the XML before including it in a token, but the CDDL as provided in the PR does not seem to address this.  \r\n\r\nAt very least, we should hold off on incorporating this PR until we get someone with more in-depth familiarity with SPDX and CycloneDX  to review.  ",
          "createdAt": "2022-07-08T05:56:29Z",
          "updatedAt": "2022-07-08T05:56:29Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Agree with holding off the PR if you want. Presumably that means it won't go into the draft we're about to publish.\r\n\r\nThe EAT CDDL specifically defines the  plug-in to the manifests claim socket for the XML and JSON encodings of CycloneDX be text so that the actual XML and JSON can be put in the EAT, whether the EAT is CBOR or JSON.. The manifests is specifically constructed to allow manifests that are encoded differently than the surrounding token. This is a must because the manifests encoding format will often not match the EAT encoding format. For example a CBOR-encoded SUIT manifest or a CBOR CoSWID have to be able to go into a JSON-encoded token because there is no JSON format for SUIT or CoSWID.\r\n\r\n",
          "createdAt": "2022-07-08T06:54:53Z",
          "updatedAt": "2022-07-08T06:54:53Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">The EAT CDDL specifically defines the plug-in to the manifests claim socket for the XML and JSON encodings of CycloneDX be text so that the actual XML and JSON can be put in the EAT, whether the EAT is CBOR or JSON..\r\n\r\nYes, this works.  But this requirement is explicitly spelled out in the current SUIT manifests text:  https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat#section-4.2.16.\r\n\r\nFor instance, in the context of SUIT manifests the current EAT spec specifically states:  \"In CBOR-encoded EATs the manifest, whatever format it is, MUST be placed in a byte string.\"  Is that the intention for the SBOM formats as described in this PR?  If so, how would an independent reader determine this?\r\n\r\n",
          "createdAt": "2022-07-08T13:48:34Z",
          "updatedAt": "2022-07-08T13:48:34Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Ahhh... that text was wrong. See #234. I just removed it and rely on the CDDL.\r\n\r\nI think it all works now.\r\n\r\nWe're agreed that it is OK for the encoding of the manifest to be different from the encoding of the token, right? Seems like it has to be that way because there are too many manifest formats and very few have both JSON and CBOR encodings.\r\n\r\n",
          "createdAt": "2022-07-08T17:14:34Z",
          "updatedAt": "2022-07-08T17:14:34Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">We're agreed that it is OK for the encoding of the manifest to be different from the encoding of the token, right? Seems like it has to be that way because there are too many manifest formats and very few have both JSON and CBOR encodings.\r\n\r\nAgreed - seems to be no other way to do it.  The proposed text is now consistent with the SUIT text and can be merged.",
          "createdAt": "2022-07-08T21:36:40Z",
          "updatedAt": "2022-07-08T21:36:40Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 224,
      "id": "PR_kwDOCEWCXc46l9HO",
      "title": "Update commentary on UUID vs UEID",
      "url": "https://github.com/ietf-rats-wg/eat/pull/224",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per minor comment from Eliot.\r\n",
      "createdAt": "2022-06-29T19:35:07Z",
      "updatedAt": "2022-07-07T04:49:38Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "uuid",
      "headRefOid": "465bb4b1fc7fc04ff01d91c775402011777edfda",
      "closedAt": "2022-07-07T04:49:38Z",
      "mergedAt": "2022-07-07T04:49:38Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "874817093b96410eb2bbeed9db583adbac324603"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 225,
      "id": "PR_kwDOCEWCXc46qk5N",
      "title": "The 8th bit in a 7 bit text string doesn't contribute to entropy",
      "url": "https://github.com/ietf-rats-wg/eat/pull/225",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Simple wording rearrangement to be more clear that all 8 bits count in a byte string, but not in a text string.",
      "createdAt": "2022-06-30T20:07:29Z",
      "updatedAt": "2022-07-07T16:38:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "entropy",
      "headRefOid": "e1f995b26bbece2a4d39e66b8a87d210255607ac",
      "closedAt": "2022-07-07T16:38:15Z",
      "mergedAt": "2022-07-07T16:38:15Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8d214a5eae44d547119bd81092ce891d550fdaf8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 226,
      "id": "PR_kwDOCEWCXc46qmKy",
      "title": "Reword encoding exception sentence",
      "url": "https://github.com/ietf-rats-wg/eat/pull/226",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per comment from Eliot",
      "createdAt": "2022-06-30T20:13:13Z",
      "updatedAt": "2022-07-07T16:41:21Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "otherwise",
      "headRefOid": "9f9e4adea1a1107abfb3995870243562e71c2e4e",
      "closedAt": "2022-07-07T16:41:21Z",
      "mergedAt": "2022-07-07T16:41:21Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "f65eb1e2310f14749c117097e727d93af0cb2ae6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 227,
      "id": "PR_kwDOCEWCXc46vyOE",
      "title": "A few small terminology adjustments",
      "url": "https://github.com/ietf-rats-wg/eat/pull/227",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Wording improvements around the term \"entity\" as relates to submods. \r\n\r\nDon't capitalize Composite Device since RATS architecture doesn't.",
      "createdAt": "2022-07-02T22:52:39Z",
      "updatedAt": "2022-07-07T16:40:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c8413e36fdd993a0e75ea73c16f2e0e42e195237",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "target",
      "headRefOid": "5c79816cb5394acc79945fcbf3e081db92e4a31d",
      "closedAt": "2022-07-07T16:40:15Z",
      "mergedAt": "2022-07-07T16:40:15Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b276d438957aef22e57253c5684987485adde311"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 228,
      "id": "PR_kwDOCEWCXc46wi-n",
      "title": "Security-level MUST NOT be used to describe Verifier output",
      "url": "https://github.com/ietf-rats-wg/eat/pull/228",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarify that security-level is to describe the security design intent and nothing more.",
      "createdAt": "2022-07-03T20:01:12Z",
      "updatedAt": "2022-07-09T16:16:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d844f4c8eea54acd239aa436c8244d1d952670c0",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "s-l",
      "headRefOid": "e3a0386af84b9b952b09794e450d3308fea07048",
      "closedAt": "2022-07-09T16:16:35Z",
      "mergedAt": "2022-07-09T16:16:35Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7f1e219f07e21ff5f07c2d97794c461860738ed9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 229,
      "id": "PR_kwDOCEWCXc463QUe",
      "title": "Update definition of sec level 'restricted'",
      "url": "https://github.com/ietf-rats-wg/eat/pull/229",
      "state": "CLOSED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Current reference pointing to FIDO AROE is misleading - AROE is a definition associated with authenticators and is not applicable as a MUST requirement for an entity security level.  Moreover, EAT is not supported in any FIDO authentication standards.",
      "createdAt": "2022-07-05T15:21:06Z",
      "updatedAt": "2022-08-11T17:56:24Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d844f4c8eea54acd239aa436c8244d1d952670c0",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch4",
      "headRefOid": "54045bfa363d5fdd0982653104315d3b40514728",
      "closedAt": "2022-08-11T17:56:24Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Giri,\r\n\r\nAROE is not authentication-specific. Look through sections 3 and 4 of https://fidoalliance.org/specs/fido-security-requirements-v1.0-fd-20170524/fido-authenticator-allowed-restricted-operating-environments-list_20170524.html to confirm.\r\n\r\nIt doesn't matter to the definition of security-level that FIDO won't use EAT.  \r\n\r\nThe change you propose would substantially weaken the definition of security level. A lot of useful and thought and work went into the definition of an ROE and it is helpful to the definition of security-level.\r\n\r\n",
          "createdAt": "2022-07-06T20:07:46Z",
          "updatedAt": "2022-07-06T20:07:46Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "FIDO documents should be interpreted in the FIDO context.  here are two broad categories of FIDO specifications:  authenticator (UAF, U2F, FIDO 2.0) and IoT (FIDO Device Onboard).  The definition of AROE is not applicable to FDO and there is no mention of AROE in the FDO security certification requirements.  Therefore it is narrowly scoped to authenticators.  In fact, it is not applicable at all to FDO devices, which are the only FIDO-compliant devices that produce an EAT attestation.  \r\n\r\nMoreover, the current text only refers to the AROE document Section 4, and this document only specifies AROE's as per Section 3.  This is problematic, as it excludes Secure MCU definition as specified in SESIP - see https://globalplatform.org/wp-content/uploads/2021/06/GP_SESIP_Profile_Secure_MCU_MPU_v0.0.0.7_clean.pdf.  It seems rather strange to point to Sec. 4 of the AROE document but advise the EAT audience to ignore Section 3.  I don't see much benefit in trying to stretch this document beyond what it was intended for - defining a restricted operating environment for authenticators.\r\n\r\nIf you don't like my suggested text, then Section 2 of the SESIP document referenced above could be a better reference.  But the AROE document simply doesn't work.\r\n\r\n>It doesn't matter to the definition of security-level that FIDO won't use EAT.\r\n\r\nThe above statement is inaccurate. FDO does use EAT.  See https://fidoalliance.org/specs/FDO/FIDO-Device-Onboard-PS-v1.1-20220419/FIDO-Device-Onboard-PS-v1.1-20220419.html#device-attestation.  ",
          "createdAt": "2022-07-07T01:19:52Z",
          "updatedAt": "2022-07-07T01:19:52Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Just as a note:\r\n\r\nFDO == FIDO Device Onboard\r\nAROE == Allowed Restricted Operating Environments\r\nSESIP == Security Evaluation Standard for IoT Platforms (from Global Platform, one of their \"Endorsement types\" and I think a current EAT sec-level?)",
          "createdAt": "2022-07-07T06:25:55Z",
          "updatedAt": "2022-07-07T06:25:55Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I've added text that clarifies that only section 4 is referenced. Section 3 does not apply.\r\n\r\nIt's OK to reference only part of some document, right? We do that all the time. For example CDDL references regexp from some other massive document. \r\n\r\nIt doesn't matter to _this definition_ and the EAT standard whether any FIDO protocol uses security level or doesn't use security level, uses EAT or doesn't use EAT. This definition only makes normative reference to section 4 of the AROE document, nothing more.\r\n\r\nI would like this PR merged as is for the next draft publication.\r\n\r\n",
          "createdAt": "2022-07-08T17:29:11Z",
          "updatedAt": "2022-07-08T17:29:11Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">It's OK to reference only part of some document, right? We do that all the time. For example CDDL references regexp from some other massive document.\r\n\r\nI don't think so.  Context matters. The AROE document itself nowhere states that Section 4 is not related to Sections 3 or 2.  In fact, it can't be because the term AROE is never actually defined in Section 4. Even the acronym isn't expanded, so the reader has to refer to Section 3.  And Section 3 is clearly constrained to the table of AROE's that are applicable to FIDO certification.  \r\n\r\n>I've added text that clarifies that only section 4 is referenced. Section 3 does not apply.\r\n\r\nThis change actually is not an improvement versus Draft -013.  In fact, it is a little worse as a reader who only looks at Section 4 won't know what the acronym AROE even stands for, much less what it actually is defined to be.  Section 4 only outlines requirements for the AROE.  I don't see a way for the reader to understand Section 4 in isolation (i.e. without reading the rest of the document).\r\n\r\nThere are better references.  Why are we not using them?  I mentioned the SESIP secure MCU document, which unfortunately is excluded from the AROE document all-together.  Another good reference is https://www.commoncriteriaportal.org/files/ppfiles/anssi-profil_PP-2014_01.pdf.  I think replacing the AROE reference with these two references for Secure MCU and TEE respectively is a vast improvement over the existing text.\r\n\r\nFor instance, Section 4 of the AROE document states \"As a consequence, it MUST NOT be possible for SW or HW on the same device but outside the [AROE](https://fidoalliance.org/specs/fido-security-requirements-v1.0-fd-20170524/fido-authenticator-allowed-restricted-operating-environments-list_20170524.html#dfn-aroe) to modify any state, registers, memory or storage inside the operating environment\".  This is actually an insufficient requirement versus SESIP, which actually covers periph. I/F's such as UART - see Table 2-1 of https://globalplatform.org/wp-content/uploads/2021/06/GP_SESIP_Profile_Secure_MCU_MPU_v0.0.0.7_clean.pdf.",
          "createdAt": "2022-07-09T18:26:19Z",
          "updatedAt": "2022-07-09T19:00:04Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Giri,\r\n\r\nI went a looked over the SESIP Profile. Then I looked at SESIP itself. This is one hundred plus pages of definition between the two documents, and a lot more pages if you follow all the normative references. It is also evaluation program, maybe even a certification program. It seems kind of like a light version of Common Criteria. \r\n\r\nIf this were to appear in an EAT, I think it should be via a DLOA. It's not really in the spirit of the security-level claim, which should not require any 3rd party evaluation and expense. It seems much too large and heavy. \r\n\r\nYou are right about the term \"AROE\" used in section 4. Section 4 doesn't really stand on its own because of the use of \"AROE\". I'm sorry I missed that before.\r\n\r\nHowever, If you take the text in section 4 and replace the term \"AROE\", with \"entity\" it does work. There is no other reference to anything else in FIDO. It stands on its own like many subsections that have been referenced in lots of documents. I tried it to see: https://github.com/laurencelundblade/security-level/blob/master/security-level.md\r\n\r\nIt would be really awkward to say something in EAT like \"must meet the criteria in section 4 where the term 'AROE' is replaced with the term 'entity'.\"\r\n\r\nSo I still think AROE definition suits the purpose, but the wording, the use of the term \"AROE\" kind of messes up the ability to reference it.\r\n\r\nI am still thinking about what we might do... more later today.\r\n\r\n",
          "createdAt": "2022-07-10T18:33:52Z",
          "updatedAt": "2022-07-10T18:33:52Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">If this were to appear in an EAT, I think it should be via a DLOA. It's not really in the spirit of the security-level claim, which should not require any 3rd party evaluation and expense. It seems much too large and heavy.\r\n\r\nI don't see it that way.  DLOA can only be provided when a certification is achieved.  That doesn't mean that the entity cannot satisfy a set of SFR's and map them to a sec level, regardless of whether a DLOA is applicable or not.  The SESIP and TEE PP documents I cited list a set of SFR's that the entity can claim to meet based on the declared sec level.\r\n\r\nThat being said, another possible alternative to the AROE document is NIST 800-164:  https://csrc.nist.gov/publications/detail/sp/800-164/draft.  In this doc, the characteristics of a HW RoT are described and clearly distinguished from a TPM - so in that regards it may be suitable for Restricted level.  That being said, this document is focused on mobile devices so an independent reader may conclude that it is not applicable to IoT.\r\n\r\nThe ETSI cybersec requirements for IoT could however serve the purpose of defining requirements for non-mobile devices (see Sec. 5 of https://www.etsi.org/deliver/etsi_en/303600_303699/303645/02.01.01_60/en_303645v020101p.pdf).  So between the two documents most entities that meet 'restricted' level would be covered.\r\n\r\n\r\n",
          "createdAt": "2022-07-11T15:07:33Z",
          "updatedAt": "2022-07-11T15:07:33Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "security-level is being removed",
          "createdAt": "2022-08-11T17:54:26Z",
          "updatedAt": "2022-08-11T17:54:26Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "security-level is being removed",
          "createdAt": "2022-08-11T17:55:14Z",
          "updatedAt": "2022-08-11T17:55:14Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "security-level is being removed",
          "createdAt": "2022-08-11T17:55:32Z",
          "updatedAt": "2022-08-11T17:55:32Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 230,
      "id": "PR_kwDOCEWCXc47FLT-",
      "title": "Changes From Previous section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/230",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-08T05:35:55Z",
      "updatedAt": "2022-07-08T05:36:38Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "531741c04f529fe8ad05b2b376201307e2243756",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "since-13",
      "headRefOid": "dcf66b657eb69e63e16e3d9bf83a8be2eedf9dba",
      "closedAt": "2022-07-08T05:36:38Z",
      "mergedAt": "2022-07-08T05:36:38Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "004969aa31dde1f2da60f395aa241e242a77eeda"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 231,
      "id": "PR_kwDOCEWCXc47FNO7",
      "title": "Endorsements and Key ID section moves to an Appendix",
      "url": "https://github.com/ietf-rats-wg/eat/pull/231",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-08T05:48:07Z",
      "updatedAt": "2022-07-08T17:01:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "dac7a264f0b7ae5b065d3f8378b35eabd61419b5",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "sec-6",
      "headRefOid": "87c026c14fd302a265b7ba6b5b6642bfeb75dd56",
      "closedAt": "2022-07-08T17:01:15Z",
      "mergedAt": "2022-07-08T17:01:15Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d844f4c8eea54acd239aa436c8244d1d952670c0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 232,
      "id": "PR_kwDOCEWCXc47FajX",
      "title": "Move privacy and security considerations to before IANA section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/232",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-08T07:03:10Z",
      "updatedAt": "2022-07-08T16:58:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "004969aa31dde1f2da60f395aa241e242a77eeda",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "sec-con-order",
      "headRefOid": "01f11a03706a11d0637b4514dee77fcf089c4613",
      "closedAt": "2022-07-08T16:58:23Z",
      "mergedAt": "2022-07-08T16:58:22Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "dac7a264f0b7ae5b065d3f8378b35eabd61419b5"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes #221 ",
          "createdAt": "2022-07-08T07:03:40Z",
          "updatedAt": "2022-07-08T07:03:40Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 234,
      "id": "PR_kwDOCEWCXc47HuWi",
      "title": "Remove byte string restriction from manifests in CBOR tokens",
      "url": "https://github.com/ietf-rats-wg/eat/pull/234",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This text was in conflict with the CDDL for text manifest formats like SPDX and CycloneDX",
      "createdAt": "2022-07-08T17:10:13Z",
      "updatedAt": "2022-07-09T16:15:07Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d844f4c8eea54acd239aa436c8244d1d952670c0",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "mani",
      "headRefOid": "0c9a771baaf803443c627bb1c4599c12809ba010",
      "closedAt": "2022-07-09T16:15:07Z",
      "mergedAt": "2022-07-09T16:15:07Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "6778f3d6094b70dc42bb4f65fb71dc19d86fa7a4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 235,
      "id": "PR_kwDOCEWCXc47JM6w",
      "title": "Catch up the changes from previous draft section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/235",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-09T16:36:08Z",
      "updatedAt": "2022-07-09T16:36:22Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9cfbb2b3c07aadd3833f087ba7f7224b06cb6d30",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "change-since",
      "headRefOid": "b18b88d07441daa34e7f4f251588f6fa9b47192e",
      "closedAt": "2022-07-09T16:36:22Z",
      "mergedAt": "2022-07-09T16:36:22Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "97d6f05187c606bb6cf8231407932ee7edb0576a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 243,
      "id": "PR_kwDOCEWCXc48Q0qh",
      "title": "Upfront RATS architecture reference",
      "url": "https://github.com/ietf-rats-wg/eat/pull/243",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is to say why some of the questions asked by Hilarie Orman are not and will not be addressed in EAT.",
      "createdAt": "2022-07-28T16:20:38Z",
      "updatedAt": "2022-08-16T02:18:20Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "59cf08eee4a0658d1b3356f609e6c798123746cc",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "unfamiliar",
      "headRefOid": "d7b4750dc8f2eecfc4aeea584e92ed9d99c233f0",
      "closedAt": "2022-08-16T02:18:20Z",
      "mergedAt": "2022-08-16T02:18:20Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4d3657c7348df1a50ac87eda2298d36afc43efef"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 244,
      "id": "PR_kwDOCEWCXc48Q4OY",
      "title": "Manifests - clarifications and SUIT reference",
      "url": "https://github.com/ietf-rats-wg/eat/pull/244",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #240",
      "createdAt": "2022-07-28T16:37:04Z",
      "updatedAt": "2022-08-13T19:41:53Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "suit-ref",
      "headRefOid": "154bd8b8d6d4d615f835362235ba32be33c58766",
      "closedAt": "2022-08-13T19:41:53Z",
      "mergedAt": "2022-08-13T19:41:53Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "01dfcc6b601ee47c0cbf2bb4ef64fcf394263b97"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 245,
      "id": "PR_kwDOCEWCXc48Q9qA",
      "title": "Correct socket type for manifests",
      "url": "https://github.com/ietf-rats-wg/eat/pull/245",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-07-28T17:00:04Z",
      "updatedAt": "2022-08-06T17:55:25Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "59cf08eee4a0658d1b3356f609e6c798123746cc",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "manifest-socket",
      "headRefOid": "a91ee2e9d4a527501eded750801e784c3ef1e3cb",
      "closedAt": "2022-08-06T17:55:20Z",
      "mergedAt": "2022-08-06T17:55:20Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "1c80456f75f8fb16fca10f1384c9e9a472a81dc6"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 247,
      "id": "PR_kwDOCEWCXc48c4Qm",
      "title": "Address some of the high-level intro-type comments",
      "url": "https://github.com/ietf-rats-wg/eat/pull/247",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This addresses some of the framing comments from Hilarie and Eliot.",
      "createdAt": "2022-08-01T18:30:07Z",
      "updatedAt": "2022-09-23T22:01:21Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "59cf08eee4a0658d1b3356f609e6c798123746cc",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "meta2",
      "headRefOid": "ed6ae8e4d74b98c8710fe70b78bbff976524c138",
      "closedAt": "2022-09-23T22:01:21Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This is replaced by #303 that focuses just on Appendix C and #279 that focuses just on the abstract and some of the other in-process PRs focused just on the intro sections",
          "createdAt": "2022-09-23T22:01:20Z",
          "updatedAt": "2022-09-23T22:01:20Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 248,
      "id": "PR_kwDOCEWCXc48h6lS",
      "title": "Change some terms to lowercase",
      "url": "https://github.com/ietf-rats-wg/eat/pull/248",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Change these terms to lowercase for readability per comment from Eliot Lear on June 5:\r\n\r\n- Relying Party\r\n- Attester\r\n- Verifier\r\n- Verifier's Policy\r\n- Evidence\r\n- Attestation Results\r\n- Reference Values\r\n- Endorsement\r\n- Endorsement Identification\r\n- Appraisal Policy\r\n- Verification Key Identification\r\n- Policy\r\n\r\nChange Attester Target Environment to attesting environment to align with current architecture document.",
      "createdAt": "2022-08-02T19:32:39Z",
      "updatedAt": "2022-08-08T10:30:58Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f77f558d98a7b0a6a0783e10df1eae55ae70c88c",
      "headRepository": "carl-wallace/eat",
      "headRefName": "caps_change",
      "headRefOid": "c760fef7d41f8c278c0d0333a6a498a084035dc5",
      "closedAt": "2022-08-05T23:43:32Z",
      "mergedAt": "2022-08-05T23:43:32Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "d66d9ec9d9f69195c55af19ee8f497d4cbb21358"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Carl,\r\n\r\nI put some time into this and investigated this a bit with the RFC Editor and the RATS Architecture authors and decided to go with the caps because that seemed the easiest. It is the convention adopted by the RATS WG. It seemed like it would be more trouble to argue against or do different.\r\n\r\nI kind of prefer the non-capitalization now that I see it, but what I prefer the most is less work and timely completion.\r\n\r\nSo, I'm fine with the change, but if the WG comes back and argues to return to capitalization, that is yours to resolve.\r\n\r\n",
          "createdAt": "2022-08-03T17:00:31Z",
          "updatedAt": "2022-08-03T17:00:31Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Works for me. \n\n \n\nFrom: Laurence Lundblade ***@***.***>\nReply-To: ietf-rats-wg/eat ***@***.***>\nDate: Wednesday, August 3, 2022 at 1:00 PM\nTo: ietf-rats-wg/eat ***@***.***>\nCc: Carl Wallace ***@***.***>, Author ***@***.***>\nSubject: Re: [ietf-rats-wg/eat] Change some terms to lowercase (PR #248)\n\n \n\nHi Carl,\n\nI put some time into this and investigated this a bit with the RFC Editor and the RATS Architecture authors and decided to go with the caps because that seemed the easiest. It is the convention adopted by the RATS WG. It seemed like it would be more trouble to argue against or do different.\n\nI kind of prefer the non-capitalization now that I see it, but what I prefer the most is less work and timely completion.\n\nSo, I'm fine with the change, but if the WG comes back and argues to return to capitalization, that is yours to resolve.\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>\n\n",
          "createdAt": "2022-08-03T17:38:34Z",
          "updatedAt": "2022-08-03T17:38:34Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 250,
      "id": "PR_kwDOCEWCXc48tGaS",
      "title": "Detached digest algorithms are from COSE registry",
      "url": "https://github.com/ietf-rats-wg/eat/pull/250",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-08-05T09:22:19Z",
      "updatedAt": "2022-08-06T18:21:02Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "59cf08eee4a0658d1b3356f609e6c798123746cc",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hash-alg",
      "headRefOid": "d1ad775f86337087038be91b51b714d35650793f",
      "closedAt": "2022-08-06T18:21:02Z",
      "mergedAt": "2022-08-06T18:21:02Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "ae1790172ea05c7b9205eb8b46012d8574c32597"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Address #246",
          "createdAt": "2022-08-05T09:22:57Z",
          "updatedAt": "2022-08-05T09:22:57Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "JOSE also has its own registry:  https://www.iana.org/assignments/jose/jose.xhtml#web-signature-encryption-algorithms.  For JWT variants of EAT/DEB do we consider these identifiers instead?",
          "createdAt": "2022-08-05T15:16:48Z",
          "updatedAt": "2022-08-05T15:16:48Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I excluded the JOSE registry intentionally because a) it has no hash functions registered and b) detached digests are not particularly bound to whether the token is JSON or CBOR.",
          "createdAt": "2022-08-05T15:30:00Z",
          "updatedAt": "2022-08-05T15:30:00Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@laurencelundblade \r\n\r\n> excluded the JOSE registry intentionally because a) it has no hash functions registered\r\n\r\nDon't understand the above.  The first 3 entries in the JOSE registry are HMAC algm.'s,.  Or is the assertion that MAC's are never suitable for the DEB digest?  ",
          "createdAt": "2022-08-05T15:51:45Z",
          "updatedAt": "2022-08-05T15:51:45Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, it needs a hash algorithm, not an HMAC.",
          "createdAt": "2022-08-05T18:00:06Z",
          "updatedAt": "2022-08-05T18:00:06Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">Yes, it needs a hash algorithm, not an HMAC.\r\n\r\nIf that is the case, then the text needs to be clarified that only hash algm.'s (and not MAC's) are suitable candidates from the COSE algm. registry.  HMAC's as digests comes up in different places, and an independent reader/implementer may not know the difference.",
          "createdAt": "2022-08-06T01:03:59Z",
          "updatedAt": "2022-08-06T01:03:59Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Satisfied with PR now.  Please merge (unless there are other reviewers).",
          "createdAt": "2022-08-06T18:20:04Z",
          "updatedAt": "2022-08-06T18:20:04Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 252,
      "id": "PR_kwDOCEWCXc48zylS",
      "title": "Eliminate use of DEB as acronym for detached EAT bundle.",
      "url": "https://github.com/ietf-rats-wg/eat/pull/252",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Used DEAT where an abbreviation was necessary (i.e., structure names and the type identifier for JSON-Nested-Token).",
      "createdAt": "2022-08-08T12:09:41Z",
      "updatedAt": "2022-09-26T01:34:50Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "ae1790172ea05c7b9205eb8b46012d8574c32597",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits",
      "headRefOid": "854674e62a5030044b9887e45a52cfae2f3eac14",
      "closedAt": "2022-08-11T18:27:37Z",
      "mergedAt": "2022-08-11T18:27:37Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b3465c70b328e1502042ec44353f168cefc1124b"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we could just use the word \"bundle\" instead of \"DEAT\". I think it works in all the places you used \"DEAT\". ",
          "createdAt": "2022-08-09T18:39:43Z",
          "updatedAt": "2022-08-09T18:39:43Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "That works. I wasn't crazy about DEAT either. Changed. Thanks.",
          "createdAt": "2022-08-09T18:50:43Z",
          "updatedAt": "2022-08-09T18:50:43Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 253,
      "id": "PR_kwDOCEWCXc486B9w",
      "title": "Remove security level claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/253",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Includes removal from all examples.",
      "createdAt": "2022-08-09T18:28:05Z",
      "updatedAt": "2022-08-15T18:53:25Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "n-s-l",
      "headRefOid": "a80ba016efb42d60c68870737198e842a82c365f",
      "closedAt": "2022-08-15T18:53:25Z",
      "mergedAt": "2022-08-15T18:53:25Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "340b6f74b9d07e0bf727f8365ffff8b10bd19903"
      },
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "The Security Level claim registration should probably be removed. Else looks good.",
          "createdAt": "2022-08-12T19:26:52Z",
          "updatedAt": "2022-08-12T19:26:52Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 255,
      "id": "PR_kwDOCEWCXc48-lJ6",
      "title": "eliminate change log for all but most recent draft",
      "url": "https://github.com/ietf-rats-wg/eat/pull/255",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": " (datatracker can provide full history)",
      "createdAt": "2022-08-10T18:21:58Z",
      "updatedAt": "2022-09-26T01:36:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "ae1790172ea05c7b9205eb8b46012d8574c32597",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits2",
      "headRefOid": "df1ba17b8902881d1fc3fa89f8156f3d22ecb64e",
      "closedAt": "2022-08-11T18:28:55Z",
      "mergedAt": "2022-08-11T18:28:55Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 256,
      "id": "PR_kwDOCEWCXc49DDSZ",
      "title": "Some guidance on use of submodules",
      "url": "https://github.com/ietf-rats-wg/eat/pull/256",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-08-11T18:53:37Z",
      "updatedAt": "2022-10-19T17:36:38Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "750542bd9ed6f8c6ed4c06b0e10dbc7939474d63",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "subguide",
      "headRefOid": "9777d3f4c21372ac9b638a08a5a925e546e18f13",
      "closedAt": "2022-10-19T17:36:34Z",
      "mergedAt": "2022-10-19T17:36:34Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4bb1d8730aa8d4a384f0f9b7a8a3c61256728043"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "No, I don't think so. There is no requirement or expectation that claims in evidence will pass through to results. \r\n\r\nFor example, it's OK for there to be a UEID in evidence and none in results. It's even OK for there be a different UEID in results than in evidence perhaps because of a privacy preservation feature in the verifier.\r\n\r\nIt's OK for the submods in evidence to be structured completely different from the submods in results.\r\n\r\nBut one thing that needs to be true is that a claim whether used in results or in evidence aligns with the specification and semantics of its definition. For example, don't put SW Version information in the UEID claim. (duh).\r\n\r\nThe other things is that the verifier must say what their output means. For example, if they include a UEID in results, they should say whether they verified it or not. If they have submods they should say what they are so the RP knows how to process them. ",
          "createdAt": "2022-08-23T17:12:34Z",
          "updatedAt": "2022-08-23T17:12:34Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "\"Likewise, verifier ...\"  -> \"Likewise, a verifier ...\".\r\n\r\nSubmodules do not need to be pass through, but they can be indirectly passed hrough.  For instance, attestation evidence could be for separate submodules \"TEE\" and \"Linux Kernel\", but verifier can group both of these into a submodule  called \"Apps Subsystem\".  Would the following textual refinement cover this:\r\n\r\n\"should define and document the submodules and their associated semantics for the relying party\"",
          "createdAt": "2022-08-23T17:25:01Z",
          "updatedAt": "2022-08-23T17:25:01Z"
        },
        {
          "author": "gkostal",
          "authorAssociation": "NONE",
          "body": "If a profile designer has a set of claims associated with a scenario (e.g. arbitrary \"runtime claims\" for a running trusted execution environment), how should they choose whether to place under a top level claim name (e.g. \"runtime-claims\") or a submod (e.g. named \"runtime-claims\")?  Mechanically, both will work in JWT/CWT, so I'm looking for some guidance in the spec here.",
          "createdAt": "2022-08-23T17:27:37Z",
          "updatedAt": "2022-08-23T17:27:37Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks. The collapsing of TEE and Linux Kernel submodules into an Apps Subsystem submodule example would be a nice addition to the text.",
          "createdAt": "2022-08-23T17:43:16Z",
          "updatedAt": "2022-08-23T17:43:16Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@gkostal How about this?  -- generally submodules should be used to represent true subsystems, not as a claim grouping or classifying facility. A subsystem typically has separate hardware or at least a separate memory space (e.g. a process). (This applies to evidence as well as results).\r\n\r\nI don't think this has to be a hard rule though.\r\n\r\nI'm not sure what \"arbitrary runtime claims\" are and why they would be distinct from any other claims about the TEE. For example, I wouldn't think the TEE has a \"real UEID\" and an \"arbitrary runtime UEID\".\r\n\r\nThe other thing is to think about what the RP needs to know and what they'll do with the claims they get.",
          "createdAt": "2022-08-23T19:42:08Z",
          "updatedAt": "2022-08-23T19:42:08Z"
        },
        {
          "author": "gkostal",
          "authorAssociation": "NONE",
          "body": "> @gkostal How about this? -- generally submodules should be used to represent true subsystems, not as a claim grouping or classifying facility. A subsystem typically has separate hardware or at least a separate memory space (e.g. a process). (This applies to evidence as well as results).\r\n> \r\n> I don't think this has to be a hard rule though.\r\n> \r\n> I'm not sure what \"arbitrary runtime claims\" are and why they would be distinct from any other claims about the TEE. For example, I wouldn't think the TEE has a \"real UEID\" and an \"arbitrary runtime UEID\".\r\n> \r\n> The other thing is to think about what the RP needs to know and what they'll do with the claims they get.\r\n\r\n@laurencelundblade - yes, that certainly helps.  Although \"true subsystems\" still leaves a lot to the interpretation of the reader.  :-)  It's the subsequent text regarding \"not a claim grouping or a classifying facility\" and \"separate hardware/memory\" that helps me distinguish when to use/not-use.  Perhaps EAT guidance on how to handle classification or claim grouping outside of a \"true subsystem\" would be helpful also?\r\n\r\nI agree with the thought \"not a hard rule though\".\r\n\r\n**Regarding \"arbitrary runtime claims\"**, I'm talking about the data that the code running in a TEE can associate with the running TEE -- for example, by recording the hash of this data in the \"reportdata\" field in either the Intel SGX report or the AMD SEV-SNP report.  In the Azure Attestation Service, we support a model where this arbitrary data can be structured as a JSON object with the resultant JWT produced by the service containing this JSON object intact as the value of a top level claim named \"x-ms-runtime\".  We've spent many hours discussing whether this JSON object should be placed as a value in a top level claim or placed as a value of a named submod.  \r\n\r\nA common use for runtime claims is to share a public key value for an asymmetric key that's created & managed within the TEE that can be used to establish a secure communication channel with the TEE.\r\n\r\nSee the section on TEE runtime claims in this slide deck for more details on what I called \"arbitrary runtime claims\":\r\n* https://github.com/CCC-Attestation/meetings/blob/main/materials/GregKostal_EAT_in_MAA.pdf",
          "createdAt": "2022-08-23T23:16:59Z",
          "updatedAt": "2022-08-23T23:16:59Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I like Laurence's _\"[...] generally submodules should be used to represent true subsystems, not as a claim grouping or classifying facility.\"_, I think that's the level of guidance we need.\r\n\r\nHowever, I'd strengthen it a bit more like this: _\"Submodules should not be used as a claim grouping or classifying facility.  Instead, they should be used to represent true subsystems (e.g., `INSERT_HERE_TRUE_SUBSYSTEMS_EXAMPLES`).\"_\r\n\r\nBesides, the requirements on profile designers to document the semantics of their submodules should be stated more strongly, i.e., using RFC2119 words.\r\n",
          "createdAt": "2022-08-24T08:09:12Z",
          "updatedAt": "2022-08-24T08:09:12Z"
        },
        {
          "author": "gkostal",
          "authorAssociation": "NONE",
          "body": "If the spec states _\"Submodules should not be used as a claim grouping or classifying facility\"_ then it certainly (IMO) should state how claim grouping and classifying should be handled.",
          "createdAt": "2022-08-24T12:21:49Z",
          "updatedAt": "2022-08-24T12:21:49Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> If the spec states _\"Submodules should not be used as a claim grouping or classifying facility\"_ then it certainly (IMO) should state how claim grouping and classifying should be handled.\r\n\r\nMaybe: _\"To that purpose, it is RECOMMENDED to define a claim with a value of type map that includes all the attributes that need to be grouped together.\"_\r\n\r\n",
          "createdAt": "2022-08-24T13:06:12Z",
          "updatedAt": "2022-08-24T13:06:12Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Agreed on some better language around submods. Will work on that.\r\n\r\nFollowing is some more off-the-top-of-my-head description of a \"grouping claim\".  Other ideas? There's nothing in EAT to stop anyone from defining one of these now. I'm not sure we want to put this text in EAT now because of the high pressure to get EAT done soon and because it might be a bigger can of worms that we think.\r\n\r\nA \"grouping claim\" is a claim with a defined label that is of type map. Its content is other claims. Its purpose is to group some claims together that are related. It can contain any claim including another grouping claim. It cannot contain a submods section.\r\n\r\nNo \"grouping claims\" are defined in this document. They can be defined in other documents, profiles, proprietary uses of EAT and such.\r\n\r\nWhen they are defined, the semantics associated with them should be defined. They should say what the criteria for being in the group is. This criteria may be strict or lax.\r\n\r\nWhen decoding an EAT and encountering an unknown grouping claim, the decoder should ignore it just like any unknown claim. This will result in all the claims in the grouping claim being ignored. (There is no means to mark a grouping claim as such to allow traversal of it).\r\n\r\n",
          "createdAt": "2022-08-24T18:06:06Z",
          "updatedAt": "2022-08-24T18:06:51Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Agreed on some better language around submods. Will work on that.\r\n> \r\n> Following is some more off-the-top-of-my-head description of a \"grouping claim\". Other ideas? There's nothing in EAT to stop anyone from defining one of these now. I'm not sure we want to put this text in EAT now because of the high pressure to get EAT done soon and because it might be a bigger can of worms that we think.\r\n\r\n+1\r\n\r\nI also think the idea of grouping claims is an important one, but we don't need to articulate it fully in this version of the EAT spec.  As long as there is some short but clear guidance along the lines that we have already discussed I am more than OK.\r\n\r\n> A \"grouping claim\" is a claim with a defined label that is of type map. Its content is other claims. Its purpose is to group some claims together that are related. It can contain any claim including another grouping claim.\r\n\r\nNote that limiting to maps may be unnecessarily restrictive: array is also an option (see [PSA SW components](https://thomas-fossati.github.io/draft-psa-token/draft-tschofenig-rats-psa-token.html#section-4.4.1)).\r\n\r\n> It cannot contain a submods section.\r\n\r\nI am not sure why? (we can discuss this and the rest of the points below in the context of a different draft.)\r\n",
          "createdAt": "2022-08-25T11:43:17Z",
          "updatedAt": "2022-08-25T11:43:17Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think the current PR is ready to merge. This is just comments on the future groups work.\r\n\r\n\r\nIf you allow arrays, then the elements in side the array can't be claims because they don't have claims labels/keys/ids.  Individual claims like PSA SW components can be arrays, but they are an individual claim, not a group of claims.\r\n\r\nWe don't allow more than one submod section now. Groups shouldn't change that. I also think that submods in groups would also complicate the decoder implementation a lot.\r\n\r\n",
          "createdAt": "2022-10-18T17:14:12Z",
          "updatedAt": "2022-10-18T17:14:12Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Ago-v",
          "commit": {
            "abbreviatedOid": "8fc80db"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Is it worth adding a MUST or SHOULD that labels in results should match those in evidence?",
          "createdAt": "2022-08-23T14:35:48Z",
          "updatedAt": "2022-08-23T14:35:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 257,
      "id": "PR_kwDOCEWCXc49Fvot",
      "title": "various edits",
      "url": "https://github.com/ietf-rats-wg/eat/pull/257",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Expanded abstract and intro to introduce profile concept earlier per comments from Eliot Lear and using some language from Thomas Fossati.\r\n- Expand some acronyms on first use throughout.\r\n- General word smithing throughout (mostly for brevity).\r\n- Eliminated \"CWT, JWT and Detached EAT Bundle\" section and merged into the \"Top-Level Token Definition\" section to reduce duplication.\r\n- In section 4, added reference to $$Claims-Set-Claims socket to the front matter before discussion of claims.\r\n- In section 4.1, changed 2119 language to require freshness (but not require a nonce claim in every EAT).\r\n- In section 4.2.1, dropped discussion of UEID values that are larger than CDDL permits.\r\n- In section 4.2.3, moved CDDL to front of section instead of in section for third option.\r\n- Modified description of PENs.\r\n- Changed \"The Measurement Results Claim\" title to \"The Measurement Comparison Results Claim\".\r\n- Changed \"Claim Characteristics\" section title to \"Design Guidance for Defining New EAT Claims\". Changed some must/should language to MUST/SHOULD.\r\n- Shortened the submodules section.\r\n- Deleted duplicate \"Submodules for Board and Device\" and \"EAT Produced by Attestation Hardware Block\" examples. Deleted \"Key / Key Store Attestation\" example that was duplicate of \"Simple TEE Attestation\" example.\r\n- Changed label in measurement results claim registration to match \"measres\" label used in prose.\r\n- Added additional editor.",
      "createdAt": "2022-08-12T12:52:22Z",
      "updatedAt": "2022-09-26T01:37:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits3",
      "headRefOid": "616351d545cb6bf72d53b3c6f9359c6ac7bb9cd8",
      "closedAt": "2022-08-12T19:33:34Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 258,
      "id": "PR_kwDOCEWCXc49HUVw",
      "title": "remove duplicate examples",
      "url": "https://github.com/ietf-rats-wg/eat/pull/258",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-08-12T19:39:12Z",
      "updatedAt": "2022-09-26T01:38:07Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits4",
      "headRefOid": "22ce234cbf96caa68071c59e731202f08044119d",
      "closedAt": "2022-08-22T18:22:42Z",
      "mergedAt": "2022-08-22T18:22:42Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "1cbe6377b601f40fbd269ba3e48b0a912cbe2881"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 259,
      "id": "PR_kwDOCEWCXc49HWpK",
      "title": "Edits to abstract and first three sections",
      "url": "https://github.com/ietf-rats-wg/eat/pull/259",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Expanded abstract and intro to introduce profile concept earlier per comments from Eliot Lear and using some language from Thomas Fossati.\r\n- Expand some acronyms on first use.\r\n- Eliminated \"CWT, JWT and Detached EAT Bundle\" section and merged into the \"Top-Level Token Definition\" section to reduce duplication.\r\n- General word smithing in first three sections (mostly for brevity).\r\n- Added additional editor.",
      "createdAt": "2022-08-12T19:54:10Z",
      "updatedAt": "2022-09-26T01:38:26Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits5",
      "headRefOid": "6765a553df8fcd0d91f5e1d88f07bed2f0a181da",
      "closedAt": "2022-08-31T18:26:21Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 260,
      "id": "PR_kwDOCEWCXc49HYMa",
      "title": "Edits to The Claims section (except for submodules, which will be a separate PR)",
      "url": "https://github.com/ietf-rats-wg/eat/pull/260",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- In section 4, added reference to $$Claims-Set-Claims socket to the front matter before discussion of claims.\r\n- In section 4.1, changed 2119 language to require freshness (but not require a nonce claim in every EAT).\r\n- In section 4.2.1, dropped discussion of UEID values that are larger than CDDL permits.\r\n- In section 4.2.3, moved CDDL to front of section instead of in section for third option.\r\n- Modified description of PENs.\r\n- Changed \"The Measurement Results Claim\" title to \"The Measurement Comparison Results Claim\".\r\n- Changing some wording in the \"The Software Manifests Claim\" to better align with the CDDL (i.e., JSON is always base64 encoded, not just when non-text content is present)\r\n- General word smithing (mostly for brevity)",
      "createdAt": "2022-08-12T20:04:21Z",
      "updatedAt": "2022-10-24T17:52:53Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits6",
      "headRefOid": "396e3b863d8866e7ed78e4eddcbd5f96cc5ffbc1",
      "closedAt": "2022-08-31T18:30:26Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 261,
      "id": "PR_kwDOCEWCXc49HYrj",
      "title": "shortened the submodule section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/261",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-08-12T20:07:25Z",
      "updatedAt": "2022-10-24T17:48:52Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "e708c8cb436d2944da020b07dce9a6cb63ed0838",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits7",
      "headRefOid": "b2b19cfd0ee9fa83ee25cc9db04094082511d292",
      "closedAt": "2022-10-20T19:01:26Z",
      "mergedAt": "2022-10-20T19:01:26Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "6c2b2d578e5869a29013b1bbf73d6c660ee853c3"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5ADYM0",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "This section needed a re write. That was always in the back of my mind, particularly the too-deep section nesting.  It probably took a fair bit of work to do it. It took me a few hours to review it.\r\n\r\nI generally like a lot of it, but I think too much was cut in some places. Particularly the explicit definition of the format, the dropping of the CDDL and the dropping of prohibition against inheritance.",
          "createdAt": "2022-08-16T18:56:41Z",
          "updatedAt": "2022-08-17T19:33:01Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "I have intentionally avoided calling \"submods\" a claim, because it really isn't. I used \"submodule section\" instead. That is used through out the document, so if it is changed, the whole document has to be scrubbed for the change.",
              "createdAt": "2022-08-16T18:58:22Z",
              "updatedAt": "2022-08-17T19:33:01Z"
            },
            {
              "originalPosition": 41,
              "body": "Spent 15 minutes researching the difference between \"\\*\" and \"-\" and concluded it is only personal preference.  I'd like to keep it \"*\" since that is used by the rest of the document and it should be consistent.",
              "createdAt": "2022-08-16T19:01:24Z",
              "updatedAt": "2022-08-17T19:33:01Z"
            },
            {
              "originalPosition": 105,
              "body": "JSON format -> JSON-encoded\r\ntyoes->types",
              "createdAt": "2022-08-16T19:09:34Z",
              "updatedAt": "2022-08-17T19:33:01Z"
            },
            {
              "originalPosition": 111,
              "body": "The only way it can be other than \"JWT\", \"BUNDLE\" or \"CBOR\" is through a new IETF standard, so I think MUST is needed here, not SHOULD. Really don't want people improvising here.",
              "createdAt": "2022-08-16T19:12:06Z",
              "updatedAt": "2022-08-17T19:33:01Z"
            },
            {
              "originalPosition": 216,
              "body": "This rule seems critical to me. If it's not there each and every claim needs to describe inheritance and/or profiles need to address inheritance. The rules could get very messy.\r\n\r\nThis change would also be a divergence from definition of submods accepted for pre-allocation.",
              "createdAt": "2022-08-16T19:24:35Z",
              "updatedAt": "2022-08-17T19:33:01Z"
            },
            {
              "originalPosition": 26,
              "body": "subodules -> submodules",
              "createdAt": "2022-08-16T19:27:15Z",
              "updatedAt": "2022-08-17T19:33:01Z"
            },
            {
              "originalPosition": 172,
              "body": "eat->EAT",
              "createdAt": "2022-08-16T19:28:49Z",
              "updatedAt": "2022-08-17T19:33:01Z"
            },
            {
              "originalPosition": 13,
              "body": "The submods section is for both JSON and CBOR. JSON has objects, not maps, which is why I always used \"map/object\"",
              "createdAt": "2022-08-17T17:19:07Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 13,
              "body": "EAT, CWT and COSE always use the term \"label\" rather than \"key\" to avoid confusion with cryptographic keys.",
              "createdAt": "2022-08-17T17:19:45Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 13,
              "body": "I think it is necessary to say that the map/object label names the submodule.\r\n\r\nIf you want to discus uniqueness, then it must be \"MUST\" because CBOR requires it.",
              "createdAt": "2022-08-17T17:25:50Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 30,
              "body": "My text referred to 3 \"types\" of submodules. Your text mixes \"mechanism\" and \"option\" and \"type\".  I still prefer \"type\".",
              "createdAt": "2022-08-17T17:36:59Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 40,
              "body": "nested token -> Nested-Token",
              "createdAt": "2022-08-17T17:38:39Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 102,
              "body": "CBOR-formatted -> CBOR-encoded. \r\n\r\nThe document is not completely consistent yet, but CBOR-encoded and JSON-encoded are preferred and most widely used.",
              "createdAt": "2022-08-17T17:40:56Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 164,
              "body": "I'd like to move this text to one of the examples of it in the examples section.",
              "createdAt": "2022-08-17T17:44:50Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 95,
              "body": "Do you really mean to leave the CDDL out? That seems wrong and inconsistent to me. Throughout the document the prose describing the CDDL is always adjacent to the the CDDL and in no place is there any CDDL that just occurs in the collected CDDL section.",
              "createdAt": "2022-08-17T17:49:49Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 102,
              "body": "A major comment from Hannes was that the document should use language like \"A xxxx MUST be encoded as a YYY\" -- explicit definition of the structures and encodings.  The submods section was improved to be more like that from his comment a few versions ago. I think that still needs to be here.\r\n\r\nThis text jumps right into some details of decoding without ever defining the encoding format and without even having the CDDL for what is encoded nearby. \r\n\r\n",
              "createdAt": "2022-08-17T17:57:21Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            },
            {
              "originalPosition": 188,
              "body": "This is missing the formatting for hash input for JSON-encoded tokens, but that was missing from before.\r\n\r\nWe can probably get away with not having the hash cover the hash algorithm because the whole token is signed.",
              "createdAt": "2022-08-17T19:29:38Z",
              "updatedAt": "2022-08-17T19:33:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKFbG",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:23:59Z",
          "updatedAt": "2022-08-17T20:23:59Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "The editing tool I used made this change. I did not noticed until reading the diff, and wasn't concerned either way re: the bullet appearance (both are fine to my eye).",
              "createdAt": "2022-08-17T20:23:59Z",
              "updatedAt": "2022-08-17T20:23:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKGzi",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:29:10Z",
          "updatedAt": "2022-08-17T20:29:10Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "Fixed",
              "createdAt": "2022-08-17T20:29:10Z",
              "updatedAt": "2022-08-17T20:29:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKIBC",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:33:49Z",
          "updatedAt": "2022-08-17T20:33:50Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Fixed here, but the change log will need to be fixed as well (only a few bullets were in this PR, might as well fix all in one shot later).",
              "createdAt": "2022-08-17T20:33:50Z",
              "updatedAt": "2022-08-17T20:33:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKIOx",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:34:37Z",
          "updatedAt": "2022-08-17T20:34:38Z",
          "comments": [
            {
              "originalPosition": 111,
              "body": "Fixed",
              "createdAt": "2022-08-17T20:34:37Z",
              "updatedAt": "2022-08-17T20:34:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKIwm",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:36:40Z",
          "updatedAt": "2022-08-17T20:36:40Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "Fixed",
              "createdAt": "2022-08-17T20:36:40Z",
              "updatedAt": "2022-08-17T20:36:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKJf9",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:39:57Z",
          "updatedAt": "2022-08-17T20:39:58Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "I will re-review the changes with this in mind. I was reducing prose where the CDDL provides the equivalent. This stems partly from my being steeped in ASN.1 where you pretty much never see \"xxxx MUST be encoded as a SEQUENCE\", for example.",
              "createdAt": "2022-08-17T20:39:58Z",
              "updatedAt": "2022-08-17T20:39:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKLvy",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:48:31Z",
          "updatedAt": "2022-08-17T20:48:32Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "No, I had intended to move the CDDL to the front matter of the section (as I did in section 4.2.3 in #260). Restored (and moved) CDDL. I'd still like to harmonize the CDDL so there's not a split between CBOR and JSON (but as we discussed, that may not be doable).",
              "createdAt": "2022-08-17T20:48:32Z",
              "updatedAt": "2022-08-17T20:48:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKM_m",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:53:20Z",
          "updatedAt": "2022-08-17T20:53:20Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Setting aside the map/object issue noted above, the current text observes that the label identifies the submodule and requires uniqueness.\r\n\r\n```\r\n   The submodule claim is defined as a map, where the map key identifies\r\n   the submodule.  The label for each submodule SHOULD be unique.\r\n   Sibling submodules MUST NOT have the same label.\r\n```",
              "createdAt": "2022-08-17T20:53:20Z",
              "updatedAt": "2022-08-17T20:53:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKNNz",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T20:54:13Z",
          "updatedAt": "2022-08-17T20:54:14Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "fixed",
              "createdAt": "2022-08-17T20:54:13Z",
              "updatedAt": "2022-08-17T20:54:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKO3q",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T21:00:51Z",
          "updatedAt": "2022-08-17T21:00:51Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Changed mechanism to type in this spot, changed from option to type in five spots and added type in one spot. There was a use of mechanism that I left unchanged from older text. I used option was used owing to fact that this is a choice, but type is fine.",
              "createdAt": "2022-08-17T21:00:51Z",
              "updatedAt": "2022-08-17T21:00:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AKPLs",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-17T21:02:07Z",
          "updatedAt": "2022-08-17T21:02:07Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "fixed",
              "createdAt": "2022-08-17T21:02:07Z",
              "updatedAt": "2022-08-17T21:02:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AgBrr",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-23T13:05:31Z",
          "updatedAt": "2022-08-23T13:05:31Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Changed to no longer refer to submodule as a claim.",
              "createdAt": "2022-08-23T13:05:31Z",
              "updatedAt": "2022-08-23T13:05:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AgDEV",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-23T13:09:02Z",
          "updatedAt": "2022-08-23T13:09:02Z",
          "comments": [
            {
              "originalPosition": 216,
              "body": "The intro text for the submodules section states \"However, submodules do not inherit anything from the containing token and must explicitly include all claims.\" There is also restatement of this in the debug status section.",
              "createdAt": "2022-08-23T13:09:02Z",
              "updatedAt": "2022-08-23T13:09:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5AgHii",
          "commit": {
            "abbreviatedOid": "3f9ce14"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-23T13:20:06Z",
          "updatedAt": "2022-08-23T13:20:06Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "Fixed",
              "createdAt": "2022-08-23T13:20:06Z",
              "updatedAt": "2022-08-23T13:20:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5DvFc7",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Generally think the reorganization and shortening is very helpful. Thanks!\r\n\r\nStill a few things to fix.\r\n\r\nProbably should do a merge from master to make sure everything is caught that changed since this PR was started.\r\n\r\nThere's also the PR about use in attestation results. It's not quite done, but it's close and needs to fit in here.\r\n\r\nThanks for all the work on this!",
          "createdAt": "2022-10-10T18:48:08Z",
          "updatedAt": "2022-10-10T19:41:43Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "key->label\r\n\r\nEAT follows COSE's lead in avoiding confusion with crypto key.",
              "createdAt": "2022-10-10T18:48:08Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 9,
              "body": "As some point I moved to having every sentence on a separate line so that diffs are easy to look at. I still think it is a good idea. I edit in vi or emacs.",
              "createdAt": "2022-10-10T18:51:57Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 13,
              "body": "I think you mean to say that the submodules section is a map, not that a submodule is a map.\r\n\r\nI would just remove the stuff about uniqueness. The CBOR map rules cover it and I think it is OK to have submodules with the same label if qualified by the submodule nesting names. (I know there was some text about uniqueness before)",
              "createdAt": "2022-10-10T18:53:58Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 106,
              "body": "This is missing the case where the nested token is JSON which is identified by the type being a text string.",
              "createdAt": "2022-10-10T18:57:32Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 157,
              "body": "Maybe add (e.g., All submodule Claims-Sets in a CBOR-encoded token must be CBOR-encoded)?",
              "createdAt": "2022-10-10T19:00:59Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 172,
              "body": "Paragraph break before \"Inclusion...\"?",
              "createdAt": "2022-10-10T19:02:16Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 189,
              "body": "\"similar to submodule Claims-Set\"   \r\n\r\nto be consistent with the term \"submodule Claims-Set\"",
              "createdAt": "2022-10-10T19:05:06Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 206,
              "body": "Replace with \"Detached Claims-Sets must not be modified in transit. If they are the digest won't validate them.\" ?\r\n\r\nOr delete?\r\n\r\nThe existing text sounds to much like the protocol conveying them must provide integrity protection and has thus confused some readers.",
              "createdAt": "2022-10-10T19:09:41Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 164,
              "body": "Still want to move it to one of the examples.",
              "createdAt": "2022-10-10T19:12:34Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 189,
              "body": "There was a change in -15 that changed the definition of the digest input that needs to be incorporated here.",
              "createdAt": "2022-10-10T19:16:37Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 184,
              "body": "I wonder about re ordering so that detached comes after submodule claims-set.  Both use the same attesting environment as the surrounding token. I think that is an important point (that the previous text didn't make either). It will be easier to make this point with the re ordering.",
              "createdAt": "2022-10-10T19:20:33Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 115,
              "body": "If you ask Carsten a CBOR tag is the combination of the tag number and the tag content. I thus never use the word \"tagged\" and say that the thing \"is a tag\". See my original text.\r\n\r\nVery confusing use of the word \"tag\" IMO.",
              "createdAt": "2022-10-10T19:24:47Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            },
            {
              "originalPosition": 115,
              "body": "Some clarity is lost here too.",
              "createdAt": "2022-10-10T19:37:40Z",
              "updatedAt": "2022-10-10T19:41:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4caq",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T10:51:52Z",
          "updatedAt": "2022-10-12T10:51:53Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Fixed here. Similar change may be worth making to Claim Key definition in section 2.",
              "createdAt": "2022-10-12T10:51:52Z",
              "updatedAt": "2022-10-12T10:51:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4dWt",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T10:55:03Z",
          "updatedAt": "2022-10-12T10:55:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "OK. I will assume this is a suggestion for future contributions and not a request for a blanket change (as most of the document does not follow this). I prefer to diff generated text docs to make it easier to view changes in context, so this would have little impact on my habits.",
              "createdAt": "2022-10-12T10:55:03Z",
              "updatedAt": "2022-10-12T10:55:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4eMa",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T10:57:54Z",
          "updatedAt": "2022-10-12T10:57:54Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Qualified as \"a submodule claim\" and removed the sentences with SHOULD and MUST NOT.",
              "createdAt": "2022-10-12T10:57:54Z",
              "updatedAt": "2022-10-12T10:57:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4gVB",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:04:59Z",
          "updatedAt": "2022-10-12T11:05:00Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "It's there, just not in this sentence. Nested-Token is covered in more detail lower in this section.",
              "createdAt": "2022-10-12T11:05:00Z",
              "updatedAt": "2022-10-12T11:05:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4gtq",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:06:22Z",
          "updatedAt": "2022-10-12T11:06:22Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "Added.",
              "createdAt": "2022-10-12T11:06:22Z",
              "updatedAt": "2022-10-12T11:06:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4hC-",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:07:16Z",
          "updatedAt": "2022-10-12T11:07:16Z",
          "comments": [
            {
              "originalPosition": 172,
              "body": "Added",
              "createdAt": "2022-10-12T11:07:16Z",
              "updatedAt": "2022-10-12T11:07:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4hRB",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:07:58Z",
          "updatedAt": "2022-10-12T11:07:58Z",
          "comments": [
            {
              "originalPosition": 189,
              "body": "Changed",
              "createdAt": "2022-10-12T11:07:58Z",
              "updatedAt": "2022-10-12T11:07:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4ioL",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:12:40Z",
          "updatedAt": "2022-10-12T11:12:40Z",
          "comments": [
            {
              "originalPosition": 206,
              "body": "Changed the sentence beginning with \"Note that since\" per your suggestion.",
              "createdAt": "2022-10-12T11:12:40Z",
              "updatedAt": "2022-10-12T11:12:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4l0V",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:23:33Z",
          "updatedAt": "2022-10-12T11:23:34Z",
          "comments": [
            {
              "originalPosition": 189,
              "body": "Replaced the last sentence with \"The input to the digest algorithm is directly the CBOR or JSON-form of the Claims-Set for the submodule. There is no byte-string wrapping or base 64 encoding.\" as in -15.",
              "createdAt": "2022-10-12T11:23:33Z",
              "updatedAt": "2022-10-12T11:23:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4nh5",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:28:17Z",
          "updatedAt": "2022-10-12T11:28:18Z",
          "comments": [
            {
              "originalPosition": 184,
              "body": "Nested-Token was moved to come after Detached Submodule Digest and re-ordered the bullets and CDDL in the front part of the section. Added a sentence re: attesting environment to the front part as well.",
              "createdAt": "2022-10-12T11:28:18Z",
              "updatedAt": "2022-10-12T11:28:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4qzG",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:39:27Z",
          "updatedAt": "2022-10-12T11:39:27Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "You lost me on this one. There are quite a few *types* that feature the word tagged. The term \"CBOR tag\" appears in several places in prior versions including in a section title. The text here bears much in common with the language in 4.2.19.1.2.1 to my eye and section 4.2.19.1.2.2 features the phrase \"is a tag\". \r\n\r\nTags play a central role in CBOR encodings in this spec. I don't see any way to avoid the term or reason to avoid the term (yet, at least). I made no change pending further clarification.",
              "createdAt": "2022-10-12T11:39:27Z",
              "updatedAt": "2022-10-12T11:39:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5D4rBb",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-12T11:40:14Z",
          "updatedAt": "2022-10-12T11:40:14Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "No change here either pending better understanding of the potential issue with the terms \"tag\", \"tagged\", etc.",
              "createdAt": "2022-10-12T11:40:14Z",
              "updatedAt": "2022-10-12T11:40:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECfqX",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T21:02:08Z",
          "updatedAt": "2022-10-13T21:02:08Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "\"Claim Key\" comes from CWT. See #327 ",
              "createdAt": "2022-10-13T21:02:08Z",
              "updatedAt": "2022-10-13T21:02:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EChDj",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T21:06:43Z",
          "updatedAt": "2022-10-13T21:06:44Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I think it would be good for the new text you are bringing in for submods.\r\n\r\nProbably half the document is one line per sentence now.  RATS Architecture is about 50/50 too.",
              "createdAt": "2022-10-13T21:06:44Z",
              "updatedAt": "2022-10-13T21:06:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECpFh",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T21:39:46Z",
          "updatedAt": "2022-10-13T21:39:46Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Let me try again. A CBOR \"tag\" is NOT the tag number. It is the tag number AND the tag content. That's like saying a tag is not an indicator/label/identifier you put on a box but is instead the indicator plus the box. This is a very weird use of the term, but it is what it is.\r\n\r\nIt took me a long time to get clear on this especially as some published RFCs don't use the word this way and misled me. RFC 7949 and early drafts of 8949 where unclear and even wrong.\r\n\r\nTo me this makes use of the word \"tagging\" and \"tagged\" undesirable to me (even though section 3.4 in RFC 8949 uses them). I have been trying to write that something \"is a tag\" rather than something \"is tagged\". \r\n\r\n\r\n ",
              "createdAt": "2022-10-13T21:39:46Z",
              "updatedAt": "2022-10-13T21:39:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECphe",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T21:40:40Z",
          "updatedAt": "2022-10-13T21:40:40Z",
          "comments": [
            {
              "originalPosition": 189,
              "body": "\"CBOR or JSON-encoded\" not \"form\"",
              "createdAt": "2022-10-13T21:40:40Z",
              "updatedAt": "2022-10-13T21:40:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECskr",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T21:54:21Z",
          "updatedAt": "2022-10-13T21:54:21Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "The identification in a CBOR-encoded token is:  map ---> Claims-Set;   array ---> Detached-Submodule-Digest;    bstr ---> byte string wrapped CBOR tag;    tstr ----> JSON-encoded JSON-Nested-Token.   Both bstr and tstr indicate a Nest-Token.  I don't think the text portrays all that.\r\n",
              "createdAt": "2022-10-13T21:54:21Z",
              "updatedAt": "2022-10-13T21:54:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECt9l",
          "commit": {
            "abbreviatedOid": "bbed1d4"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Still need the merge from master.\r\n\r\nStill need integration of #256 ",
          "createdAt": "2022-10-13T22:01:19Z",
          "updatedAt": "2022-10-13T22:15:16Z",
          "comments": [
            {
              "originalPosition": 199,
              "body": "I kind think it should be \"separately-conveyed\" with the hyphen, but my grammar checker disagrees.  Either way is fine for me.",
              "createdAt": "2022-10-13T22:01:19Z",
              "updatedAt": "2022-10-13T22:15:16Z"
            },
            {
              "originalPosition": 109,
              "body": "Maybe go more parallel to CBOR:\r\n\r\nWhen decoding a JSON-encoded EAT submodule, the Claims-Set type is encoded in a map and all the other types an array. The first member of the array gives further info. If it is an algorithm identifier it is a detached digest. If it is \"JWT\", \"CBOR\" or \"BUNDLE\", it is a Nested-Token in the indicated form.",
              "createdAt": "2022-10-13T22:06:00Z",
              "updatedAt": "2022-10-13T22:15:16Z"
            },
            {
              "originalPosition": 152,
              "body": "Maybe remove this and let this section just be about encoding / decoding. Let the following sections handle this.",
              "createdAt": "2022-10-13T22:07:04Z",
              "updatedAt": "2022-10-13T22:15:16Z"
            },
            {
              "originalPosition": 13,
              "body": "\"The submodule claim is defined as a map containing submodules where the map labels name the submodules\" (or similar).  \"map\" occurs twice in that sentence, but two uses are not for the same map.",
              "createdAt": "2022-10-13T22:11:36Z",
              "updatedAt": "2022-10-13T22:15:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECwmv",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T22:15:22Z",
          "updatedAt": "2022-10-13T22:15:22Z",
          "comments": [
            {
              "originalPosition": 189,
              "body": "fixed",
              "createdAt": "2022-10-13T22:15:22Z",
              "updatedAt": "2022-10-13T22:15:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECxLX",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T22:18:46Z",
          "updatedAt": "2022-10-13T22:18:46Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "That helped. Thanks. I changed \"CBOR EATs MUST be tagged\" to \"CBOR EATs MUST be a tag\". I think that gets at the point.",
              "createdAt": "2022-10-13T22:18:46Z",
              "updatedAt": "2022-10-13T22:18:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECx0W",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T22:22:31Z",
          "updatedAt": "2022-10-13T22:22:31Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I will adopt this practice for new text as edits are made.",
              "createdAt": "2022-10-13T22:22:31Z",
              "updatedAt": "2022-10-13T22:22:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECzhO",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T22:31:53Z",
          "updatedAt": "2022-10-13T22:31:53Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Got it. This is one of the cases where I let the CDDL do the talking but I have pulled some slightly modified language back from -16 to stress the point in the prose.\r\n\r\n```\r\nWhen decoding a Nested-Token, if a byte string is encountered, the nested token is a CBOR-encoded token.  The byte string wrapping is removed and the type of the token is determined by the CBOR tag. If a text string is encountered, the nested token is a JSON-encoded token and the two-item array is decoded to determine the type of the JSON-encoded token. Nested CBOR EATs MUST be a tag, i.e., a CBOR tag will be used to distinguish between CWT or BUNDLE. Nested JSON EATs will be encoded as an JSON-Nested-Token, with the type indicated in the type field, i.e., first element in the array. \r\n```",
              "createdAt": "2022-10-13T22:31:53Z",
              "updatedAt": "2022-10-13T22:31:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ECzt1",
          "commit": {
            "abbreviatedOid": "bbed1d4"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T22:33:01Z",
          "updatedAt": "2022-10-13T22:33:02Z",
          "comments": [
            {
              "originalPosition": 199,
              "body": "Changed",
              "createdAt": "2022-10-13T22:33:01Z",
              "updatedAt": "2022-10-13T22:33:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EC0NW",
          "commit": {
            "abbreviatedOid": "bbed1d4"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T22:36:21Z",
          "updatedAt": "2022-10-13T22:36:21Z",
          "comments": [
            {
              "originalPosition": 109,
              "body": "Changed to the provided text (one sentence per line).",
              "createdAt": "2022-10-13T22:36:21Z",
              "updatedAt": "2022-10-13T22:36:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EC0S-",
          "commit": {
            "abbreviatedOid": "bbed1d4"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T22:36:57Z",
          "updatedAt": "2022-10-13T22:36:57Z",
          "comments": [
            {
              "originalPosition": 152,
              "body": "Removed.",
              "createdAt": "2022-10-13T22:36:57Z",
              "updatedAt": "2022-10-13T22:36:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EC3Lk",
          "commit": {
            "abbreviatedOid": "bbed1d4"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-13T22:55:53Z",
          "updatedAt": "2022-10-13T22:55:53Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Is the first map in the proposed text referring to the map that is the result of CBOR encoding the CDDL group? If so, I don't think we should make this change as that is covered in the front matter of the Claims section and we don't address that for other claims. The next sentence gets at what Submodule contains. Maybe combining the two sentences like this would be an improvement:\r\n\r\n```\r\nA submodule claim is defined as a map, where each map label identifies a submodule and the value is a Claims-Set, Nested-Token or Detached-Submodule-Digest.\r\n```\r\n\r\n",
              "createdAt": "2022-10-13T22:55:53Z",
              "updatedAt": "2022-10-13T22:55:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EHWES",
          "commit": {
            "abbreviatedOid": "d17cfe2"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-14T17:40:54Z",
          "updatedAt": "2022-10-14T17:40:55Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "There is no byte string wrapping for CBOR-encoded tokens in a JSON surrounding token.\r\n\r\nThink its gonna be hard to have common text for Nested-Token for both CBOR and JSON because they are very different. It is one of the two places where the CDDL can't be the same for JSON and CBOR.\r\n\r\nI do like the general structure where some prescription for decoding is given.",
              "createdAt": "2022-10-14T17:40:54Z",
              "updatedAt": "2022-10-14T17:40:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EHWh8",
          "commit": {
            "abbreviatedOid": "d17cfe2"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-14T17:42:36Z",
          "updatedAt": "2022-10-14T17:42:36Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "Nested-Token is a tstr or a bstr in CBOR.",
              "createdAt": "2022-10-14T17:42:36Z",
              "updatedAt": "2022-10-14T17:42:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EHnoO",
          "commit": {
            "abbreviatedOid": "d17cfe2"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-14T18:43:54Z",
          "updatedAt": "2022-10-14T18:43:54Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "I moved the sentence addressing CBOR to be the first sentence of this section (so these words are now CBOR-specific).",
              "createdAt": "2022-10-14T18:43:54Z",
              "updatedAt": "2022-10-14T18:43:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EHn7i",
          "commit": {
            "abbreviatedOid": "d17cfe2"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-14T18:44:59Z",
          "updatedAt": "2022-10-14T18:44:59Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "As was covered shortly below these words. As noted above, now these words and the former Nested-Token section are together.",
              "createdAt": "2022-10-14T18:44:59Z",
              "updatedAt": "2022-10-14T18:44:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EVSWh",
          "commit": {
            "abbreviatedOid": "217c60d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-18T19:56:00Z",
          "updatedAt": "2022-10-18T19:56:01Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I still don't think the CBOR section is right. When you are decoding CBOR you will not encounter a CBOR tag. You will encounter either a tstr or a bstr. Also, when decoding CBOR the Nested-Token may be either CBOR or JSON, so it is not always a CBOR tag.\r\n\r\nI think we have to be thorough and clear here even if it costs an extra paragraph or two. Just the amount of back-and-forth in this conversation indicates to me that this is potentially confusing. I don't think many people have read this carefully yet so I don't think there have been many comments. They will read it. Particularly, Carsten.\r\n\r\nI'm attaching a file with the way I'd write it these paragraphs.\r\n\r\nI still think the overall rearrangement of submods is good and that it is good that these paragraphs are descriptive text of the typical decoder.\r\n\r\nI'm also attaching pseudo code for decoding both JSON and CBOR. I wrote this to validate what I was thinking in the design. In particular I wanted the CBOR implementation to be clean and simple and not be complicated by the lack of tags and byte strings in JSON. I also wanted to be sure that the JSON and CBOR submod decoders can call each other in a sensible way.\r\n\r\n[sub.txt](https://github.com/ietf-rats-wg/eat/files/9814624/sub.txt)\r\n\r\n[decode.txt](https://github.com/ietf-rats-wg/eat/files/9814644/decode.txt)\r\n\r\n\r\n\r\n\r\n\r\n",
              "createdAt": "2022-10-18T19:56:00Z",
              "updatedAt": "2022-10-18T19:56:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EVY44",
          "commit": {
            "abbreviatedOid": "bbed1d4"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-18T20:14:57Z",
          "updatedAt": "2022-10-18T20:14:58Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Sorry. I wasn't clear. \r\n\r\nThe word \"map\" is used to refer to the same map both types, the map that holds the submods. \r\n\r\nThe problem is with \"map label\", because you might not know which label it refers to -- when you put a map in a map there's two layers of labeling. Two sentences?\r\n     `A submodule claim is a map holds some number of submodule.`\r\n     `Each submodule is named by its label in the submodule claim map`",
              "createdAt": "2022-10-18T20:14:57Z",
              "updatedAt": "2022-10-18T20:14:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5EVaLU",
          "commit": {
            "abbreviatedOid": "d2f4f97"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-18T20:17:07Z",
          "updatedAt": "2022-10-18T20:17:08Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "I'm thinking to expand Example A.1.6 of a HW attestation block. Will work on it after a few other things are handled.",
              "createdAt": "2022-10-18T20:17:07Z",
              "updatedAt": "2022-10-18T20:17:08Z"
            }
          ]
        }
      ]
    },
    {
      "number": 262,
      "id": "PR_kwDOCEWCXc49HaA5",
      "title": "edits to detached EAT bundle and profiles sections. ",
      "url": "https://github.com/ietf-rats-wg/eat/pull/262",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "changes were largely for brevity, but a few cases were to align with other changes (like requirement for freshness vs. a nonce)",
      "createdAt": "2022-08-12T20:16:07Z",
      "updatedAt": "2022-10-24T17:53:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits8",
      "headRefOid": "c75034acb71fab328fec30f2708c1164ccfeedb2",
      "closedAt": "2022-08-31T18:30:55Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 263,
      "id": "PR_kwDOCEWCXc49HbGc",
      "title": "Minor edits from Section 7 to end of doc",
      "url": "https://github.com/ietf-rats-wg/eat/pull/263",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Added reference to 8949 to time-int discussion\r\n- Changed \"Claim Characteristics\" section title to \"Design Guidance for Defining New EAT Claims\". Changed some must/should language to MUST/SHOULD.\r\n- Changed label in measurement results claim registration to match \"measres\" label used in prose.\r\n- Minor edits",
      "createdAt": "2022-08-12T20:23:29Z",
      "updatedAt": "2022-10-24T17:53:08Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a1e2314d14ad7db41e586ccf5b87a5e4b17bc273",
      "headRepository": "carl-wallace/eat",
      "headRefName": "edits9",
      "headRefOid": "0d6134f89eca832bdc5969e855637076957a9164",
      "closedAt": "2022-08-31T18:31:05Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we might need to pull the \"meares\" label change into a separate PR so we can get all the examples, labels and CDDL for it too.",
          "createdAt": "2022-08-13T20:38:34Z",
          "updatedAt": "2022-08-13T20:38:34Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "I restored swresults, but I think it may just be one spot that needs to be changed additionally (in A.1.6).",
          "createdAt": "2022-08-13T22:00:24Z",
          "updatedAt": "2022-08-13T22:00:24Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 264,
      "id": "PR_kwDOCEWCXc49OH6T",
      "title": "Claim optionality, nonces and freshness",
      "url": "https://github.com/ietf-rats-wg/eat/pull/264",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR started out with the idea that nonces are optional because there are other ways to do freshness. This resulted in review of all the nonce and freshness-related sections and a lot of changes due to incorrect stuff. \r\n\r\nThis also address the all-claims-are optional issue.\r\n\r\nThis needs review and more cross-checking before merging.\r\n\r\nAddresses: #238 and #219",
      "createdAt": "2022-08-16T03:52:50Z",
      "updatedAt": "2022-08-23T16:54:31Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4d3657c7348df1a50ac87eda2298d36afc43efef",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "optional",
      "headRefOid": "0bdd74aa057f7ff9e68a6625c76810acba9f0d45",
      "closedAt": "2022-08-23T16:54:26Z",
      "mergedAt": "2022-08-23T16:54:26Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "c38247485b1c2d12872340ef16c80439cdd5b7e1"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Existing replay discussion in Privacy section was requested by RATS arch. team and was reviewed by them. See https://github.com/ietf-rats-wg/architecture/issues/399",
          "createdAt": "2022-08-18T17:31:52Z",
          "updatedAt": "2022-08-18T17:31:52Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 268,
      "id": "PR_kwDOCEWCXc49ha1O",
      "title": "Revision of DEB security considerations",
      "url": "https://github.com/ietf-rats-wg/eat/pull/268",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/ietf-rats-wg/eat/issues/265",
      "createdAt": "2022-08-22T00:45:16Z",
      "updatedAt": "2022-08-31T17:25:49Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4d3657c7348df1a50ac87eda2298d36afc43efef",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch5",
      "headRefOid": "5c351b0efefadb72979264a9b7be701cd8301279",
      "closedAt": "2022-08-31T17:25:49Z",
      "mergedAt": "2022-08-31T17:25:49Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "f0322c5fb3cc2743a74c91e5019531780fc2cc17"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "looks good to me",
          "createdAt": "2022-08-31T17:24:37Z",
          "updatedAt": "2022-08-31T17:24:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Ah3Hx",
          "commit": {
            "abbreviatedOid": "eb097ca"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-08-23T17:57:23Z",
          "updatedAt": "2022-08-23T17:59:33Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Agree with the removal of this.",
              "createdAt": "2022-08-23T17:57:23Z",
              "updatedAt": "2022-08-23T17:59:33Z"
            },
            {
              "originalPosition": 12,
              "body": "It's actually detached digest considerations. A DEB is only one option for detached digests.",
              "createdAt": "2022-08-23T17:58:01Z",
              "updatedAt": "2022-08-23T17:59:33Z"
            },
            {
              "originalPosition": 25,
              "body": "Althugh - Although\r\nsbecause  -> because",
              "createdAt": "2022-08-23T17:59:22Z",
              "updatedAt": "2022-08-23T17:59:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BGecJ",
          "commit": {
            "abbreviatedOid": "eb097ca"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-31T16:55:28Z",
          "updatedAt": "2022-08-31T16:55:29Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Please see latest change",
              "createdAt": "2022-08-31T16:55:29Z",
              "updatedAt": "2022-08-31T16:55:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BGee-",
          "commit": {
            "abbreviatedOid": "eb097ca"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-31T16:55:37Z",
          "updatedAt": "2022-08-31T16:55:37Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Done",
              "createdAt": "2022-08-31T16:55:37Z",
              "updatedAt": "2022-08-31T16:55:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BGnAc",
          "commit": {
            "abbreviatedOid": "5c351b0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-31T17:24:27Z",
          "updatedAt": "2022-08-31T17:24:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 270,
      "id": "PR_kwDOCEWCXc49hhbA",
      "title": "Broaden swevidence description to cover other formats",
      "url": "https://github.com/ietf-rats-wg/eat/pull/270",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/ietf-rats-wg/eat/issues/269",
      "createdAt": "2022-08-22T01:36:36Z",
      "updatedAt": "2022-08-23T18:41:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4d3657c7348df1a50ac87eda2298d36afc43efef",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch6",
      "headRefOid": "e25f2cea99cac8c30bef77b8f64fc04d1aad84ab",
      "closedAt": "2022-08-23T18:41:01Z",
      "mergedAt": "2022-08-23T18:41:01Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "dec1e9c10edcc3a8f3734a5115afd684edb8dd5b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 271,
      "id": "PR_kwDOCEWCXc49lU2M",
      "title": "Remove exact duplicate examples that got added in draft 13 by accident",
      "url": "https://github.com/ietf-rats-wg/eat/pull/271",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Document is back under 100 pages.",
      "createdAt": "2022-08-22T18:22:07Z",
      "updatedAt": "2022-08-22T18:24:25Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4d3657c7348df1a50ac87eda2298d36afc43efef",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "dup-examples",
      "headRefOid": "de9e3e1b44ad3227b65038b979efbd53c64464f2",
      "closedAt": "2022-08-22T18:24:25Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Already fixed by Carl's exact same PR.",
          "createdAt": "2022-08-22T18:23:32Z",
          "updatedAt": "2022-08-22T18:23:32Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Really close",
          "createdAt": "2022-08-22T18:24:25Z",
          "updatedAt": "2022-08-22T18:24:25Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 273,
      "id": "PR_kwDOCEWCXc49uzhA",
      "title": "Add contributors section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/273",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To address https://github.com/ietf-rats-wg/eat/issues/236.  May need to change depending on Kramdown syntax.",
      "createdAt": "2022-08-24T15:51:09Z",
      "updatedAt": "2022-08-30T15:26:53Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "dec1e9c10edcc3a8f3734a5115afd684edb8dd5b",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch7",
      "headRefOid": "2d125d612ea3656ab16dd8213048d49bd108c627",
      "closedAt": "2022-08-24T17:48:32Z",
      "mergedAt": "2022-08-24T17:48:32Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "d9420c16d4141312b524db93f935ca369024c40d"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks ready for merge to me.",
          "createdAt": "2022-08-24T17:40:02Z",
          "updatedAt": "2022-08-24T17:40:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5A_-gY",
          "commit": {
            "abbreviatedOid": "2d125d6"
          },
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-30T15:13:39Z",
          "updatedAt": "2022-08-30T15:13:40Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Do you just want names here (as in Acknowledgements) or an actual contributors section (with identifying information etc.)?",
              "createdAt": "2022-08-30T15:13:40Z",
              "updatedAt": "2022-08-30T15:13:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BAAfF",
          "commit": {
            "abbreviatedOid": "2d125d6"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-30T15:18:32Z",
          "updatedAt": "2022-08-30T15:18:33Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Contributors are derived from https://github.com/ietf-rats-wg/eat/graphs/contributors.  Acknowledgments would be a different section.",
              "createdAt": "2022-08-30T15:18:32Z",
              "updatedAt": "2022-08-30T15:18:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BAEAK",
          "commit": {
            "abbreviatedOid": "2d125d6"
          },
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-30T15:26:52Z",
          "updatedAt": "2022-08-30T15:26:53Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "OK, I'll make a PR",
              "createdAt": "2022-08-30T15:26:52Z",
              "updatedAt": "2022-08-30T15:26:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 274,
      "id": "PR_kwDOCEWCXc49v5w7",
      "title": "Sec cons update with RATS arch. reference",
      "url": "https://github.com/ietf-rats-wg/eat/pull/274",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To address https://github.com/ietf-rats-wg/eat/issues/237",
      "createdAt": "2022-08-24T20:39:00Z",
      "updatedAt": "2022-08-29T23:19:18Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9420c16d4141312b524db93f935ca369024c40d",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch8",
      "headRefOid": "f113565845025044f0261bd425c8b65cd19d4dcc",
      "closedAt": "2022-08-29T23:19:18Z",
      "mergedAt": "2022-08-29T23:19:18Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "6f5b9c71d9759aa598c444e00998677dc98fecfb"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good to me.",
          "createdAt": "2022-08-26T05:07:01Z",
          "updatedAt": "2022-08-26T05:07:01Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 275,
      "id": "PR_kwDOCEWCXc4-Gyux",
      "title": "Create proper contributors section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/275",
      "state": "MERGED",
      "author": "cabo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-08-31T06:26:42Z",
      "updatedAt": "2022-09-01T14:01:05Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "6f5b9c71d9759aa598c444e00998677dc98fecfb",
      "headRepository": "cabo/eat",
      "headRefName": "contributors",
      "headRefOid": "9fe4c9b2fa289474be6b8f499f5bc097c6d77da5",
      "closedAt": "2022-08-31T16:49:25Z",
      "mergedAt": "2022-08-31T16:49:25Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "22db0386c5d1a37805ed1d276e6e3236599e5182"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "See https://www.rfc-editor.org/rfc/rfc7322#section-4.11, taking note of the \"may\" requirements:\r\n\r\n\"The Contributors section may include brief statements about the nature of particular contributions (\"Sam contributed [Section 3](https://www.rfc-editor.org/rfc/rfc7322#section-3)\"), and it may also include affiliations of listed contributors.  At the discretion of the author(s), contact addresses may also be included in the Contributors section, for those contributors whose knowledge makes them useful future contacts for information about the RFC.\"\r\n\r\nIn other words, the lack of contact information for contributors is perfectly acceptable as per RFC 7322.  The existing text is already \"proper\".",
          "createdAt": "2022-08-31T14:17:43Z",
          "updatedAt": "2022-08-31T14:17:43Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Yes.  \r\nBut this PR was not about RFC 7322 minimum requirements, but about a more prominent and useful presentation of the list of contributors, in a way that is also closer to the list of authors.\r\n(I didn't include \"brief statements about the nature of particular contributions\" because that would then be added by the authors, using the `contribution` YAML field, if desired.)\r\n",
          "createdAt": "2022-08-31T14:27:32Z",
          "updatedAt": "2022-08-31T14:27:32Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "We are tracking PR's against issues (as much as possible).  If you have an issue with the style adopted in the Contributors section then please raise an issue first so that it can be discussed.",
          "createdAt": "2022-08-31T14:42:47Z",
          "updatedAt": "2022-08-31T14:42:47Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The issue is #236 ",
          "createdAt": "2022-08-31T14:44:54Z",
          "updatedAt": "2022-08-31T14:44:54Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Hi. I am summoned here because my name is used on github.\r\n\r\nI just stared at the head of master https://github.com/ietf-rats-wg/eat/blob/master/draft-ietf-rats-eat.md#contributors. This PR is an improvement.\r\n\r\n\"Contributors\" is a structure that needs specific kramdown syntax to really take effect. Current master includes simple text content. This PR improves that simple text to kramdown that enables xml2rfc to create a dedicated contributor section as intended by RFCed.\r\n\r\nHence, I'd like to +1 this suggested change as it proposes a better way of including my name :-)\r\n\r\n",
          "createdAt": "2022-08-31T15:49:44Z",
          "updatedAt": "2022-08-31T15:49:44Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "If this PR needs it's own dedicated issue, I can open a new issue. But is that really necessary?",
          "createdAt": "2022-08-31T15:57:01Z",
          "updatedAt": "2022-08-31T15:57:01Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Go back to RFC 7322:\r\n\r\n\" The format of any contact information should be similar to the format of any information in the Author's Address section.\"\r\n\r\nProposed PR does not satisfy the above, as it is not consistent with \"format\".  Therefore it is not really \"proper\".  This is another reason why I left out the contact info in the Contributors' section, as RFC 7119 allows for exclusion.",
          "createdAt": "2022-08-31T16:26:37Z",
          "updatedAt": "2022-08-31T16:26:37Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "> If this PR needs it's own dedicated issue, I can open a new issue. But is that really necessary?\r\n\r\nYes it is.  Draft is in WGLC.  All unsolicited PR's should be tracked with corresponding issues so that they can be matched against WGLC comments.",
          "createdAt": "2022-08-31T16:28:48Z",
          "updatedAt": "2022-08-31T16:28:48Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "Done. See https://github.com/ietf-rats-wg/eat/issues/276\r\n\r\nPlease mind, this is an editorial suggested change.",
          "createdAt": "2022-08-31T16:32:39Z",
          "updatedAt": "2022-08-31T16:32:39Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Go back to RFC 7322:\r\n> \r\n> \" The format of any contact information should be similar to the format of any information in the Author's Address section.\"\r\n\r\nIndeed, this is part of the point of this PR.\r\n\r\n> Proposed PR does not satisfy the above, as it is not consistent with \"format\". Therefore it is not really \"proper\". This is another reason why I left out the contact info in the Contributors' section, as RFC 7119 allows for exclusion.\r\n\r\nI made the PR specifically because there has been a clear trend in the eight years since RFC 7322 was written towards Contributors sections that look like authors' addresses sections.  RFC 7119 is about IPFIX and probably not relevant here.\r\n\r\nPlease stop arguing around the slightly sloppy name of this PR (you think \"proper\" means compliant to old documents, I think \"proper\" means up to current best practices).\r\n\r\nI'm really not used to this level of resistance to informed advice.",
          "createdAt": "2022-08-31T16:35:17Z",
          "updatedAt": "2022-08-31T16:35:17Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">Please stop arguing around the slightly sloppy name of this PR (you think \"proper\" means compliant to old documents, I think \"proper\" means up to current best practices).\r\n>I'm really not used to this level of resistance to informed advice.\r\n\r\nDidn't know that open discussion amounted to \"arguing\".  I will quite commenting if the discussion is perceived as hostile.  My apologies.",
          "createdAt": "2022-08-31T16:45:21Z",
          "updatedAt": "2022-08-31T16:45:21Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Meant argue [1], sorry.\r\n\r\nar\u00b7gue | \u02c8\u0251r\u0261ju |\r\nverb (argues, arguing, argued)\r\n1 [reporting verb] give reasons or cite evidence in support of an idea, action, or theory, typically with the aim of persuading others to share one's view: [with direct speech] : \u201cIt stands to reason,\u201d she argued | [with clause] : defense attorneys argue that the police lacked \u201cprobable cause\u201d to arrest the driver.\r\n\u2022 [with object] (argue someone into/out of) persuade someone to do or not to do (something) by giving reasons: I tried to argue him out of it.\r\n2 [no object] exchange or express diverging or opposite views, typically in a heated or angry way: figurative : I wasn't going to argue with a gun | [with object] : she was too tired to argue the point | don't argue with me.\r\n",
          "createdAt": "2022-08-31T16:47:32Z",
          "updatedAt": "2022-08-31T16:47:32Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Sure.  Let's merge.  Any issues with style will be covered in IESG review and we can revert if necessary.",
          "createdAt": "2022-08-31T16:49:27Z",
          "updatedAt": "2022-08-31T16:49:27Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thank  you.",
          "createdAt": "2022-08-31T16:55:23Z",
          "updatedAt": "2022-08-31T16:55:23Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR is already merged, but my responses earlier were rather curt. I apologize for that - I was multitasking at the time. I feel I should provide a more well-thought out response to this well-intentioned PR.\r\n\r\na)  RFC 7322 is the current RFC style guide for editors.  If there is any authoritative guidance stating that parts of it can be ignored or interpreted as advisory at best (beyond the extension cited in the header material of RFC 7322), then I certainly would welcome a pointer.\r\n\r\nb) Even though the current RFC was published in 2014, it is still being applied to candidate RFC's during broader IESG review based on my recent experience.  For instance, RFC 9223 (https://datatracker.ietf.org/doc/rfc9223/) is an informational draft that was held up from publication for 4 years from my initial submission primarily due to issues related to style adherence.  Ironically at the time of my original submission, there were already many products on the market implementing this specification (thus meeting at least the \"running code\" criterion described in https://www.rfc-editor.org/rfc/rfc7282#page-3).  \r\n\r\nc)  In short, candidate RFC's are held to the standard of the Style Guide, and I don't believe the EAT editors have significant discretion in that regard.  If certain individuals have their personally-preferred style then I recommend they validate any proposed PR against RFC 7322 before pushing it to the main repo.\r\n\r\nd)  With regards to a Contributors section, the original text was conformant with the RFC Style Guide based on my assessment.  This  particular PR is not conformant, in my interpretation.  Specifically as per (https://www.rfc-editor.org/rfc/rfc7322#section-4.11 (Contributors Section):  \"The format of any contact information should be similar to the format of any information in the Author's Address section\".\r\n\r\nGoing to the Author's Address section:  https://www.rfc-editor.org/rfc/rfc7322#section-4.12:  \"Contact information must include a long-lived email address ...\".\r\n\r\nSince I could not satisfy the 'must' requirement above as I did not have long-lived email addresses for all contributors, I chose not to include contact information in the Contributors section as originally merged into the draft.  This was allowed by RFC 7322 as well.\r\n\r\nAll that being said, I am not claiming that what is in the current Style Guide is something I particularly care for, and I would not be unhappy if in the future that candidate RFC editors would be free to ignore it either partially or fully.  But if adherence gets us closer to completion of the EAT specification (also now 4 years old and still not an RFC) then I think it is certainly worth the sacrifice.\r\n\r\n ",
          "createdAt": "2022-09-01T03:50:07Z",
          "updatedAt": "2022-09-01T03:51:21Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hi Giri,\r\n\r\nRFC 7322 is still the valid style guide to apply, together with other information you find listed at https://www.rfc-editor.org/styleguide/.\r\n\r\nRFC 7322 gives significant lenience on the contributor section, as that was nascent at the time.  The MUST on author address information combined with the SHOULD on contributor contact information leads to a SHOULD.\r\n\r\nMy assumption was that the other contributors may want to supply affiliation and contact information as well.  But that can be done now, after merging of the initial PR, so they can see which authoring format can be used for that.\r\n\r\nI was also expecting the authors (editors) to potentially supply a line or two what the contribution was, but that is entirely optional.\r\n\r\nThese are all implicit to the way we do modern contributor sections, so I'm sorry for not making these points explicit.",
          "createdAt": "2022-09-01T07:26:35Z",
          "updatedAt": "2022-09-01T07:26:35Z"
        },
        {
          "author": "cabo",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Since I'm working on this essentially (except for an RTL issue) completed RFC-to-be right now, here is just one example for what I mean with \"modern contributor section\":\r\n\r\nhttps://www.rfc-editor.org/rfc/authors/rfc9290.html#name-contributors\r\n\r\nIn this case, both listed contributors provided an email address; one also provided a URI that makes it easier to find his pertinent work.  The contributions are clearly described in short sentences (which was easy here).",
          "createdAt": "2022-09-01T07:31:22Z",
          "updatedAt": "2022-09-01T07:31:22Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">RFC 7322 gives significant lenience on the contributor section, as that was nascent at the time. The MUST on author address information combined with the SHOULD on contributor contact information leads to a SHOULD.\r\n\r\nThat wasn't the way I read it.  \r\n\r\nThe actual language is \"should be similar to the format of information in the Author's Address section\", which leaves some room for interpretation.  Therefore (in my interpretation) the must requirement for the author's (or in this case contributor's) contact email is a requirement, if the contact info format that is being adopted is what is described in Sec. 4.12.  Since the PR leverages the kramdown-rfc2629 attributes corresponding to author address which are consistent with style guide, this means that all must requirements for contact information should be followed.\r\n\r\nIndependent of that, I don't think we want to finalize the contributors' section without obtaining the minimum contact information for all contributors (along with contributions).  This practice appears to have been followed in https://www.rfc-editor.org/rfc/authors/rfc9290.html#name-contributors, so I assume you agree.\r\n\r\n",
          "createdAt": "2022-09-01T14:01:04Z",
          "updatedAt": "2022-09-01T14:01:04Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 277,
      "id": "PR_kwDOCEWCXc4-JbGv",
      "title": "Typo:  JWS was used instead of JWT",
      "url": "https://github.com/ietf-rats-wg/eat/pull/277",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/ietf-rats-wg/eat/issues/267",
      "createdAt": "2022-08-31T17:19:57Z",
      "updatedAt": "2022-08-31T17:20:27Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "22db0386c5d1a37805ed1d276e6e3236599e5182",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch9",
      "headRefOid": "0ab18c599dd4eb24155736d6542a0c36da196a9b",
      "closedAt": "2022-08-31T17:20:27Z",
      "mergedAt": "2022-08-31T17:20:27Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "dbb312bd86112b2e9e8d441d10efe05d50d7d6c5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 278,
      "id": "PR_kwDOCEWCXc4-Jc7s",
      "title": "swevidence->measurements in CDDL",
      "url": "https://github.com/ietf-rats-wg/eat/pull/278",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "(Still need to debug some CDDL verification runs)\r\n\r\nFixes #272 ",
      "createdAt": "2022-08-31T17:28:37Z",
      "updatedAt": "2022-09-14T19:20:10Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8052c2ce5b44c20bf0b0582ba625a40cc488f88f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "meas-rename",
      "headRefOid": "a1bb4960dac9ff194c4da93f8685e853e114142c",
      "closedAt": "2022-09-14T19:20:10Z",
      "mergedAt": "2022-09-14T19:20:10Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "025df85b4ebb804560634c27c52ad28263823acb"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 279,
      "id": "PR_kwDOCEWCXc4-Jmkw",
      "title": "Finalize abstract",
      "url": "https://github.com/ietf-rats-wg/eat/pull/279",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I'd like to use this thread to finalize the abstract. I won't merge it until us authors are agreed on the final abstract.\r\n\r\nThis change addresses a comment by Eliot that EAT is more than just extensions to JWT/CWT.\r\n\r\nCarl, I looked at your proposed changes #259 and prefer this for the following reasons:\r\n- I reviewed the abstracts of lots of RFCs. They are largely one paragraph.\r\n- The abstract should be easy to read, so not so many acronyms\r\n- Some of the things you are trying to in the abstract should be addressed in section 1.\r\n- I very much want to give the concrete example of devices in the abstract because readers won't know what an entity is\r\n\r\n",
      "createdAt": "2022-08-31T18:15:41Z",
      "updatedAt": "2022-09-28T17:03:11Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f0322c5fb3cc2743a74c91e5019531780fc2cc17",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "abstract",
      "headRefOid": "d3ce33836e0925d7ecfedc96d5ae2d303d9fc313",
      "closedAt": "2022-09-28T17:03:10Z",
      "mergedAt": "2022-09-28T17:03:10Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9961041b78b4c018f16074563e0c7bf554f3d647"
      },
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "I don\u2019t see where 279 answers the mail re: EAT serving as a framework at all, which was most of my goal re: abstract and intro mods. I do agree section 1 should reflect this as well and if you want it all there instead of the abstract, that\u2019s fine. I tried to get the idea into the abstract with an echo in the intro. I agree fewer acronyms is preferrable but still want to get the points across. I will cancel 259 and this can serve as vehicle for abstract mods. If there are other bits from 259 you want to use (like mods for brevity), one of us can submit another PR later.\n\n \n\nFrom: Laurence Lundblade ***@***.***>\nReply-To: ietf-rats-wg/eat ***@***.***>\nDate: Wednesday, August 31, 2022 at 2:15 PM\nTo: ietf-rats-wg/eat ***@***.***>\nCc: Subscribed ***@***.***>\nSubject: [ietf-rats-wg/eat] Finalize abstract (PR #279)\n\n \n\nI'd like to use this thread to finalize the abstract. I won't merge it until us authors are agreed on the final abstract.\n\nThis change addresses a comment by Eliot that EAT is more than just extensions to JWT/CWT.\n\nCarl, I looked at your proposed changes #259 and prefer this for the following reasons:\nI reviewed the abstracts of lots of RFCs. They are largely one paragraph.\nThe abstract should be easy to read, so not so many acronyms\nSome of the things you are trying to in the abstract should be addressed in section 1.\nI very much want to give the concrete example of devices in the abstract because readers won't know what an entity is\nYou can view, comment on, or merge this pull request online at:\n  https://github.com/ietf-rats-wg/eat/pull/279\nCommit Summary\nd3ce338 Updates to abstract\nFile Changes \n(1 file)\nM draft-ietf-rats-eat.md (6) \nPatch Links:\nhttps://github.com/ietf-rats-wg/eat/pull/279.patch\nhttps://github.com/ietf-rats-wg/eat/pull/279.diff\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\n\n",
          "createdAt": "2022-08-31T18:26:00Z",
          "updatedAt": "2022-08-31T18:26:00Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Right, this abstract doesn't introduce EAT as a framework at all. Seems not necessary in the abstract and better to do in section 1.  Maybe if we came up with one or two simple sentences it could be in the abstract.\r\n\r\nThe comment Eliot that this does address is the removal of \"To a large degree, all this document does is extend CWT and JWT.\"\r\n\r\n",
          "createdAt": "2022-08-31T19:29:57Z",
          "updatedAt": "2022-08-31T19:29:57Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 280,
      "id": "PR_kwDOCEWCXc4-J_Dj",
      "title": "Add  \"framework\" subsection",
      "url": "https://github.com/ietf-rats-wg/eat/pull/280",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Just a crude first draft -- see what you think.\r\n\r\nI'm hoping this section can do the work of a lot of other text in section 1. That is we can remove other paragraphs in section 1 and put wording here that does what they did.\r\n\r\ni like the idea of being very up front about this by making it a section.",
      "createdAt": "2022-08-31T20:04:24Z",
      "updatedAt": "2022-09-22T16:44:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1b9e0a991b8a842e0ced0a6c4f037996f7b73349",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "framework",
      "headRefOid": "2db062844910d364bd7cae5f05c36f5e6166d667",
      "closedAt": "2022-09-22T16:44:34Z",
      "mergedAt": "2022-09-22T16:44:34Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "fe620595bddfe45f6a00c3152f73dbc8166bbc71"
      },
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Works for me",
          "createdAt": "2022-09-01T15:09:57Z",
          "updatedAt": "2022-09-01T15:09:57Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> i like the idea of being very up front about this by making it a section.\r\n\r\nFully agree and thanks for taking a stab at this very crucial aspect of the spec.\r\n\r\nThis PR should address Eliot's concern about the token/framework distinction.\r\n\r\nSee also https://mailarchive.ietf.org/arch/msg/rats/63Bxyl7liZ8jchKoTktenJTOCd8/\r\n",
          "createdAt": "2022-09-01T15:18:30Z",
          "updatedAt": "2022-09-01T15:18:30Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "In the latest push I've removed the CWT/JWT/DEB section and the CBOR/JSON/CDDL section. Any normative text from them went into the intro to the big section 4 that defines all the claims. I think it's good to get the normative text out of section 1. Non-normative stuff from them more or less ended up in the frameworks section. I think this makes the document shorter, cleaner and tighter and gets the reader in the profiles mood right away. Comments?",
          "createdAt": "2022-09-10T19:18:08Z",
          "updatedAt": "2022-09-10T19:18:08Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think this is ready to merge. Comment if you think not.\r\n\r\nThe aim is to get the reader properly oriented and not be surprised later in the document like Eliot was. ",
          "createdAt": "2022-09-19T20:17:58Z",
          "updatedAt": "2022-09-19T20:17:58Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "I like the changes for EAT as a Framework but would still like for the intro section to start with a stronger intro statement about EAT. At present, it opens with a redirection to the architecture draft for security model description. An attempt at intro language is here: https://github.com/carl-wallace/eat/blame/alt-framework-mods/draft-ietf-rats-eat.md#L256. I moved the security model pointer later in the section.",
          "createdAt": "2022-09-19T21:13:20Z",
          "updatedAt": "2022-09-19T21:13:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5BHklW",
          "commit": {
            "abbreviatedOid": "00d4da0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "\ud83d\udc4d ",
          "createdAt": "2022-08-31T20:57:31Z",
          "updatedAt": "2022-08-31T20:57:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5BwSPj",
          "commit": {
            "abbreviatedOid": "e1fff99"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "I have left a few purely editorial comment.\r\n\r\nHowever, as a general comment, I really liked the first version a lot more than this one.\r\n\r\nI can see you have put considerable effort into this second draft but I think this needs to be only a concise presentation of the main points. We can use forward references to steer the reader to specific sections rather than trying to fully articulate all the ideas here.",
          "createdAt": "2022-09-10T21:03:58Z",
          "updatedAt": "2022-09-10T21:22:01Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nLike CWT and JWT, EAT uses COSE and JOSE to provide authenticity, integrity and optionally privacy.\r\n```",
              "createdAt": "2022-09-10T21:03:58Z",
              "updatedAt": "2022-09-10T21:22:01Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nEAT places no new restrictions on cryptographic algorithms and thus retains all the cryptographic flexibility of CWT, COSE, JWT and JOSE.\r\n```",
              "createdAt": "2022-09-10T21:04:27Z",
              "updatedAt": "2022-09-10T21:22:01Z"
            },
            {
              "originalPosition": 52,
              "body": "CWT and JWT allow nesting too.  What we want to say here, I think, is that EAT provides pre-canned nesting types (submods and bundles) that allow to describe composite attesters in a natural way.",
              "createdAt": "2022-09-10T21:09:49Z",
              "updatedAt": "2022-09-10T21:22:01Z"
            },
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nAn example of this is a small and very secure attester, perhaps purely built with hardware, which attests to claims from outside of it.\r\n```",
              "createdAt": "2022-09-10T21:12:05Z",
              "updatedAt": "2022-09-10T21:22:01Z"
            },
            {
              "originalPosition": 63,
              "body": "```suggestion\r\nThese detached claims sets may be sent with their enveloping EAT together in a message defined in this document called a detached EAT bundle.\r\n```",
              "createdAt": "2022-09-10T21:14:11Z",
              "updatedAt": "2022-09-10T21:22:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5B1E4o",
          "commit": {
            "abbreviatedOid": "e1fff99"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-12T16:20:03Z",
          "updatedAt": "2022-09-12T16:20:03Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "I pulled together some similar changes I prepared recently and put then here for comparison/consideration: https://github.com/carl-wallace/eat/commit/22fedf64157750c7f322b3b69467fee84cccf1a6. I had the bullets that appear above in the EAT as a Framework section in the abstract (but in the body may be better). One thing I'd like to see incorporated that I had captured is a reference to the Claims-Set-Claim group in the prose. I'd also prefer the intro to start with some intro words re: EAT vs a pointer to the architecture document.",
              "createdAt": "2022-09-12T16:20:03Z",
              "updatedAt": "2022-09-12T16:20:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5B9YIg",
          "commit": {
            "abbreviatedOid": "e1fff99"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-14T00:54:10Z",
          "updatedAt": "2022-09-14T00:54:10Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Hi Thomas, you are in agreement with section 1.2 on CWT, JWT... and 1.3 on CDDL, CBOR... and distributing the essential content from them to section 4 intro and the new frameworks section, right?\r\n\r\nPart of what's going for me here is I'm trying to respond to comments from the chairs, Eliot and such. They seem to want more explanation. Maybe 5 years from now that will be unnecessary.\r\n\r\nI'm not particularly attached to any of this. Will try to find a balance here...",
              "createdAt": "2022-09-14T00:54:10Z",
              "updatedAt": "2022-09-14T00:54:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CCsoX",
          "commit": {
            "abbreviatedOid": "e1fff99"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-14T18:19:01Z",
          "updatedAt": "2022-09-14T18:19:02Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "hi Laurence, TBH I am fine with anything that has this at its core:\r\n\r\n```\r\n> The EAT framework provides:\r\n> * A type system -- the base claims-set & a few aggregation types;\r\n> * Security envelopes based on COSE, JOSE;\r\n> * CBOR and JSON serialisations;\r\n> * A number of pre-defined semantics (the defined \"claims\") that one\r\n> can readily reuse.\r\n```\r\nwhich Eliot seemed to be happy with:\r\n```\r\nAll good.  In fact, that's so well stated that perhaps you should say it \r\nin the draft just so.\r\n```\r\n\r\nI tend to favour information provided succinctly, but any editorial choices are up to the editors, not to me :-)",
              "createdAt": "2022-09-14T18:19:02Z",
              "updatedAt": "2022-09-14T18:19:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CVGQ2",
          "commit": {
            "abbreviatedOid": "e1fff99"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-19T20:14:00Z",
          "updatedAt": "2022-09-19T20:14:00Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "reworded. Thx.",
              "createdAt": "2022-09-19T20:14:00Z",
              "updatedAt": "2022-09-19T20:14:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CXDTd",
          "commit": {
            "abbreviatedOid": "dd48197"
          },
          "author": "ietf-rats",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-20T08:10:46Z",
          "updatedAt": "2022-09-20T08:29:36Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Why be vague here? (\"can be\", \"more so than\").\r\n\r\n```suggestion\r\nEAT is a framework for defining attestation tokens for specific use cases and not a specific token definition.\r\n```",
              "createdAt": "2022-09-20T08:10:46Z",
              "updatedAt": "2022-09-20T08:29:36Z"
            },
            {
              "originalPosition": 21,
              "body": "Maybe keep it crisp here, too? Such as:\r\n```suggestion\r\nEAT provides the following features:\r\n```",
              "createdAt": "2022-09-20T08:13:34Z",
              "updatedAt": "2022-09-20T08:29:36Z"
            },
            {
              "originalPosition": 36,
              "body": "Should this be normative SHOULD?",
              "createdAt": "2022-09-20T08:14:31Z",
              "updatedAt": "2022-09-20T08:29:36Z"
            },
            {
              "originalPosition": 44,
              "body": "Maybe summarize the differences here?",
              "createdAt": "2022-09-20T08:15:29Z",
              "updatedAt": "2022-09-20T08:29:36Z"
            },
            {
              "originalPosition": 62,
              "body": "Superfluous?\r\n\r\n```suggestion\r\n```",
              "createdAt": "2022-09-20T08:26:53Z",
              "updatedAt": "2022-09-20T08:29:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CZsQV",
          "commit": {
            "abbreviatedOid": "dd48197"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-20T15:18:16Z",
          "updatedAt": "2022-09-20T15:18:17Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I don't think it is superfluous because tags and media types are needed. They are ommitted for standards process reasons, not for technical reasons.",
              "createdAt": "2022-09-20T15:18:16Z",
              "updatedAt": "2022-09-20T15:32:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CZt6k",
          "commit": {
            "abbreviatedOid": "dd48197"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-20T15:22:12Z",
          "updatedAt": "2022-09-20T15:22:12Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "The normative text for this is in the first part of section 4. Would like to keep normative text out of section 1.",
              "createdAt": "2022-09-20T15:22:12Z",
              "updatedAt": "2022-09-20T15:22:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CZupJ",
          "commit": {
            "abbreviatedOid": "dd48197"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-20T15:23:57Z",
          "updatedAt": "2022-09-20T15:23:57Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Other people think this section is too long.",
              "createdAt": "2022-09-20T15:23:57Z",
              "updatedAt": "2022-09-20T15:23:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CZx0V",
          "commit": {
            "abbreviatedOid": "dd48197"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-20T15:31:27Z",
          "updatedAt": "2022-09-20T15:31:27Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Yes. Made a separate change in this spirit.",
              "createdAt": "2022-09-20T15:31:27Z",
              "updatedAt": "2022-09-20T15:31:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 281,
      "id": "PR_kwDOCEWCXc4-mxfX",
      "title": "address #242 and #266",
      "url": "https://github.com/ietf-rats-wg/eat/pull/281",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Drop The from claim section titles and use style a la CWT and JWT\r\n- Change examples to use JWT claim names as abbreviations (and fixed a few typos). used name from IANA registry section as authoritative (except for submodules, where Section was dropped from IANA to match the body).\r\n- Added boot count to IANA registration section\r\n- Used software instead of SW throughout\r\n- Changed CWT name of Profile to EAT Profile (following ACE practice)\r\n",
      "createdAt": "2022-09-08T14:22:01Z",
      "updatedAt": "2022-09-12T10:51:10Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f0322c5fb3cc2743a74c91e5019531780fc2cc17",
      "headRepository": "carl-wallace/eat",
      "headRefName": "266",
      "headRefOid": "68379f4ef28ea087b56d6f3195b4bf6d76fddea0",
      "closedAt": "2022-09-09T19:10:48Z",
      "mergedAt": "2022-09-09T19:10:48Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8052c2ce5b44c20bf0b0582ba625a40cc488f88f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5BueUa",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I like this change.  There's a few nits to fix before merging.",
          "createdAt": "2022-09-09T17:49:41Z",
          "updatedAt": "2022-09-09T18:07:18Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "missing comma here and for other secboot examples",
              "createdAt": "2022-09-09T17:49:41Z",
              "updatedAt": "2022-09-09T18:07:18Z"
            },
            {
              "originalPosition": 60,
              "body": "Nonce -> nonce?",
              "createdAt": "2022-09-09T17:51:24Z",
              "updatedAt": "2022-09-09T18:07:18Z"
            },
            {
              "originalPosition": 52,
              "body": "Should probably be 'The \"eat_nonce\" claim'",
              "createdAt": "2022-09-09T17:52:05Z",
              "updatedAt": "2022-09-09T18:07:18Z"
            },
            {
              "originalPosition": 118,
              "body": "If this weren't pre-registered with IANA, I'd rename this \"hwoemid\". Maybe we still can?",
              "createdAt": "2022-09-09T17:53:29Z",
              "updatedAt": "2022-09-09T18:07:18Z"
            },
            {
              "originalPosition": 297,
              "body": "This should be \"measurements\".  This changes inconsistent with Giri's PR  \"swevidence->measurements\"",
              "createdAt": "2022-09-09T17:55:25Z",
              "updatedAt": "2022-09-09T18:08:24Z"
            },
            {
              "originalPosition": 526,
              "body": "Software Evidence -> Measurements",
              "createdAt": "2022-09-09T18:02:50Z",
              "updatedAt": "2022-09-09T18:07:18Z"
            },
            {
              "originalPosition": 325,
              "body": "Would like to leave this change out of this PR and handle it in the submodules rework PR.",
              "createdAt": "2022-09-09T18:05:40Z",
              "updatedAt": "2022-09-09T18:07:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BuoGa",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T18:28:06Z",
          "updatedAt": "2022-09-09T18:28:06Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Yep. Copy and paste error. Fixed in five of the diagnostic files.",
              "createdAt": "2022-09-09T18:28:06Z",
              "updatedAt": "2022-09-09T18:28:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BuoZf",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T18:29:20Z",
          "updatedAt": "2022-09-09T18:29:21Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "This one and the one below were on purpose since the CWT claim in not eat_nonce. Shall I change or leave (see the email exchange with Giri re: renaming this and Profile from earlier this week)?",
              "createdAt": "2022-09-09T18:29:20Z",
              "updatedAt": "2022-09-09T18:29:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Buoa7",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T18:29:27Z",
          "updatedAt": "2022-09-09T18:29:27Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "See comment above.",
              "createdAt": "2022-09-09T18:29:27Z",
              "updatedAt": "2022-09-09T18:29:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BupJJ",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T18:32:22Z",
          "updatedAt": "2022-09-09T18:32:22Z",
          "comments": [
            {
              "originalPosition": 297,
              "body": "Fixed here and in a couple of spots that referenced this claim.",
              "createdAt": "2022-09-09T18:32:22Z",
              "updatedAt": "2022-09-09T18:32:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BupLP",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T18:32:29Z",
          "updatedAt": "2022-09-09T18:32:29Z",
          "comments": [
            {
              "originalPosition": 526,
              "body": "Fixed.",
              "createdAt": "2022-09-09T18:32:29Z",
              "updatedAt": "2022-09-09T18:32:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Bup0u",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T18:35:06Z",
          "updatedAt": "2022-09-09T18:35:06Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "Given the swevidence -> measurements change, seems fine. Changed here and in a few spots that referenced this claim.",
              "createdAt": "2022-09-09T18:35:06Z",
              "updatedAt": "2022-09-09T18:35:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Burgs",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T18:41:41Z",
          "updatedAt": "2022-09-09T18:41:41Z",
          "comments": [
            {
              "originalPosition": 325,
              "body": "I dropped the word \"claim\" from the title here, restored the use of the word \"section\" in the IANA section and restored the old prose for this section, but left the change to have JWT name (Claim name) in the title.",
              "createdAt": "2022-09-09T18:41:41Z",
              "updatedAt": "2022-09-09T18:41:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5BuvGo",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T18:55:22Z",
          "updatedAt": "2022-09-09T18:55:22Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "swevidence was not pre-registered. \"oemid\" is actually in the JWT IANA registry right now. I think we should not make this change now, but consider it separately.",
              "createdAt": "2022-09-09T18:55:22Z",
              "updatedAt": "2022-09-09T18:55:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Buxcv",
          "commit": {
            "abbreviatedOid": "e49c83c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-09T19:05:27Z",
          "updatedAt": "2022-09-09T19:05:28Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "Changed hwoemid back to oemid.",
              "createdAt": "2022-09-09T19:05:27Z",
              "updatedAt": "2022-09-09T19:05:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 282,
      "id": "PR_kwDOCEWCXc4-tStt",
      "title": "How to digest different types of detached claims-sets",
      "url": "https://github.com/ietf-rats-wg/eat/pull/282",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #251\r\n",
      "createdAt": "2022-09-09T22:38:54Z",
      "updatedAt": "2022-09-14T19:47:09Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "2ca017afe783d44491b5f4f30c89d6f46948c93a",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "json-digest",
      "headRefOid": "71eac9c9a1d3fd72eab910e981884d66679edb11",
      "closedAt": "2022-09-14T19:47:09Z",
      "mergedAt": "2022-09-14T19:47:09Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "e14982c58e776defe1762c4e82b3ab570a1478f3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 283,
      "id": "PR_kwDOCEWCXc4-uO6X",
      "title": "minor edits to the entity overview section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/283",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-10T18:32:14Z",
      "updatedAt": "2022-09-26T01:33:33Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8052c2ce5b44c20bf0b0582ba625a40cc488f88f",
      "headRepository": "carl-wallace/eat",
      "headRefName": "entity-overview",
      "headRefOid": "48c2d26527fd7afb31b6dc4db29e30074d003c46",
      "closedAt": "2022-09-14T20:00:17Z",
      "mergedAt": "2022-09-14T20:00:17Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "1b9e0a991b8a842e0ced0a6c4f037996f7b73349"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5CDDBK",
          "commit": {
            "abbreviatedOid": "685e8d9"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-14T19:31:29Z",
          "updatedAt": "2022-09-14T19:31:29Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Could you add this, or equivalent back in?  I think it is important to mention that an entity can be hardware. That doesn't occur to very many people because not many people have ever worked on chip HW.",
              "createdAt": "2022-09-14T19:31:29Z",
              "updatedAt": "2022-09-14T19:31:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CDJsf",
          "commit": {
            "abbreviatedOid": "685e8d9"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-14T19:53:35Z",
          "updatedAt": "2022-09-14T19:53:35Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Added back the last sentence, the other stuff in the snip above was already there.",
              "createdAt": "2022-09-14T19:53:35Z",
              "updatedAt": "2022-09-14T19:53:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 284,
      "id": "PR_kwDOCEWCXc4-8W_s",
      "title": "remove EAN-13",
      "url": "https://github.com/ietf-rats-wg/eat/pull/284",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "addresses issue #153",
      "createdAt": "2022-09-14T12:57:50Z",
      "updatedAt": "2022-09-26T01:33:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8052c2ce5b44c20bf0b0582ba625a40cc488f88f",
      "headRepository": "carl-wallace/eat",
      "headRefName": "ean13",
      "headRefOid": "0d0d2453c2d114d130ac03fac8183fe17710fb2f",
      "closedAt": "2022-09-14T19:22:36Z",
      "mergedAt": "2022-09-14T19:22:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2ca017afe783d44491b5f4f30c89d6f46948c93a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 285,
      "id": "PR_kwDOCEWCXc4--PdC",
      "title": "Remove left over references from security-level",
      "url": "https://github.com/ietf-rats-wg/eat/pull/285",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-14T19:52:12Z",
      "updatedAt": "2022-09-14T19:52:43Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "e14982c58e776defe1762c4e82b3ab570a1478f3",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "extra-ref",
      "headRefOid": "62dd92937f7c5645b99d45c34284dedc571758de",
      "closedAt": "2022-09-14T19:52:43Z",
      "mergedAt": "2022-09-14T19:52:43Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "743e425f9d8773305dc79d0e578d8e67445c3e80"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 286,
      "id": "PR_kwDOCEWCXc4_GzFF",
      "title": "Shorter Text about Claims that contain Keys",
      "url": "https://github.com/ietf-rats-wg/eat/pull/286",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-16T14:58:43Z",
      "updatedAt": "2022-09-30T18:12:56Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1b9e0a991b8a842e0ced0a6c4f037996f7b73349",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-2",
      "headRefOid": "ebfc62c6941646432be13500495984d02bd5c0d1",
      "closedAt": "2022-09-30T18:12:56Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Why have a description that explains why certain content isn't added vs. just being silent? ",
          "createdAt": "2022-09-19T16:44:11Z",
          "updatedAt": "2022-09-19T16:44:11Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedmsmith -- Maybe removing the section entirely is the thing to do. I'm kind of OK with that.\r\n\r\nThough I do like the encouraging the use of COSE_Key and JSON web Key. Some people might not think of that without the comment.",
          "createdAt": "2022-09-22T18:47:21Z",
          "updatedAt": "2022-09-22T18:47:21Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I would either do two things:\r\n\r\n1) Remove the section altogether, or \r\n2) State that this document does not define the functionality since it is not uncommon to also speak about what is left for future work. \r\n\r\nI am good with both options. \r\n\r\nI just don't like to say \"it is not covered in this document but here is the solution nevertheless. Just use X.\"\r\n",
          "createdAt": "2022-09-26T07:24:20Z",
          "updatedAt": "2022-09-26T07:24:55Z"
        },
        {
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The emphasis throughout the document on CWT/JWT is sufficient to demonstrate a preference for COSE/JOSE formats and by extension COSE_Key etc. I don't think it needs to be explicitly stated. ",
          "createdAt": "2022-09-26T15:22:00Z",
          "updatedAt": "2022-09-26T15:22:43Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "OK. Then #311 removes the section entirely. \r\n\r\n(Document is getting shorter :-)",
          "createdAt": "2022-09-26T20:38:46Z",
          "updatedAt": "2022-09-26T20:38:46Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Removed the section entirely",
          "createdAt": "2022-09-30T18:12:56Z",
          "updatedAt": "2022-09-30T18:12:56Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5CS23z",
          "commit": {
            "abbreviatedOid": "ebfc62c"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-19T13:20:00Z",
          "updatedAt": "2022-09-19T13:20:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 287,
      "id": "PR_kwDOCEWCXc4_G0Yt",
      "title": "Secure Boot",
      "url": "https://github.com/ietf-rats-wg/eat/pull/287",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-16T15:03:30Z",
      "updatedAt": "2022-12-02T18:52:13Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1b9e0a991b8a842e0ced0a6c4f037996f7b73349",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-3",
      "headRefOid": "6290c7a0d70a70e45e0ee9bef3083a68c691e610",
      "closedAt": "2022-12-02T18:52:12Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I think telling a relying party that the SW is under control of a particular organization is much more valuable than that the SW is under control of some unknown organization.  \r\n\r\nA lot of this is because we operate in a world where the end owner/user of the device is not trusted to act in their own self interest because they don't know what to do. People using electricity from a nuclear power plant are not trusted to operate the power plant. FIDO authenticators under control of the end user aren't trusted by FIDO RPs.\r\n\r\nIf you just say secure boot is enabled, the RP probably doesn't know what that means in trusting the device.",
          "createdAt": "2022-09-19T20:37:34Z",
          "updatedAt": "2022-09-19T20:37:34Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The secure-boot claim allows to convey \"true\" or \"false\". \r\n\r\nThe description, however, does not match what secure boot means. \r\n\r\nYou are saying \"Secure boot is considered enabled when the firmware and operating system, are under control of the \r\nmanufacturer of the entity identified in the \"oemid\" claim described in {{oemid}}.\"\r\n\r\nSecure boot, unlike with measured boot, uses unchangable code (typically code in ROM) to verify the signature of a piece of firmware prior to starting that firmware. That new firmware then verifies the next layer of software, etc.\r\n\r\nThe question for me is therefore what does the \"firmware and operating system, are under control of the manufacturer\" actually means. \r\n\r\n",
          "createdAt": "2022-09-26T10:07:14Z",
          "updatedAt": "2022-09-26T10:07:14Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The value this claim provides to the verifier or relying party is knowing the base OS and SW on the device is something they can trust, in particular that it is the SW that the OEM intended the device to run.\r\n\r\nIt doesn\u2019t matter how the device achieves this for this claim. In most cases it will be as you say, stages of code authentication starting with ROM. It could be that there is only ROM. It could also be that there is no SW. The device is just pure HW.\r\n\r\nPerhaps the claim should be renamed to \u201cOEM approved boot\u201d? \r\n\r\nHere\u2019s some use cases where the answer should be \u201cfalse\u201d.  The boot ROM does SW verification of the next stage and so on up to the OS, but the end user has access to the signing keys and can run whatever they want.  This use of secure boot is a fail if the device does DRM / content protection because the user can circumvent it. Another fail is loading SW into a mobile phone that allows it to manipulate the cellular signals, particular the radio power output.",
          "createdAt": "2022-10-23T18:04:13Z",
          "updatedAt": "2022-10-23T18:04:13Z"
        },
        {
          "author": "bremoran",
          "authorAssociation": "NONE",
          "body": "Which OEM? Is it the silicon vendor? The software vendor? The equipment manufacturer? The white-label vendor? I don't understand what OEM means. Supply chains are complex. There is no one OEM in complex devices. It may be possible for a simple device to contain only a silicon vendor, an equipment manufacturer, and a software vendor, but ANY of these three could be \"in control\" of the software. This depends on business models more than technical models.",
          "createdAt": "2022-11-07T16:18:28Z",
          "updatedAt": "2022-11-07T16:18:28Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Brendon,\r\n\r\nIt is the OEM identified by the OEM ID claim.\r\n\r\nWhether that vendor is for silicon, the circuit board, the OEM device or the end branded device depends on the scope of the EAT itself.\r\n\r\nAgreed that this claim will not work in all circumstances (like most claims) and depends on knowing what the EAT applies to (like most claims).",
          "createdAt": "2022-11-07T16:59:59Z",
          "updatedAt": "2022-11-07T16:59:59Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Selected #340 instead.",
          "createdAt": "2022-12-02T18:52:12Z",
          "updatedAt": "2022-12-02T18:52:12Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 298,
      "id": "PR_kwDOCEWCXc4_Lzrk",
      "title": "Removal of the Transport Security section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/298",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-19T09:35:39Z",
      "updatedAt": "2022-09-25T19:11:08Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1b9e0a991b8a842e0ced0a6c4f037996f7b73349",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-4",
      "headRefOid": "f6e94e9ce7e48ea24aa89ea68ea5fd874f7178e7",
      "closedAt": "2022-09-25T19:11:04Z",
      "mergedAt": "2022-09-25T19:11:04Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "982224b1c8dddcd6c8ddf1d6033a8a68c590cf7b"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't see an issue with merging.  Going ahead with it now.",
          "createdAt": "2022-09-25T19:11:08Z",
          "updatedAt": "2022-09-25T19:11:08Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 299,
      "id": "PR_kwDOCEWCXc4_MDlK",
      "title": "Re-written Privacy Considerations",
      "url": "https://github.com/ietf-rats-wg/eat/pull/299",
      "state": "CLOSED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I changed the privacy consideration section.",
      "createdAt": "2022-09-19T10:36:05Z",
      "updatedAt": "2022-10-22T17:04:59Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1b9e0a991b8a842e0ced0a6c4f037996f7b73349",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-5",
      "headRefOid": "5a31f0b37119203458969cb2fd03d0d609872deb",
      "closedAt": "2022-10-22T17:01:21Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "This proposed PR removes a section on replay protection and privacy that was reviewed and agreed upon by the Architecture team and EATS editors:  see https://github.com/ietf-rats-wg/eat/pull/164.  \r\n",
          "createdAt": "2022-09-19T12:44:11Z",
          "updatedAt": "2022-09-19T12:44:11Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "The text about replay protection has little to no implementation for privacy and is misplaced in the document.",
          "createdAt": "2022-09-26T10:01:48Z",
          "updatedAt": "2022-09-26T10:01:48Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "> The text about replay protection has little to no implementation for privacy and is misplaced in the document.\r\n\r\nWould recommend you take your concerns back to the RATS arch. team who requested this text and reviewed it before it was merged.\r\n\r\nAlso I did not find this issue raised in the iotdir LC review (https://mailarchive.ietf.org/arch/msg/rats/zubR3clEkOwh68bPvwbD8NPwY2k/) nor secdir LC review (https://mailarchive.ietf.org/arch/msg/secdir/pHag-WP-Zkqo-Yvzv_RdXDfSGsM/).",
          "createdAt": "2022-09-26T23:03:51Z",
          "updatedAt": "2022-09-26T23:03:51Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Good idea, Giri.",
          "createdAt": "2022-09-29T11:11:24Z",
          "updatedAt": "2022-09-29T11:11:24Z"
        },
        {
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Here is what I posted to the RATS list:\r\n\r\n> In PR https://github.com/ietf-rats-wg/eat/pull/299 I proposed a re-write of the privacy consideration section.\r\n> \r\n> As part of my re-write I removed text that was, according to Giri, \u201creviewed and agreed upon by the Architecture team and EATS editors in https://github.com/ietf-rats-wg/eat/pull/164\u201d. \r\n> \r\n> Now, I would like to bring it to the group. Here is the relevant text: \r\n> \r\n> 8.4.  Replay Protection and Privacy\r\n> \r\n>    EAT offers 2 primary mechanisms for token replay protection (also\r\n>    sometimes known as token \"freshness\"): the cti/jti claim and the\r\n>    nonce claim.  The cti/jti claim in a CWT/JWT is a field that may be\r\n>    optionally included in the EAT and is in general derived on the same\r\n>    device in which the entity is instantiated.  The nonce claim is based\r\n>    on a value that is usually derived remotely (outside of the entity).\r\n>    These claims can be used to extract and convey personally-identifying\r\n>    information either inadvertently or by intention.  For instance, an\r\n>    implementor may choose a cti that is equivalent to a username\r\n>    associated with the device (e.g., account login).  If the token is\r\n>    inspected by a 3rd-party then this information could be used to\r\n>    identify the source of the token or an account associated with the\r\n>    token (e.g., if the account name is used to derive the nonce).  In\r\n>    order to avoid the conveyance of privacy-related information in\r\n>    either the cti/jti or nonce claims, these fields should be derived\r\n>    using a salt that originates from a true and reliable random number\r\n>    generator or any other source of randomness that would still meet the\r\n>    target system requirements for replay protection.\r\n> \r\n> The RATS architecture talks about three approaches for providing freshness, namely\r\n> - timestamps,\r\n> - nonces, and\r\n> - epoch IDs.\r\n> \r\n> The text above talks about two mechanisms, namely\r\n> - nonces, and\r\n> - the cti/jti.\r\n> \r\n> (As you will see later, the cti/jti does not correspond to one of the freshness mechanisms from the RATS architecture.)\r\n> \r\n> In the EAT draft version -14 the cti/jti claims are mentioned in two sections, namely in Section 8.4 (see above) and also in Section 4.3.1. The cti claim contains a unique identifier for the JWT. \r\n> \r\n> Assuming that an implementer uses the cti to convey a username / account login is unjustified given what Section 4.1.7 of RFC 7519 defines it to be, see  https://www.rfc-editor.org/rfc/rfc7519#section-4.1.7.\r\n> \r\n> So, there is only a privacy problem with the cti/jti if you use it in a way that has not been envisioned and even suggested by the RFC that defined it.\r\n> \r\n> The privacy implications of the nonce are not described nor are other privacy implications of the iat (issued at) claim defined, which would correspond to the timestamp replay protection mechanism defined in the RATS architecture. \r\n> \r\n> For this reason I suggested to remove this text from the privacy consideration section. \r\n> ",
          "createdAt": "2022-09-29T14:01:14Z",
          "updatedAt": "2022-09-29T14:01:14Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "This PR is not really applicable given the changes that came in after -14.  If there are suggested changes to the nonce considerations in either the Privacy or Security cons sections then please propose them to the WG to obtain consensus.",
          "createdAt": "2022-10-22T17:01:21Z",
          "updatedAt": "2022-10-22T17:01:21Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "@hannestschofenig is there anything left anything unaddressed here?",
          "createdAt": "2022-10-22T17:04:42Z",
          "updatedAt": "2022-10-22T17:04:59Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 301,
      "id": "PR_kwDOCEWCXc4_SZyu",
      "title": "Claim trustworthiness",
      "url": "https://github.com/ietf-rats-wg/eat/pull/301",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A first pass at claim trustworthiness in security considerations.",
      "createdAt": "2022-09-20T15:59:54Z",
      "updatedAt": "2022-09-23T18:50:04Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1b9e0a991b8a842e0ced0a6c4f037996f7b73349",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "claim-trust",
      "headRefOid": "16e35fb79669cbc8db5bbc434289a5564ad9b473",
      "closedAt": "2022-09-23T18:50:04Z",
      "mergedAt": "2022-09-23T18:50:04Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "79869d55e01441719f696de3d051bd6fb9e4b144"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5CaUo9",
          "commit": {
            "abbreviatedOid": "b0ecb8b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-20T17:08:17Z",
          "updatedAt": "2022-09-20T17:08:18Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Delete \"as EAT\".",
              "createdAt": "2022-09-20T17:08:18Z",
              "updatedAt": "2022-09-20T17:08:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Cha3Z",
          "commit": {
            "abbreviatedOid": "b0ecb8b"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-21T20:32:15Z",
          "updatedAt": "2022-09-21T20:32:16Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "OK with text and change suggested by @carl-wallace ",
              "createdAt": "2022-09-21T20:32:16Z",
              "updatedAt": "2022-09-21T20:32:16Z"
            }
          ]
        }
      ]
    },
    {
      "number": 302,
      "id": "PR_kwDOCEWCXc4_Xwxj",
      "title": "mods to first few sections",
      "url": "https://github.com/ietf-rats-wg/eat/pull/302",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Modified intro to move what had been opening paragraph later in the intro. Modified section 3, including incorporating concepts from old section 1.2 (and dropping that section).",
      "createdAt": "2022-09-21T18:18:36Z",
      "updatedAt": "2022-09-22T20:06:46Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1b9e0a991b8a842e0ced0a6c4f037996f7b73349",
      "headRepository": "carl-wallace/eat",
      "headRefName": "intro-mods",
      "headRefOid": "a52e4dca4796b0a1e89ed328c1754ff51099834f",
      "closedAt": "2022-09-22T20:06:46Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5ChP6l",
          "commit": {
            "abbreviatedOid": "5134ed0"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "nice, thanks!  A few editorial comments inlined.",
          "createdAt": "2022-09-21T19:52:17Z",
          "updatedAt": "2022-09-21T20:25:14Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "we also use the `.feature` CDDL operator, which is defined in 9165.\r\n\r\n```suggestion\r\nThe EAT format defines the encoding of claims sets in both CBOR {{RFC8949}} and JSON {{RFC8259}} and defines EATs as extensions to the CBOR Web Token (CWT) {{RFC8392}} and JSON Web Token (JWT) {{RFC7519}} specifications. Data structures are defined using the Concise Data Description Language (CDDL) {{RFC8610}} {{!RFC9165}}. Authenticity and integrity protection MUST be provided and privacy (encryption) MAY additionally be provided for EATs. The CBOR Object Signing and Encryption (COSE) {{RFC9052}} and JSON Object Signing and Encryption (JOSE) {{RFC7515}} {{RFC7516}} SHOULD be used to provide these security services.\r\n```",
              "createdAt": "2022-09-21T19:52:17Z",
              "updatedAt": "2022-09-21T20:25:14Z"
            },
            {
              "originalPosition": 26,
              "body": "maybe we should add a line here to says that EAT can also be used by verifiers to create attestation results.",
              "createdAt": "2022-09-21T19:53:23Z",
              "updatedAt": "2022-09-21T20:25:14Z"
            },
            {
              "originalPosition": 36,
              "body": "typo\r\n\r\n```suggestion\r\nThe key material used to sign and encrypt SHOULD be created and provisioned exclusively for the purpose of attestation, as it is the use of this key material that makes the claims set \"attested\". [RATS.architecture] provides additional information related to provisioning key material used to sign and verify EATs.\r\n```",
              "createdAt": "2022-09-21T19:54:16Z",
              "updatedAt": "2022-09-21T20:25:14Z"
            },
            {
              "originalPosition": 66,
              "body": "I would transplant this sentence at line 257.\r\n\r\n```suggestion\r\nIn particular, EATs can be used for evidence and attestation results.\r\n```",
              "createdAt": "2022-09-21T20:05:15Z",
              "updatedAt": "2022-09-21T20:25:14Z"
            },
            {
              "originalPosition": 202,
              "body": "It's the other way round: \"media type\" is the concept that can be instantiated in specific protocol elements.\r\n\r\n```suggestion\r\nIn some cases it may be by media type (e.g., in a HTTP Content-Type field).\r\n```",
              "createdAt": "2022-09-21T20:16:04Z",
              "updatedAt": "2022-09-21T20:25:14Z"
            },
            {
              "originalPosition": 213,
              "body": "```suggestion\r\nThe following CDDL defines the top-level `$$EAT-CBOR-Tagged-Token`, `$$EAT-CBOR-Untagged-Token` and `$$EAT-JSON-Token-Formats` sockets, enabling future token formats to be defined.\r\n```",
              "createdAt": "2022-09-21T20:17:17Z",
              "updatedAt": "2022-09-21T20:25:14Z"
            },
            {
              "originalPosition": 215,
              "body": "it the first sentence \"See [...] JWT.\" really needed here?  I suggest to drop it\r\n\r\n```suggestion\r\nOf particular use may be a token type that provides no direct authenticity or integrity protection for use with transports mechanisms that do provide the necessary security services {{UCCS}}.\r\n```",
              "createdAt": "2022-09-21T20:24:24Z",
              "updatedAt": "2022-09-21T20:25:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Cho_E",
          "commit": {
            "abbreviatedOid": "5134ed0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-21T21:28:44Z",
          "updatedAt": "2022-09-21T21:28:45Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Added the reference",
              "createdAt": "2022-09-21T21:28:44Z",
              "updatedAt": "2022-09-21T21:28:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ChpGg",
          "commit": {
            "abbreviatedOid": "5134ed0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-21T21:29:20Z",
          "updatedAt": "2022-09-21T21:29:20Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "I did that as an addition at end of paragraph (and after moving the sentence noted below into the paragraph).",
              "createdAt": "2022-09-21T21:29:20Z",
              "updatedAt": "2022-09-21T21:29:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ChpH5",
          "commit": {
            "abbreviatedOid": "5134ed0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-21T21:29:26Z",
          "updatedAt": "2022-09-21T21:29:26Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Fixed",
              "createdAt": "2022-09-21T21:29:26Z",
              "updatedAt": "2022-09-21T21:29:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ChpQH",
          "commit": {
            "abbreviatedOid": "5134ed0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-21T21:30:04Z",
          "updatedAt": "2022-09-21T21:30:04Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Moved into the opening paragraph. Also moved the architecture reference to the second paragraph. ",
              "createdAt": "2022-09-21T21:30:04Z",
              "updatedAt": "2022-09-21T21:30:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ChpRQ",
          "commit": {
            "abbreviatedOid": "5134ed0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-21T21:30:09Z",
          "updatedAt": "2022-09-21T21:30:09Z",
          "comments": [
            {
              "originalPosition": 202,
              "body": "Fixed",
              "createdAt": "2022-09-21T21:30:09Z",
              "updatedAt": "2022-09-21T21:30:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ChpSd",
          "commit": {
            "abbreviatedOid": "5134ed0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-21T21:30:15Z",
          "updatedAt": "2022-09-21T21:30:16Z",
          "comments": [
            {
              "originalPosition": 213,
              "body": "Fixed",
              "createdAt": "2022-09-21T21:30:15Z",
              "updatedAt": "2022-09-21T21:30:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5ChpXf",
          "commit": {
            "abbreviatedOid": "5134ed0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-21T21:30:37Z",
          "updatedAt": "2022-09-21T21:30:38Z",
          "comments": [
            {
              "originalPosition": 215,
              "body": "Agree. Deleted.",
              "createdAt": "2022-09-21T21:30:37Z",
              "updatedAt": "2022-09-21T21:30:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Ci7mm",
          "commit": {
            "abbreviatedOid": "a52e4dc"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "thank you, \ud83d\udea2 it!",
          "createdAt": "2022-09-22T06:28:10Z",
          "updatedAt": "2022-09-22T06:28:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5CmyLP",
          "commit": {
            "abbreviatedOid": "a52e4dc"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I like the 1.3 and 3 edits. Thx for the improvements!\r\n\r\nI generally much prefer the previous first intro paragraphs.  For me the goal of the first paragraphs is smooth, easy-to-read orientation to EAT and attestation for people with security background, but not necessarily attestation background.  Eliot and Hilarie are in that category.\r\n\r\nI merged the frameworks PR so this PR could resolve conflicts with it and be seen in context with it.",
          "createdAt": "2022-09-22T17:50:38Z",
          "updatedAt": "2022-09-22T18:25:30Z",
          "comments": [
            {
              "originalPosition": 189,
              "body": "I mostly prefer the original text.  I think we must say \"EAT MUST Contain a Claims-Set\" as that will carry on to X.509 and such EATS and it really is what makes an EAT an EAT. ",
              "createdAt": "2022-09-22T17:50:38Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            },
            {
              "originalPosition": 24,
              "body": "This comment is for the paragraphs up to the start of 1.1.\r\n\r\nNow that I look at these modifications, it's more clear to me what my original text was trying to do with the first paragraphs in the document.\r\n\r\n- I think they should not assume the reader knows RATS architecture at all. That means no use of words like verifier or attestation results. My intro text was oriented this way. Hilarie didn't know these terms and she is an expert in security. I also don't want to force people to read RATS architecture first, because it is large and complicated.\r\n\r\n- I don't think normative SHOULDs and MUSTs should be here. This should be a smooth-reading section to help orient the reader. All the text here should be to glide the reader to a basic idea of what EAT is about.  None of it is to specify anything.\r\n\r\n- Minimize references to just those essential to help the reader orient to what EAT is about. The minimum is CWT and JWT and RATS architecture. Maybe COSE and JOSE. Definitely not CDDL. References make text choppy, so the fewer the better here.\r\n\r\n- I think a strong paragraph redirecting to RATS architecture is needed for the security model is needed. Probably same paragraph that contrasts with SASL and TLS.\r\n\r\nI lean a lot towards the original text here, but would like to improve the original text too.",
              "createdAt": "2022-09-22T17:50:50Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            },
            {
              "originalPosition": 193,
              "body": "\"relies\" on rather than \"defines the use of\" I think.",
              "createdAt": "2022-09-22T17:53:18Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            },
            {
              "originalPosition": 185,
              "body": "Here's where normative definitions MUSTS and such start in the document.",
              "createdAt": "2022-09-22T17:55:58Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            },
            {
              "originalPosition": 212,
              "body": "\"by an IETF standards action\" rather than \"in an IETF standards track document\"?",
              "createdAt": "2022-09-22T17:59:47Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            },
            {
              "originalPosition": 213,
              "body": "We purposely eliminated all references to UCCS because it is lagging and we don't want to EAT to wait for it. It was also a bit controversial, so I think it should be not referenced.",
              "createdAt": "2022-09-22T18:00:35Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            },
            {
              "originalPosition": 205,
              "body": "\"..also defines a new top-level message, a detached EAT bundle....\"\r\n",
              "createdAt": "2022-09-22T18:03:12Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            },
            {
              "originalPosition": 153,
              "body": "Like all this!",
              "createdAt": "2022-09-22T18:09:29Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            },
            {
              "originalPosition": 172,
              "body": "I would like to leave out part about providing authenticity and integrity here. It's not really part of the flow of what is being discussed and this section isn't really normative text.",
              "createdAt": "2022-09-22T18:13:57Z",
              "updatedAt": "2022-09-22T18:25:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 303,
      "id": "PR_kwDOCEWCXc4_hpwV",
      "title": "protocol -> message format in Appendix C on 802.1AR",
      "url": "https://github.com/ietf-rats-wg/eat/pull/303",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I believe this goes back to a comment from Eliot with Dave Thaler point out a few extra occurrences of the word \"protocol\"\r\n",
      "createdAt": "2022-09-23T21:58:39Z",
      "updatedAt": "2022-09-26T00:19:02Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "79869d55e01441719f696de3d051bd6fb9e4b144",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "appendix-c",
      "headRefOid": "a198b6d5ca1a9f7ade4a30c2a5801d7985baefe1",
      "closedAt": "2022-09-26T00:19:02Z",
      "mergedAt": "2022-09-26T00:19:02Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "ccd6b5d2aea32417c3f58905cf4edbed2d7104dd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 304,
      "id": "PR_kwDOCEWCXc4_i68h",
      "title": "Mods to section 3 Top-Level Token Definition",
      "url": "https://github.com/ietf-rats-wg/eat/pull/304",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This should address all comments relative to similar earlier text except for two conflicting comments related to UCCS reference (Thomas wanted the reference in, Lawrenece wanted the reference out). This version omits it (but as a non-normative reference I don't think including it would slow anything down).",
      "createdAt": "2022-09-24T18:22:52Z",
      "updatedAt": "2022-10-24T17:53:40Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "79869d55e01441719f696de3d051bd6fb9e4b144",
      "headRepository": "carl-wallace/eat",
      "headRefName": "intro-mods-section-3",
      "headRefOid": "8fffa70cad6d8ea29aa7a15a54da756997a3640c",
      "closedAt": "2022-09-28T16:59:16Z",
      "mergedAt": "2022-09-28T16:59:16Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "1bf796923af1d2876aa833e404379d6c28adcb34"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Cud07",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Some discussion / resolution needed on how / what we describe an EAT here.\r\n\r\nFine with UCCS ref, but it looks like the target of {{UCCS}} is missing.",
          "createdAt": "2022-09-26T00:27:14Z",
          "updatedAt": "2022-09-26T00:55:30Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Prefer \"relies on\" rather than \"defines the use of\". ",
              "createdAt": "2022-09-26T00:27:14Z",
              "updatedAt": "2022-09-26T00:55:30Z"
            },
            {
              "originalPosition": 29,
              "body": "\"by an IETF standards action\" rather than \"in an IETF standards track document\"?",
              "createdAt": "2022-09-26T00:28:19Z",
              "updatedAt": "2022-09-26T00:55:30Z"
            },
            {
              "originalPosition": 30,
              "body": "I'm fine with the reference as long as it doesn't slow down EAT.\r\n\r\nWe had this big discussion in Vienna that I thought concluded that the reference had to go because I didn't think you could refer to a draft document in a published RFC, normative or non-normative. If that's true then with this reference EAT would have to wait for UCCS to become an RFC. \r\n\r\n(And if we can reference UCCS, then maybe we should put back all the CDDL and other stuff for UCCS. There was a fair bit of it. The PR to remove the UCCS reference was large and complicated).\r\n\r\nSo first question to answer is whether a publish RFC can references an I-D.",
              "createdAt": "2022-09-26T00:35:12Z",
              "updatedAt": "2022-09-26T00:55:30Z"
            },
            {
              "originalPosition": 6,
              "body": "I would like to retain my original two sentences here. I think they provide a crucial definition of an EAT that goes beyond CWT and JWT.  They define what can plug into the CDDL sockets mention below and what cannot.\r\n\r\nI think it is important to have some text that says what an EAT is independent of it being a CWT/JWT.\r\n\r\nMost of this paragraph is repetition of the opening paragraph in section 4. I'm not sure whether it is better here or in section 4, but it shouldn't be in both.\r\n\r\nI think the text say what an EAT is independent of CWT/JWT should be separate of how EAT relates to a CWT/JWT.\r\n",
              "createdAt": "2022-09-26T00:53:02Z",
              "updatedAt": "2022-09-26T00:55:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CugNs",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T01:06:27Z",
          "updatedAt": "2022-09-26T01:06:28Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Not sure why these changes did not stick. I certainly intended to address each of these. Sorry for the repeat of earlier commented upon item. Will be fixed in a moment.",
              "createdAt": "2022-09-26T01:06:28Z",
              "updatedAt": "2022-09-26T01:06:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CugqV",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T01:12:15Z",
          "updatedAt": "2022-09-26T01:12:15Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I agree when editing section by section it is difficult to control repetition. Will restore your two sentences though it is not clear to me how in the first two sentences of the change fail to get the point across (though \"an entity\" should have been \"an entity or a set of entities\".",
              "createdAt": "2022-09-26T01:12:15Z",
              "updatedAt": "2022-09-26T01:12:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CugtK",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T01:12:49Z",
          "updatedAt": "2022-09-26T01:12:50Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "see above",
              "createdAt": "2022-09-26T01:12:50Z",
              "updatedAt": "2022-09-26T01:12:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Cuguk",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T01:13:06Z",
          "updatedAt": "2022-09-26T01:13:06Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "removed as was intent, I must have missed a save",
              "createdAt": "2022-09-26T01:13:06Z",
              "updatedAt": "2022-09-26T01:13:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CwKll",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T09:52:48Z",
          "updatedAt": "2022-09-26T09:52:48Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "If you consider UCCS, then these two sentences are not correct since with UCCS integrity and authenticity is not provided by the CWT/JWT",
              "createdAt": "2022-09-26T09:52:48Z",
              "updatedAt": "2022-09-26T09:52:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CxDAO",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T12:40:45Z",
          "updatedAt": "2022-09-26T12:40:46Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "The next sentence is \"Extensions to this specification MAY use other methods of protection.\"",
              "createdAt": "2022-09-26T12:40:45Z",
              "updatedAt": "2022-09-26T12:40:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CzlEQ",
          "commit": {
            "abbreviatedOid": "e519098"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T19:53:58Z",
          "updatedAt": "2022-09-26T19:58:18Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "\"also defines\" is duplicated",
              "createdAt": "2022-09-26T19:53:58Z",
              "updatedAt": "2022-09-26T19:58:18Z"
            },
            {
              "originalPosition": 30,
              "body": "Actually, I'd failed to save a major change to my comment above that said it was OK to leave it in. ooops.\r\n\r\nI found that you can have a non-normative reference to a I-D. The method for doing it is here: https://www.rfc-editor.org/rfc/rfc7322#section-4.8.6.4\r\n\r\nI am OK either way. It might be kind of good to make the reference so the reader knows about it rather than hoping they'll come across it.",
              "createdAt": "2022-09-26T19:58:18Z",
              "updatedAt": "2022-09-26T19:58:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CznY1",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T20:02:33Z",
          "updatedAt": "2022-09-26T20:02:33Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "The first sentence of your changes says to me that an EAT MUST be a CWT or JWT implying that nothing else can be an EAT.",
              "createdAt": "2022-09-26T20:02:33Z",
              "updatedAt": "2022-09-26T20:09:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Czn4w",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T20:04:17Z",
          "updatedAt": "2022-09-26T20:04:17Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Seems OK to me now.\r\n",
              "createdAt": "2022-09-26T20:04:17Z",
              "updatedAt": "2022-09-26T20:04:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CzzSF",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T20:40:07Z",
          "updatedAt": "2022-09-26T20:40:07Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "Will put it back.",
              "createdAt": "2022-09-26T20:40:07Z",
              "updatedAt": "2022-09-26T20:40:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CzzWq",
          "commit": {
            "abbreviatedOid": "e519098"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T20:40:24Z",
          "updatedAt": "2022-09-26T20:40:25Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Fixed.",
              "createdAt": "2022-09-26T20:40:24Z",
              "updatedAt": "2022-09-26T20:40:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CzzpJ",
          "commit": {
            "abbreviatedOid": "878eb2b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T20:41:26Z",
          "updatedAt": "2022-09-26T20:41:26Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I already put your two sentences back, so all good.",
              "createdAt": "2022-09-26T20:41:26Z",
              "updatedAt": "2022-09-26T20:41:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5C6CoA",
          "commit": {
            "abbreviatedOid": "8fffa70"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-27T18:43:22Z",
          "updatedAt": "2022-09-27T18:43:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 305,
      "id": "PR_kwDOCEWCXc4_i695",
      "title": "mods to section 1.3 Operating Model and RATS Architecture",
      "url": "https://github.com/ietf-rats-wg/eat/pull/305",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-24T18:23:18Z",
      "updatedAt": "2022-09-26T01:31:31Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "79869d55e01441719f696de3d051bd6fb9e4b144",
      "headRepository": "carl-wallace/eat",
      "headRefName": "intro-mods-section-1.3",
      "headRefOid": "09cf3b315f695e350bd1b49d0b30263a930a063f",
      "closedAt": "2022-09-26T00:25:13Z",
      "mergedAt": "2022-09-26T00:25:13Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2d2b50e38f7a99ce0632c775f8a315711ed26f08"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 306,
      "id": "PR_kwDOCEWCXc4_i6-x",
      "title": "Intro mods section 1.3.1",
      "url": "https://github.com/ietf-rats-wg/eat/pull/306",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-24T18:23:39Z",
      "updatedAt": "2022-09-26T01:30:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "79869d55e01441719f696de3d051bd6fb9e4b144",
      "headRepository": "carl-wallace/eat",
      "headRefName": "intro-mods-section-1.3.1",
      "headRefOid": "f3024c9e154347118a735977dd843e2fa4eca95f",
      "closedAt": "2022-09-26T00:15:58Z",
      "mergedAt": "2022-09-26T00:15:58Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "95866f97d92ecd056905c4da3d0a6b9fa83d320c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 307,
      "id": "PR_kwDOCEWCXc4_i7B9",
      "title": "mods to intro section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/307",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Note, this includes mods outside of section 1 to remove references obsoleted by these mods and to expand an acronym later where the expansion in this section was removed.",
      "createdAt": "2022-09-24T18:24:31Z",
      "updatedAt": "2022-10-24T17:53:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "79869d55e01441719f696de3d051bd6fb9e4b144",
      "headRepository": "carl-wallace/eat",
      "headRefName": "intro-mods-section-1",
      "headRefOid": "c3f36e18da04914b77ccad6988a3b7797df39cbd",
      "closedAt": "2022-09-30T02:09:19Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I propose an alternate rewrite of the intro in #312",
          "createdAt": "2022-09-27T21:28:54Z",
          "updatedAt": "2022-09-27T21:28:54Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Will close this PR when #312 is done.\n\n \n\nFrom: Laurence Lundblade ***@***.***>\nReply-To: ietf-rats-wg/eat ***@***.***>\nDate: Tuesday, September 27, 2022 at 4:29 PM\nTo: ietf-rats-wg/eat ***@***.***>\nCc: Carl Wallace ***@***.***>, Author ***@***.***>\nSubject: Re: [ietf-rats-wg/eat] mods to intro section (PR #307)\n\n \n\nI propose an alternate rewrite of the intro in #312\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>\n\n",
          "createdAt": "2022-09-28T13:36:52Z",
          "updatedAt": "2022-09-28T13:36:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5CwMN_",
          "commit": {
            "abbreviatedOid": "c3f36e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T09:57:22Z",
          "updatedAt": "2022-09-26T09:57:22Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "The MUST and SHOULDs in this paragraph provide little value since they are so unspecific. I think you can get away with just using \"should\" and \"must\" in the introduction.\r\n\r\n",
              "createdAt": "2022-09-26T09:57:22Z",
              "updatedAt": "2022-09-26T09:57:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CwMvm",
          "commit": {
            "abbreviatedOid": "c3f36e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T09:58:55Z",
          "updatedAt": "2022-09-26T09:58:55Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "When you write \"SHOULD\" then you need to tell the reader when they should and should not create and provision the keying material exclusively for the purpose of attestation.\r\n\r\nAlso, how do you want to enforce this statement. I would turn this into a RECOMMENDED.",
              "createdAt": "2022-09-26T09:58:55Z",
              "updatedAt": "2022-09-26T09:58:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CwM-y",
          "commit": {
            "abbreviatedOid": "c3f36e1"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T09:59:38Z",
          "updatedAt": "2022-09-26T09:59:38Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nThe Entity Attestation Token (EAT) format enables entities to create attested claims sets\r\n```",
              "createdAt": "2022-09-26T09:59:38Z",
              "updatedAt": "2022-09-26T09:59:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CxGOQ",
          "commit": {
            "abbreviatedOid": "c3f36e1"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T12:50:02Z",
          "updatedAt": "2022-09-26T12:50:02Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Changed.",
              "createdAt": "2022-09-26T12:50:02Z",
              "updatedAt": "2022-09-26T12:50:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CxG2z",
          "commit": {
            "abbreviatedOid": "c3f36e1"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T12:51:49Z",
          "updatedAt": "2022-09-26T12:51:50Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Yep. Changed.",
              "createdAt": "2022-09-26T12:51:50Z",
              "updatedAt": "2022-09-26T12:51:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CxHwi",
          "commit": {
            "abbreviatedOid": "c3f36e1"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T12:54:19Z",
          "updatedAt": "2022-09-26T12:54:19Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "I thought SHOULD and RECOMMENDED were more or less the same thing, but I see your point and think changing to \"should\" might be the right thing.",
              "createdAt": "2022-09-26T12:54:19Z",
              "updatedAt": "2022-09-26T12:54:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 308,
      "id": "PR_kwDOCEWCXc4_i928",
      "title": "remove cti/jti section. ",
      "url": "https://github.com/ietf-rats-wg/eat/pull/308",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Also modify a few cti/jti references for consistency. The removal of the cti/jti section addresses issue #294.",
      "createdAt": "2022-09-24T19:23:12Z",
      "updatedAt": "2022-09-26T01:30:58Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "79869d55e01441719f696de3d051bd6fb9e4b144",
      "headRepository": "carl-wallace/eat",
      "headRefName": "remove_cti_jti",
      "headRefOid": "dd9ea84b43a066ca2c78e5434bd15e14e49a1de7",
      "closedAt": "2022-09-26T00:16:17Z",
      "mergedAt": "2022-09-26T00:16:17Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "53fd8433d1725829090e9b3a0f8afc8498681859"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "https://datatracker.ietf.org/doc/html/draft-ietf-rats-eat#section-8.4 was added in at the request of the RATS arch. team.  If EAT is to remove all mention of cti/jti then this should likely be revised.  Would suggest the following modified Privacy Section text to be added to the PR:\r\n\r\n\" EAT defines the nonce claim for token replay protection (also sometimes known as token \"freshness\"). The nonce claim is based on a value that is usually derived remotely (outside of the entity).  This claim can be used to extract and convey personally-identifying information either inadvertently or by intention.  For instance, an implementor may choose a nonce that is equivalent to a username associated with the device (e.g., account login).  If the token is  inspected by a 3rd-party then this information could be used to identify the source of the token or an account associated with the token.  In order to avoid the conveyance of privacy-related information in the nonce claim, it should be derived using a salt that originates from a true and reliable random number generator or any other source of randomness that would still meet the target system requirements for replay protection.\"\r\n",
          "createdAt": "2022-09-25T19:18:07Z",
          "updatedAt": "2022-09-25T19:18:07Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Changed to use the suggested text.\n\n \n\nFrom: Giri Mandyam ***@***.***>\nReply-To: ietf-rats-wg/eat ***@***.***>\nDate: Sunday, September 25, 2022 at 2:18 PM\nTo: ietf-rats-wg/eat ***@***.***>\nCc: Carl Wallace ***@***.***>, Author ***@***.***>\nSubject: Re: [ietf-rats-wg/eat] remove cti/jti section. (PR #308)\n\n \n\nhttps://datatracker.ietf.org/doc/html/draft-ietf-rats-eat#section-8.4 was added in at the request of the RATS arch. team. If EAT is to remove all mention of cti/jti then this should likely be revised. Would suggest the following modified Privacy Section text to be added to the PR:\n\n\" EAT defines the nonce claim for token replay protection (also sometimes known as token \"freshness\"). The nonce claim is based on a value that is usually derived remotely (outside of the entity). This claim can be used to extract and convey personally-identifying information either inadvertently or by intention. For instance, an implementor may choose a nonce that is equivalent to a username associated with the device (e.g., account login). If the token is inspected by a 3rd-party then this information could be used to identify the source of the token or an account associated with the token. In order to avoid the conveyance of privacy-related information in the nonce claim, it should be derived using a salt that originates from a true and reliable random number generator or any other source of randomness that would still meet the target system requirements for replay protection.\"\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you authored the thread.Message ID: ***@***.***>\n\n",
          "createdAt": "2022-09-25T21:47:14Z",
          "updatedAt": "2022-09-25T21:47:14Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 309,
      "id": "PR_kwDOCEWCXc4_kSjo",
      "title": "Add reference to Claims-Set-Claims socket to intro of section 4.",
      "url": "https://github.com/ietf-rats-wg/eat/pull/309",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Otherwise Claims-Set-Claims only appears in CDDL.",
      "createdAt": "2022-09-26T01:47:21Z",
      "updatedAt": "2022-10-12T10:42:31Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "2d2b50e38f7a99ce0632c775f8a315711ed26f08",
      "headRepository": "carl-wallace/eat",
      "headRefName": "socket",
      "headRefOid": "4edb5994e04f0c8d000dd78022ce31e45779a833",
      "closedAt": "2022-09-29T20:26:12Z",
      "mergedAt": "2022-09-29T20:26:12Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7ff52dfefd63870ca4744c5ca797054ff211be8f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5CwLNV",
          "commit": {
            "abbreviatedOid": "0c42987"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T09:54:36Z",
          "updatedAt": "2022-09-26T09:54:36Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Under what circumstances should those specifications not supply such additions?",
              "createdAt": "2022-09-26T09:54:36Z",
              "updatedAt": "2022-09-26T09:54:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CxEJD",
          "commit": {
            "abbreviatedOid": "0c42987"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T12:44:04Z",
          "updatedAt": "2022-09-26T12:44:04Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Perhaps it should be a MUST. I was thinking of claims that only had some narrow or local significance, but even in that context the claim would be added to the socket. Will change it.",
              "createdAt": "2022-09-26T12:44:04Z",
              "updatedAt": "2022-09-26T12:44:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CzkGE",
          "commit": {
            "abbreviatedOid": "0c42987"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T19:50:37Z",
          "updatedAt": "2022-09-26T19:50:37Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I think someone defining future EAT claims can use CDDL or not use CDDL. I don't think we want to mandate CDDL. It is OK to use only prose to define an additional claim for people that don't like or don't know CDDL. That's when $$Claims-Set-Claims is not used.\r\n\r\nThis addition and the use of the word \"SHOULD\" here seems right to me.\r\n\r\nI think I'd say something like \"all claims are defined in this document in CDDL and added to the $$Claims-Set-Claims socket group.\" Don't think \"append\" is the right word. Then somethign like \"claims added outside this document SHOULD also add to the $$Claims-Set-Claims socket group, but may also defined claims in prose.\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
              "createdAt": "2022-09-26T19:50:37Z",
              "updatedAt": "2022-09-26T19:50:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5CzwD9",
          "commit": {
            "abbreviatedOid": "0c42987"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-26T20:30:08Z",
          "updatedAt": "2022-09-26T20:30:08Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "The previous sentence states that \"Each claim is defined as a CDDL group\", so I don't think we need to repeat that. As to whether or not someone writes prose or CDDL, a CDDL definition *could* be derived from the prose.  Whether or not someone writes down an addition to Claims-Set-Claims, logically that is what happens anyway (so it's a MUST practically by definition). I don't think making an allowance for prose only here adds anything.\r\n\r\nThe main goal of this PR is to reference Claims-Set-Claims in the prose of the spec (since it's all over the CDDL). Will use some of the words above to change from append to add and see if that works.",
              "createdAt": "2022-09-26T20:30:08Z",
              "updatedAt": "2022-09-26T20:30:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5C6Fca",
          "commit": {
            "abbreviatedOid": "0c42987"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-27T18:52:00Z",
          "updatedAt": "2022-09-27T18:52:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I'd like to hear other comments on this one.\r\n\r\nThis document exclusively uses CDDL and $$Claims-Set-Claims, but CWT and JWT don't and are fine. CDDL is just one way to specify something. Just because the EAT document uses it doesn't mean that follow on documents do. CWT didn't say all claims must be defined in prose.\r\n\r\nThe actual structure and code implementing EAT is not really affected by whether CDDL or prose or some other definition language is used.\r\n\r\nI can live with requirement that CDDL MUST be used, but much prefer SHOULD.",
              "createdAt": "2022-09-27T18:52:00Z",
              "updatedAt": "2022-09-27T18:52:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 310,
      "id": "PR_kwDOCEWCXc4_kThi",
      "title": "minor edits to langauge regarding PEN",
      "url": "https://github.com/ietf-rats-wg/eat/pull/310",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-26T01:53:24Z",
      "updatedAt": "2022-10-12T10:40:39Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "2d2b50e38f7a99ce0632c775f8a315711ed26f08",
      "headRepository": "carl-wallace/eat",
      "headRefName": "pen",
      "headRefOid": "4ea561de7abe7a3b822c314cbe42504d64467d92",
      "closedAt": "2022-09-28T16:58:36Z",
      "mergedAt": "2022-09-28T16:58:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "0441d57ed064a7968e4d42a07904c4475334fda4"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good to me",
          "createdAt": "2022-09-26T19:38:17Z",
          "updatedAt": "2022-09-26T19:38:17Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 311,
      "id": "PR_kwDOCEWCXc4_o6Jo",
      "title": "Entirely remove 4.4 on including public keys",
      "url": "https://github.com/ietf-rats-wg/eat/pull/311",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-26T20:37:02Z",
      "updatedAt": "2022-09-28T17:00:48Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "2d2b50e38f7a99ce0632c775f8a315711ed26f08",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "no-keys",
      "headRefOid": "72bb96d5157b9637974b29f50f392412a9b20db9",
      "closedAt": "2022-09-28T17:00:48Z",
      "mergedAt": "2022-09-28T17:00:48Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "72253e947a54b3b9d2a5adddafd451b11cddbf70"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 312,
      "id": "PR_kwDOCEWCXc4_uode",
      "title": "Rewrite intro",
      "url": "https://github.com/ietf-rats-wg/eat/pull/312",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It's a near complete rewrite. It takes some stuff from Carl's intro PR.\r\n\r\nTrying for:\r\n- Super smooth, easy-to-read introduction (high readability score here https://www.online-utility.org/english/readability_test_and_improve.jsp and on scribens.com)\r\n- No assumption the reader (of the intro) has read RATS architecture\r\n- Clear redirection to RATs Architecture for security model\r\n- Nothing normative -- no MUSTS or SHOULDS\r\n- Minimal references to enhance readability\r\n\r\n\r\n",
      "createdAt": "2022-09-27T21:27:42Z",
      "updatedAt": "2022-09-29T20:23:26Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9961041b78b4c018f16074563e0c7bf554f3d647",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "new-intro",
      "headRefOid": "67bb38c0b36e450084be90411349feacf05ce6dc",
      "closedAt": "2022-09-29T20:23:25Z",
      "mergedAt": "2022-09-29T20:23:25Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "1d44af86638aeb25843f7cb5eab2be2159043679"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Carl, thanks for the very helpful review. Made many changes based on it.",
          "createdAt": "2022-09-28T18:32:44Z",
          "updatedAt": "2022-09-28T18:32:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5C-hnh",
          "commit": {
            "abbreviatedOid": "6be5d7b"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I left a few minor comments, but nothing I'd want to belabor, so keep or toss suggestions at your pleasure. ",
          "createdAt": "2022-09-28T13:24:52Z",
          "updatedAt": "2022-09-28T13:34:30Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Suggest \"The reader is assumed to be familiar with the security model for attestation as described in [RATS.Architecture].\"",
              "createdAt": "2022-09-28T13:24:52Z",
              "updatedAt": "2022-09-28T13:34:30Z"
            },
            {
              "originalPosition": 54,
              "body": "I would delete this sentence. And move the following sentence to the start of the paragraph at line 251.",
              "createdAt": "2022-09-28T13:26:57Z",
              "updatedAt": "2022-09-28T13:34:30Z"
            },
            {
              "originalPosition": 72,
              "body": "Why not note the reader is assumed to be familiar with terminology from RATS architecture too, and refrain from defining attester? If defining attester, I'd define verifier too.",
              "createdAt": "2022-09-28T13:29:20Z",
              "updatedAt": "2022-09-28T13:34:30Z"
            },
            {
              "originalPosition": 78,
              "body": "Though this language is not new, this is really and/or where nesting is used.",
              "createdAt": "2022-09-28T13:29:53Z",
              "updatedAt": "2022-09-28T13:34:30Z"
            },
            {
              "originalPosition": 79,
              "body": "s/is built on/relies on.",
              "createdAt": "2022-09-28T13:30:17Z",
              "updatedAt": "2022-09-28T13:34:30Z"
            },
            {
              "originalPosition": 50,
              "body": "I'd probably delete this sentence. The comparisons to server auth and passwords invite more misunderstanding rather than clear it, in my opinion.",
              "createdAt": "2022-09-28T13:32:46Z",
              "updatedAt": "2022-09-28T13:34:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5DE92N",
          "commit": {
            "abbreviatedOid": "67bb38c"
          },
          "author": "hannestschofenig",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-09-29T14:07:17Z",
          "updatedAt": "2022-09-29T14:07:18Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Wouldn't it be more precise to say that the relying party may choose to trust claims about an entity?\r\n\r\n```suggestion\r\nThe relying party may choose to trust, not trust or partially trust claims about an entity.\r\n```",
              "createdAt": "2022-09-29T14:07:17Z",
              "updatedAt": "2022-09-29T14:07:18Z"
            }
          ]
        }
      ]
    },
    {
      "number": 313,
      "id": "PR_kwDOCEWCXc4_zXA3",
      "title": "Catch up for changes-since section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/313",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-28T18:57:40Z",
      "updatedAt": "2022-09-29T20:18:26Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9961041b78b4c018f16074563e0c7bf554f3d647",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "changes",
      "headRefOid": "506a236dac0eaa7b20dd62bd600f6df521f0f6ef",
      "closedAt": "2022-09-29T20:18:26Z",
      "mergedAt": "2022-09-29T20:18:26Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "30cfeca72e22758456ba7326fc291d2ec464c028"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 314,
      "id": "PR_kwDOCEWCXc4_4y_4",
      "title": "Changed since section entry for $Claim-Set-Claims change",
      "url": "https://github.com/ietf-rats-wg/eat/pull/314",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-29T20:30:36Z",
      "updatedAt": "2022-09-29T20:31:11Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "7ff52dfefd63870ca4744c5ca797054ff211be8f",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "1chancesince",
      "headRefOid": "a398a96106ac0e1c3c6f5c16599039d23b4ddc92",
      "closedAt": "2022-09-29T20:31:11Z",
      "mergedAt": "2022-09-29T20:31:11Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "423600466cc7f3bcbce403b21a17b0ce18db29f5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 315,
      "id": "PR_kwDOCEWCXc4_44iC",
      "title": "Add Carl Wallace as author",
      "url": "https://github.com/ietf-rats-wg/eat/pull/315",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-29T20:52:16Z",
      "updatedAt": "2022-09-29T20:53:05Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "423600466cc7f3bcbce403b21a17b0ce18db29f5",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "carl",
      "headRefOid": "6776d2abb296a4fe7980caebdcced072fd2f0ef9",
      "closedAt": "2022-09-29T20:53:00Z",
      "mergedAt": "2022-09-29T20:52:59Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "01072b3b05da4343d6b6a388ad6fbdede84e68df"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 317,
      "id": "PR_kwDOCEWCXc5ADMqi",
      "title": "Terminology += CDDL and CBOR diag",
      "url": "https://github.com/ietf-rats-wg/eat/pull/317",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also, inline an explicit ref to CDDL sockets\r\n\r\nFix #316\r\n\r\nSigned-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-10-03T12:08:48Z",
      "updatedAt": "2022-10-11T17:58:43Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3ffcb9f58208bed84478c63c63a5b3316214bc79",
      "headRepository": "thomas-fossati/eat",
      "headRefName": "master",
      "headRefOid": "877648e7207a9cb69f8c0665854a8fa12f52d4ed",
      "closedAt": "2022-10-11T17:56:33Z",
      "mergedAt": "2022-10-11T17:56:33Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "df8ac13f0531ba7ac75f65e305a08f1e17b1e0c1"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "/cc @mcr @laurencelundblade ",
          "createdAt": "2022-10-03T12:09:22Z",
          "updatedAt": "2022-10-03T12:09:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5D06L8",
          "commit": {
            "abbreviatedOid": "877648e"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-10-11T17:58:42Z",
          "updatedAt": "2022-10-11T17:58:43Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "this line should be removed.  it got there through a subsequent merge / rebase IIUC",
              "createdAt": "2022-10-11T17:58:42Z",
              "updatedAt": "2022-10-11T17:58:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 318,
      "id": "PR_kwDOCEWCXc5AEz72",
      "title": "bundles are one encoding format",
      "url": "https://github.com/ietf-rats-wg/eat/pull/318",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This clarifies that all detached claims sets in a bundle must be the same encoding as the bundle.\r\n\r\nThat is if the detached EAT bundle is CBOR-encoded, then all the detached claims-sets in it must be CBOR-encoded (and bstr wrapped).  The token with the detached digests doesn't have to be the same though. A sort of working principle here is that in EAT encoding can only be different for whole tokens.\r\n\r\nWe could make an exception for bundles, but we'd need more protocol elements for JSON-encoded tokens so they could distinguish a JSON-detached claims-set from a CBOR-detached claims set. (The same is not needed for CBOR because the tstr/bstr could be used).\r\n\r\nThere's no requirement that detached Claims-Sets be carried in a detached EAT bundle. They could be in a multipart MIME for example.  In that case mixing is fine because there are media types.",
      "createdAt": "2022-10-03T17:51:11Z",
      "updatedAt": "2022-10-16T21:00:09Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "ba3ba53d2a0191ecddc62f66f097bb38a2ea9f0a",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "bundle",
      "headRefOid": "0dbd1b8b4e959f8d33397779d7e92aa8fc01d740",
      "closedAt": "2022-10-16T21:00:09Z",
      "mergedAt": "2022-10-16T21:00:09Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "750542bd9ed6f8c6ed4c06b0e10dbc7939474d63"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5DhuuV",
          "commit": {
            "abbreviatedOid": "9cb65e6"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I'd change to MUST be XXX-encoded since the next sentence reiterates the point with a MUST.",
          "createdAt": "2022-10-06T12:32:06Z",
          "updatedAt": "2022-10-06T12:32:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 319,
      "id": "PR_kwDOCEWCXc5AFJDb",
      "title": "Section 1 wording improvements from Hannes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/319",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This addresses section 1 (1, 1.1, 1.2,...) comments in eat-14_hannes.pdf\r\n\r\nIt is only a tiny change because:\r\n\r\nMost of the proposed changes were covered by or no longer relevant because of the large re writing of section 1 in draft 15.\r\n\r\nI didn't think the others were needed.",
      "createdAt": "2022-10-03T19:15:48Z",
      "updatedAt": "2022-10-11T18:03:08Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "01072b3b05da4343d6b6a388ad6fbdede84e68df",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hannes1",
      "headRefOid": "ca84e24939bd993c1616817ae19abf158d3a49a3",
      "closedAt": "2022-10-11T18:03:05Z",
      "mergedAt": "2022-10-11T18:03:05Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "ba3ba53d2a0191ecddc62f66f097bb38a2ea9f0a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 320,
      "id": "PR_kwDOCEWCXc5APUPq",
      "title": "Repair long lines",
      "url": "https://github.com/ietf-rats-wg/eat/pull/320",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "JSON examples use RFC 8792 folding.\r\n\r\nOther long lines were shortened in the original CBOR diag and CDDL.\r\n\r\nThere should be no more build warnings about long lines.\r\n\r\nThere still are build warnings for tabs because some of the external references have tabs.\r\n\r\nAddress #288",
      "createdAt": "2022-10-05T19:25:46Z",
      "updatedAt": "2022-10-06T23:34:59Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "01072b3b05da4343d6b6a388ad6fbdede84e68df",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "fold",
      "headRefOid": "0ea0f3050ded05743af1bcb028fc16517b5f5be4",
      "closedAt": "2022-10-06T23:34:53Z",
      "mergedAt": "2022-10-06T23:34:53Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "92e32dc7f023b699d655420368ecf9321727788c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5DekX-",
          "commit": {
            "abbreviatedOid": "8511a33"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2022-10-05T21:48:07Z",
          "updatedAt": "2022-10-05T21:48:55Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nThis example has its lines wrapped per {{RFC8792}}.\r\n```",
              "createdAt": "2022-10-05T21:48:07Z",
              "updatedAt": "2022-10-05T21:48:55Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nThis example has its lines wrapped per {{RFC8792}}.\r\n```",
              "createdAt": "2022-10-05T21:48:36Z",
              "updatedAt": "2022-10-05T21:48:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 321,
      "id": "PR_kwDOCEWCXc5AcP_d",
      "title": "Addressing reisdual comments on privacy section from -14 LC",
      "url": "https://github.com/ietf-rats-wg/eat/pull/321",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://mailarchive.ietf.org/arch/msg/rats/KhAhV5vL7Uq_jw3QWNCQGvbE5k4/",
      "createdAt": "2022-10-09T01:35:57Z",
      "updatedAt": "2022-10-09T17:50:39Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "92e32dc7f023b699d655420368ecf9321727788c",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch10",
      "headRefOid": "c8043e54f3947eb10327a08b41fb556a23f57118",
      "closedAt": "2022-10-09T17:50:39Z",
      "mergedAt": "2022-10-09T17:50:39Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "3ffcb9f58208bed84478c63c63a5b3316214bc79"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 322,
      "id": "PR_kwDOCEWCXc5AhYGn",
      "title": "Wording and minor fixes to section 4 per comments from Hannes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/322",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Make a lot of \"not\" and \"must\" upper case.\r\nMinor formatting\r\nAdd reference to JTAG\r\nCommas and minor wording.\r\n\r\nNothing semantic that will cause much discussion so combined for all of section 4.",
      "createdAt": "2022-10-10T20:41:51Z",
      "updatedAt": "2022-10-13T19:42:45Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3ffcb9f58208bed84478c63c63a5b3316214bc79",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hannes4",
      "headRefOid": "69ff8bd3c92d0243a77e9058efc47550898ed101",
      "closedAt": "2022-10-13T19:42:45Z",
      "mergedAt": "2022-10-13T19:42:45Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "300f337f63e6c14c85613035699b15ae772f0cb5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 323,
      "id": "PR_kwDOCEWCXc5Ahdlv",
      "title": "Profiles mention possibility of algorithm negotiation",
      "url": "https://github.com/ietf-rats-wg/eat/pull/323",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Mostly change to section 6.2.7 on algorithms in profiles. Text now says that a profile may specify an algorithm negotiation (hmmm, should negotiation be elsewhere in profiles?).\r\n\r\nA minor wording improvements in early parts of  profiles section.",
      "createdAt": "2022-10-10T21:10:41Z",
      "updatedAt": "2022-10-13T19:43:29Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3ffcb9f58208bed84478c63c63a5b3316214bc79",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hannes5",
      "headRefOid": "bd7610e67d11f732abe09d297e7f97b8cf7ccc9e",
      "closedAt": "2022-10-13T19:43:29Z",
      "mergedAt": "2022-10-13T19:43:29Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2aeac07320f43fec1011c6f0285ee504bcdeb0c0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 324,
      "id": "PR_kwDOCEWCXc5Al1yA",
      "title": "Fix add-ons to terminology PR",
      "url": "https://github.com/ietf-rats-wg/eat/pull/324",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-11T18:01:35Z",
      "updatedAt": "2022-10-11T18:02:19Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "df8ac13f0531ba7ac75f65e305a08f1e17b1e0c1",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "t2",
      "headRefOid": "8c3fcac8fc502ad41034a7e6b85443dd378d6ef6",
      "closedAt": "2022-10-11T18:02:13Z",
      "mergedAt": "2022-10-11T18:02:13Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "5bce4cf4556c827fc3dcf5360380804be175ae6b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 325,
      "id": "PR_kwDOCEWCXc5AmP1g",
      "title": "terminology section reflow",
      "url": "https://github.com/ietf-rats-wg/eat/pull/325",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-11T19:55:01Z",
      "updatedAt": "2022-10-13T19:11:12Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "ba3ba53d2a0191ecddc62f66f097bb38a2ea9f0a",
      "headRepository": "thomas-fossati/eat",
      "headRefName": "patch-3",
      "headRefOid": "839fcc4a6e133a9fb5117b5915ec2a168c5bceb8",
      "closedAt": "2022-10-13T19:11:12Z",
      "mergedAt": "2022-10-13T19:11:12Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4e526e40e03578f32f4ea66f6bd325d3c0f48e11"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 326,
      "id": "PR_kwDOCEWCXc5AsZ6r",
      "title": "Wording improvements and corrections for profile keys and endorsements",
      "url": "https://github.com/ietf-rats-wg/eat/pull/326",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "No semantic change.\r\n\r\nSome of these are from comments by Hannes. Others from another detailed review and grammar check.",
      "createdAt": "2022-10-13T01:12:48Z",
      "updatedAt": "2022-10-18T17:34:28Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "750542bd9ed6f8c6ed4c06b0e10dbc7939474d63",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "6-2-9",
      "headRefOid": "a9428be2f9a14edaaf285862163657ad1e5b74da",
      "closedAt": "2022-10-18T17:34:22Z",
      "mergedAt": "2022-10-18T17:34:22Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "0cf07c1968d2824ec9bc226515d4da5536c8f856"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 327,
      "id": "PR_kwDOCEWCXc5AxNgd",
      "title": "Note about Claim Key and use of term \"label\"",
      "url": "https://github.com/ietf-rats-wg/eat/pull/327",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-13T21:01:47Z",
      "updatedAt": "2022-10-19T17:35:37Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "2aeac07320f43fec1011c6f0285ee504bcdeb0c0",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "label-key",
      "headRefOid": "ec669599c36d78cc466b965ea7916f56f57a723f",
      "closedAt": "2022-10-19T17:35:37Z",
      "mergedAt": "2022-10-19T17:35:37Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7d278392cc843c87857af727067481761f560316"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 328,
      "id": "PR_kwDOCEWCXc5BDDaV",
      "title": "Change \"FDO\" SUIED example to be an XYZ example",
      "url": "https://github.com/ietf-rats-wg/eat/pull/328",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "FIDO on-boarding doesn't use \"FDO\" so the example was misleading. Instead pick some obviously made-up name for the example.\r\n\r\nThis address a comment made by Hannes.",
      "createdAt": "2022-10-18T20:42:10Z",
      "updatedAt": "2022-10-19T17:40:21Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "0cf07c1968d2824ec9bc226515d4da5536c8f856",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "suied-id",
      "headRefOid": "3cc293afb901b4c39b5f50f4919f9461e74c6f09",
      "closedAt": "2022-10-19T17:40:17Z",
      "mergedAt": "2022-10-19T17:40:17Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "50852d5ebc5823345fc7dd453be58088aed76951"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 329,
      "id": "PR_kwDOCEWCXc5BDUEo",
      "title": "Some sockets should have been types, not groups",
      "url": "https://github.com/ietf-rats-wg/eat/pull/329",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "One might think that something that in CDDL that is an array is a group, but it's not. It's a type. It's only a group if it hasn't yet been turned into an array. Same for maps.\r\n",
      "createdAt": "2022-10-18T22:03:05Z",
      "updatedAt": "2022-10-20T01:35:07Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "0cf07c1968d2824ec9bc226515d4da5536c8f856",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "cddl-fix3",
      "headRefOid": "9c9207334fd9e34224d311a6de3a90556b7cd0f2",
      "closedAt": "2022-10-20T01:35:00Z",
      "mergedAt": "2022-10-20T01:35:00Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "e708c8cb436d2944da020b07dce9a6cb63ed0838"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 330,
      "id": "PR_kwDOCEWCXc5BOOKe",
      "title": "Add-on fix for socket type correction",
      "url": "https://github.com/ietf-rats-wg/eat/pull/330",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Follow-on to #329.  Some $$ sockets where in the text.",
      "createdAt": "2022-10-20T19:10:18Z",
      "updatedAt": "2022-10-20T19:11:30Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "6c2b2d578e5869a29013b1bbf73d6c660ee853c3",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "sockets",
      "headRefOid": "adcd09c70ad353ba2a5638064af19a301afc8961",
      "closedAt": "2022-10-20T19:11:23Z",
      "mergedAt": "2022-10-20T19:11:23Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "aa6bec589407b8f91ca889537a58f8fcbfbc57c4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 331,
      "id": "PR_kwDOCEWCXc5BPDJm",
      "title": "mods to change submodule definition",
      "url": "https://github.com/ietf-rats-wg/eat/pull/331",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is mostly to avoid overloading the array used for JSON nested tokens such that nested token types and algorithms for detached submodules are represented in the same field.",
      "createdAt": "2022-10-20T22:03:26Z",
      "updatedAt": "2022-10-24T17:48:33Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9fa499a827e9711d9bf8311e875d09fcf03c52fd",
      "headRepository": "carl-wallace/eat",
      "headRefName": "json_submod_change",
      "headRefOid": "84143d3faf489e68e7c7eb35e1275cc3f627aa4a",
      "closedAt": "2022-10-21T22:19:42Z",
      "mergedAt": "2022-10-21T22:19:42Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b55d511d516da3928d2ec226fb52c0a20831d07a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 332,
      "id": "PR_kwDOCEWCXc5BULeO",
      "title": "Fix error in CDDL definition of measurement results",
      "url": "https://github.com/ietf-rats-wg/eat/pull/332",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "misspelling of measurement",
      "createdAt": "2022-10-21T21:40:57Z",
      "updatedAt": "2022-10-21T21:41:19Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "aa6bec589407b8f91ca889537a58f8fcbfbc57c4",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "cfix",
      "headRefOid": "1ee2dcb6221092973879b54b15db8c942379efbb",
      "closedAt": "2022-10-21T21:41:14Z",
      "mergedAt": "2022-10-21T21:41:14Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9fa499a827e9711d9bf8311e875d09fcf03c52fd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 333,
      "id": "PR_kwDOCEWCXc5BURdN",
      "title": "Add last commit to changed-since",
      "url": "https://github.com/ietf-rats-wg/eat/pull/333",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-21T22:22:31Z",
      "updatedAt": "2022-10-21T22:23:13Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "b55d511d516da3928d2ec226fb52c0a20831d07a",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "submod-x",
      "headRefOid": "b8f043b5420f814a85234cf1124f058059f05ec9",
      "closedAt": "2022-10-21T22:23:10Z",
      "mergedAt": "2022-10-21T22:23:10Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "1ab0d69b73a54c28af96522fbb47a1fa3d741169"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 335,
      "id": "PR_kwDOCEWCXc5BVaJM",
      "title": "Add informative ref to the EAT media types doc",
      "url": "https://github.com/ietf-rats-wg/eat/pull/335",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #334\r\n\r\nSigned-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-10-22T11:56:57Z",
      "updatedAt": "2022-10-22T17:00:00Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1ab0d69b73a54c28af96522fbb47a1fa3d741169",
      "headRepository": "thomas-fossati/eat",
      "headRefName": "master",
      "headRefOid": "2b339fdb0ad317082bc1fc35c01ff5abf0fe43b6",
      "closedAt": "2022-10-22T17:00:00Z",
      "mergedAt": "2022-10-22T17:00:00Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "6e0a4ef8cd67e7c2366c787d439802b39798130b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 336,
      "id": "PR_kwDOCEWCXc5CR1eX",
      "title": "Housekeeping",
      "url": "https://github.com/ietf-rats-wg/eat/pull/336",
      "state": "MERGED",
      "author": "cabo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Get some errors and warnings out of the way",
      "createdAt": "2022-11-06T14:23:29Z",
      "updatedAt": "2022-11-11T11:42:42Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "6e0a4ef8cd67e7c2366c787d439802b39798130b",
      "headRepository": "cabo/eat",
      "headRefName": "housekeeping",
      "headRefOid": "a2c3426c860e8ebfd55a495bbbba3357888f601d",
      "closedAt": "2022-11-11T11:42:41Z",
      "mergedAt": "2022-11-11T11:42:41Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "002b980caeccdd08df9ec6d4da33332dcea49acd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 338,
      "id": "PR_kwDOCEWCXc5DBjzL",
      "title": "Clarify Attestation",
      "url": "https://github.com/ietf-rats-wg/eat/pull/338",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #337",
      "createdAt": "2022-11-16T13:21:53Z",
      "updatedAt": "2022-12-02T18:37:46Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "002b980caeccdd08df9ec6d4da33332dcea49acd",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-6",
      "headRefOid": "4a700d22da3d6c9f7efabde81336825b6e8b812a",
      "closedAt": "2022-12-02T18:37:46Z",
      "mergedAt": "2022-12-02T18:37:46Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4b031689f3ee8905766501cea7004e5c0564caec"
      },
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good to me except I'd not capitalize the terms Evidence and Attestation Results. There was feedback in ~July that resulted in blanket changes to the document to move away from capitalized terms like these.",
          "createdAt": "2022-11-16T13:36:33Z",
          "updatedAt": "2022-11-16T13:36:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5GfS6k",
          "commit": {
            "abbreviatedOid": "d23e696"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-16T13:47:47Z",
          "updatedAt": "2022-11-16T13:47:47Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\n: Certification Authorities (CA's) may require evidence and attestation results to make \r\n```",
              "createdAt": "2022-11-16T13:47:47Z",
              "updatedAt": "2022-11-16T13:47:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5GgnJw",
          "commit": {
            "abbreviatedOid": "d23e696"
          },
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-16T16:43:23Z",
          "updatedAt": "2022-11-16T16:44:04Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I disagree with the use of Evidence here.   If it is intended to be correct, then something should explain why since this is against WG consensus on the arch doc.  It should just say \"Attestation Results\" in my view.",
              "createdAt": "2022-11-16T16:43:23Z",
              "updatedAt": "2022-11-16T16:44:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5GgqRJ",
          "commit": {
            "abbreviatedOid": "d23e696"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-16T16:51:09Z",
          "updatedAt": "2022-11-16T16:51:09Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I would expect the CA to receive evidence as a general rule. Re-reading that sentence, it should probably say \"evidence or attestation results\" but I'd not change it to attestation results alone. See https://datatracker.ietf.org/doc/html/draft-bweeks-acme-device-attest-01 and https://datatracker.ietf.org/doc/html/draft-ietf-lamps-key-attestation-ext-00 for specs that will convey evidence to a CA. ",
              "createdAt": "2022-11-16T16:51:09Z",
              "updatedAt": "2022-11-16T16:51:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5GgqnM",
          "commit": {
            "abbreviatedOid": "d23e696"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-16T16:51:59Z",
          "updatedAt": "2022-11-16T16:51:59Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "For example, in Veracruz, the CA (the relying party) receives evidence (embedded in a CSR, IIRC) extracts it and forwards it to the \"background check\" verifier.  If verification succeeds, a certificate is issued to the enclave.  The same model is used in [ACME's key attestation](https://datatracker.ietf.org/doc/draft-bweeks-acme-device-attest/01/), where the webauthn \"attestation object\" (i.e., evidence) ends up in the response object to the ACME CA (again, the relying party).",
              "createdAt": "2022-11-16T16:51:59Z",
              "updatedAt": "2022-11-16T16:55:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5GgsuM",
          "commit": {
            "abbreviatedOid": "d23e696"
          },
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-16T16:57:19Z",
          "updatedAt": "2022-11-16T16:57:20Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Thomas's point is that the CA may \"receive\" evidence as opaque and forward it on to a verifier in a background check scenario.  It then \"receives\" as non-opaque, and processes, the attestation results.  I was interpreting receives as the latter sense, whereas I think Carl might be using it in the former sense.   However, the text in the PR does not use the word \"receives\", it uses the word \"requires\", which to me is stronger in the former sense.   But it would be best to be explicit if you're referring to the Background Check model, such as\r\n\r\n```suggestion\r\n: Certification Authorities (CA's) may require Attestation Results (which in a Background Check model might require receiving Evidence to be passed to a Verifier) to make \r\n```",
              "createdAt": "2022-11-16T16:57:19Z",
              "updatedAt": "2022-11-16T16:57:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5GgvSy",
          "commit": {
            "abbreviatedOid": "d23e696"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-16T17:03:35Z",
          "updatedAt": "2022-11-16T17:03:36Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "I don't really think we want to mention attestation evidence and the background check model every time an RP wants/requires/gets/needs attestation results.",
              "createdAt": "2022-11-16T17:03:36Z",
              "updatedAt": "2022-11-16T17:03:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5GgvrF",
          "commit": {
            "abbreviatedOid": "d23e696"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-16T17:04:35Z",
          "updatedAt": "2022-11-16T17:04:36Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Definitely should be lower case \"attestation results\" and other terms.",
              "createdAt": "2022-11-16T17:04:35Z",
              "updatedAt": "2022-11-16T17:04:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Ggxw-",
          "commit": {
            "abbreviatedOid": "d23e696"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-16T17:09:47Z",
          "updatedAt": "2022-11-16T17:09:47Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "This is a relative minor point in the grand scheme of things and anyone using this value for intended use will probably know more than we can anticipate here and now so I don't think we need to be that detailed here.\r\n\r\nI'd be happy with \"attestation results\" or with \"attestation evidence and/or results\".\r\n\r\nIf we say \"attestation results\", we're not excluding attestation evidence. We're just describing how the use case might go for illustrative purposes. Nothing normative.",
              "createdAt": "2022-11-16T17:09:47Z",
              "updatedAt": "2022-11-16T17:09:47Z"
            }
          ]
        }
      ]
    },
    {
      "number": 339,
      "id": "PR_kwDOCEWCXc5DC6lA",
      "title": "Wording that doesn't conflate replay with freshness; grammar & formatting",
      "url": "https://github.com/ietf-rats-wg/eat/pull/339",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is per a comment from Henk at IETF 115 in London that freshness and replay are not the same. I believe he is right. Nonces address both at once so it's easy to conflate them.\r\n\r\nThis PR also goes one sentence per line so git diffs are easy. (Had a conversation with Carsten, Henk and Thomas that mostly agreed this was the thing to do). One very long line is not good.\r\n\r\nAlso improved wording after a run through scribens.com ",
      "createdAt": "2022-11-16T17:29:12Z",
      "updatedAt": "2022-12-02T18:36:24Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "002b980caeccdd08df9ec6d4da33332dcea49acd",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "r-f-terms",
      "headRefOid": "dde0fb54413ed39a83d4e4d2b00682aa2310b80c",
      "closedAt": "2022-12-02T18:36:24Z",
      "mergedAt": "2022-12-02T18:36:23Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "486a2593d15d78afc63afb0a2b47339489f5eaa9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 340,
      "id": "PR_kwDOCEWCXc5Dunon",
      "title": "Rename secboot --> oemboot",
      "url": "https://github.com/ietf-rats-wg/eat/pull/340",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is per discussion at IETF 115.\r\n\r\nThis is a change to the semantics of a claim that was pre-registered. The CBOR integer claim key was not changed, but the JSON claim name was changed from \"secboot\" to \"oemboot\". \r\n\r\nThis is an alternate to #287",
      "createdAt": "2022-11-25T21:25:23Z",
      "updatedAt": "2022-12-02T18:41:13Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "002b980caeccdd08df9ec6d4da33332dcea49acd",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "oem-boot",
      "headRefOid": "a55bb1ee937a042afc1efcb9c17cb885f4a9dcda",
      "closedAt": "2022-12-02T18:41:13Z",
      "mergedAt": "2022-12-02T18:41:13Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "bedf5e37692b165de98c77e54a98184d0af647cf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5HTpQg",
          "commit": {
            "abbreviatedOid": "a55bb1e"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-28T18:18:21Z",
          "updatedAt": "2022-11-28T18:18:38Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "The \"or other\" leaves the door wide open for any other interpretation which seems odd given the rest of the text is fairly prescriptive. If the CDDL is more constrained than this, then possibly the description should not include \"or other\"?",
              "createdAt": "2022-11-28T18:18:21Z",
              "updatedAt": "2022-11-28T18:18:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5HgzRl",
          "commit": {
            "abbreviatedOid": "a55bb1e"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-11-30T17:53:13Z",
          "updatedAt": "2022-11-30T17:53:13Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "The last sentence lists examples. Would changing the last sentence as follows address your concern: \"Example means of control include cryptographic authentication of the software, the software being in ROM, or a combination of the two.\"?",
              "createdAt": "2022-11-30T17:53:13Z",
              "updatedAt": "2022-11-30T17:53:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 341,
      "id": "PR_kwDOCEWCXc5EKlKk",
      "title": "Spelling, capitalization, changes since...",
      "url": "https://github.com/ietf-rats-wg/eat/pull/341",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "No semantic changes, just stragglers for -18",
      "createdAt": "2022-12-02T18:51:40Z",
      "updatedAt": "2022-12-02T18:55:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "bedf5e37692b165de98c77e54a98184d0af647cf",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "misc-18",
      "headRefOid": "da8467e374a72aef6a3981ad5785d7dc9028a902",
      "closedAt": "2022-12-02T18:55:14Z",
      "mergedAt": "2022-12-02T18:55:14Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "00eea0d4091860be15258ce49d9f6c3337f5d085"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 342,
      "id": "PR_kwDOCEWCXc5EKnfK",
      "title": "fix secboot in JSON example",
      "url": "https://github.com/ietf-rats-wg/eat/pull/342",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Straggler from rename to oemboot",
      "createdAt": "2022-12-02T19:02:52Z",
      "updatedAt": "2022-12-02T19:03:43Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "00eea0d4091860be15258ce49d9f6c3337f5d085",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "more-misc-18",
      "headRefOid": "36c4176204e887d613cee842da8feeb75b158208",
      "closedAt": "2022-12-02T19:03:43Z",
      "mergedAt": "2022-12-02T19:03:43Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9c4d105e67c894b68872df56f1403b530d45f8fa"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 344,
      "id": "PR_kwDOCEWCXc5E0N1V",
      "title": "UEID minor wording change",
      "url": "https://github.com/ietf-rats-wg/eat/pull/344",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-08T17:43:40Z",
      "updatedAt": "2022-12-10T10:45:54Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-7",
      "headRefOid": "e04dd8808dd5fe24c25f70aacc0d778b2cb6a0c3",
      "closedAt": "2022-12-10T10:45:54Z",
      "mergedAt": "2022-12-10T10:45:54Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "c846904e309d94606b37cd8f19b6df3469b83853"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 346,
      "id": "PR_kwDOCEWCXc5E5bFp",
      "title": "Fix wording of CA",
      "url": "https://github.com/ietf-rats-wg/eat/pull/346",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T11:31:43Z",
      "updatedAt": "2022-12-10T11:17:27Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-8",
      "headRefOid": "4a432d3ebd556802b2705689e5dcf90ac2614d9b",
      "closedAt": "2022-12-10T11:17:27Z",
      "mergedAt": "2022-12-10T11:17:27Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "4b42485f8c6fdb6d23d4af63fef7ff244df410f9"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Hannes,\r\n\r\nI switched to Certificate Authority because that is the term defined in RFC 4949 and because Certification Authority might be confused with something like a performer of Common Criterion certification.\r\n\r\nBut if there's consensus around Certification Authority, I'm OK with that. It's a minor point in the document as a whole.",
          "createdAt": "2022-12-09T16:32:39Z",
          "updatedAt": "2022-12-09T16:32:39Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "I think certification authority is more commonly used and is what is used in RFC 5280.\n\n \n\nFrom: Laurence Lundblade ***@***.***>\nReply-To: ietf-rats-wg/eat ***@***.***>\nDate: Friday, December 9, 2022 at 11:32 AM\nTo: ietf-rats-wg/eat ***@***.***>\nCc: Subscribed ***@***.***>\nSubject: Re: [ietf-rats-wg/eat] Fix wording of CA (PR #346)\n\n \n\nHi Hannes,\n\nI switched to Certificate Authority because that is the term defined in RFC 4949 and because Certification Authority might be confused with something like a performer of Common Criterion certification.\n\nBut if there's consensus around Certification Authority, I'm OK with that. It's a minor point in the document as a whole.\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\n\n",
          "createdAt": "2022-12-09T16:36:13Z",
          "updatedAt": "2022-12-09T16:36:13Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "RFC4949 says:\r\n\r\n> $ certificate authority\r\n>       (D) Synonym for \"certification authority\".\r\n>\r\n>       Deprecated Term: IDOCs SHOULD NOT use this term; it suggests\r\n>       careless use of the term \"certification authority\", which is\r\n>       preferred in PKI standards (e.g., [[X509](https://www.rfc-editor.org/rfc/rfc4949#ref-X509), [R3280](https://www.rfc-editor.org/rfc/rfc4949#ref-R3280)]).",
          "createdAt": "2022-12-09T16:39:15Z",
          "updatedAt": "2022-12-09T16:39:15Z"
        },
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "\"Certification Authority (-ies)\" is used in PKIX docs such as https://datatracker.ietf.org/doc/rfc2459/.  It makes sense to remain consistent with IETF terminology.  Would recommend using \"Certification Authority (CA)\" in first use of the term, and only using CA for the rest of the document.",
          "createdAt": "2022-12-09T16:40:03Z",
          "updatedAt": "2022-12-09T16:40:03Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "+1 Giri, obviously \u263a\ufe0f",
          "createdAt": "2022-12-09T16:41:37Z",
          "updatedAt": "2022-12-09T16:41:37Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 347,
      "id": "PR_kwDOCEWCXc5E5b23",
      "title": "Fix in Detached Bundle Section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/347",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T11:34:10Z",
      "updatedAt": "2022-12-10T10:51:36Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-9",
      "headRefOid": "487402fcaba71762109cee88d22e43dc2955e3d2",
      "closedAt": "2022-12-10T10:51:36Z",
      "mergedAt": "2022-12-10T10:51:36Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "0520dd9a4b19248d16eefe337b3a162fe851f89f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 348,
      "id": "PR_kwDOCEWCXc5E572g",
      "title": "Editorial change in Freshness section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/348",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:14:13Z",
      "updatedAt": "2022-12-10T10:59:45Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-10",
      "headRefOid": "c794dea6778b9dbd876df1770078bee075b68d86",
      "closedAt": "2022-12-10T10:59:45Z",
      "mergedAt": "2022-12-10T10:59:45Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "ae7750b666ee96878bde2a24931193979df9260c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 349,
      "id": "PR_kwDOCEWCXc5E6AVO",
      "title": "Minor changes to the he Constrained Device Standard Profile",
      "url": "https://github.com/ietf-rats-wg/eat/pull/349",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:26:52Z",
      "updatedAt": "2022-12-10T10:59:43Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-11",
      "headRefOid": "257f496db2575647db4607c1ba4e2a512a99a039",
      "closedAt": "2022-12-10T10:59:43Z",
      "mergedAt": "2022-12-10T10:59:43Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "020d0064df51c97abbea728e558fce65e2e83b52"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 350,
      "id": "PR_kwDOCEWCXc5E6Bbe",
      "title": "Fixes to JSON Interoperability section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/350",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:30:11Z",
      "updatedAt": "2022-12-10T11:03:31Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-12",
      "headRefOid": "65d49c28b31c5d9b2cca22446625520f421ebbd0",
      "closedAt": "2022-12-10T11:03:30Z",
      "mergedAt": "2022-12-10T11:03:30Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "9bab568857972a5441c60d9a85b4cec5ecb07637"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5IOK2C",
          "commit": {
            "abbreviatedOid": "65d49c2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-09T13:34:25Z",
          "updatedAt": "2022-12-09T13:34:26Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\n* time -- MUST be encoded as NumericDate as described in {{Section 2 of RFC7519}}.\r\n* string-or-uri -- MUST be encoded as StringOrURI as described in {{Section 2 of RFC7519}}.\r\n```",
              "createdAt": "2022-12-09T13:34:25Z",
              "updatedAt": "2022-12-09T13:34:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 351,
      "id": "PR_kwDOCEWCXc5E6CIe",
      "title": "Nit in Section 7.3.1",
      "url": "https://github.com/ietf-rats-wg/eat/pull/351",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:32:22Z",
      "updatedAt": "2022-12-10T11:05:30Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-13",
      "headRefOid": "252a64f88bdf1ee88aac3dbfe7dd00c1ba52ff11",
      "closedAt": "2022-12-10T11:05:29Z",
      "mergedAt": "2022-12-10T11:05:29Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "ad2722900bdb84933e542f7732dd2080d5f6272c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 352,
      "id": "PR_kwDOCEWCXc5E6Dyu",
      "title": "Uniform usage of Relying Party",
      "url": "https://github.com/ietf-rats-wg/eat/pull/352",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:37:41Z",
      "updatedAt": "2022-12-10T11:16:25Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-14",
      "headRefOid": "a977be06fc2e4e8ad7e04e6ba08c2dae095a2f30",
      "closedAt": "2022-12-10T11:16:25Z",
      "mergedAt": "2022-12-10T11:16:25Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "37a156941ff511e107c6ce1e7eef12c50e08bbe8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 353,
      "id": "PR_kwDOCEWCXc5E6EWr",
      "title": "Nit in Location Privacy Considerations section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/353",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:39:25Z",
      "updatedAt": "2022-12-10T11:17:05Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-15",
      "headRefOid": "51cb071778e593cf2b6f4919f00cf2732d0e357a",
      "closedAt": "2022-12-10T11:17:05Z",
      "mergedAt": "2022-12-10T11:17:05Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "3da865a2fe1d1c3052269b120b09b89e3363abb4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 354,
      "id": "PR_kwDOCEWCXc5E6HDz",
      "title": "Nits in the Multiple EAT Consumers section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/354",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:47:58Z",
      "updatedAt": "2022-12-10T11:17:57Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-16",
      "headRefOid": "3cd94826ce7778ee55ae65f6b0544dc382660197",
      "closedAt": "2022-12-10T11:17:57Z",
      "mergedAt": "2022-12-10T11:17:57Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "1150a001a22355529a01079b12af4c4b36c4f9ae"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 355,
      "id": "PR_kwDOCEWCXc5E6Hb-",
      "title": "Nit in Detached EAT Bundle Digest Security Considerations section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/355",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:49:09Z",
      "updatedAt": "2022-12-10T11:18:24Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-17",
      "headRefOid": "c411d81a66aeea6176e149e0b997397a78ca95ca",
      "closedAt": "2022-12-10T11:18:24Z",
      "mergedAt": "2022-12-10T11:18:24Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "d955bfa43072afdf0c122a139844dce1cea1a714"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 356,
      "id": "PR_kwDOCEWCXc5E6IJ3",
      "title": "Nit in IANA Considerations section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/356",
      "state": "MERGED",
      "author": "hannestschofenig",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-09T13:51:20Z",
      "updatedAt": "2022-12-10T11:18:45Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "hannestschofenig/eat",
      "headRefName": "patch-18",
      "headRefOid": "cb461c5a7f7ebfc5da3d15a82a64022c33d7719f",
      "closedAt": "2022-12-10T11:18:45Z",
      "mergedAt": "2022-12-10T11:18:45Z",
      "mergedBy": "carl-wallace",
      "mergeCommit": {
        "oid": "4bfd010f4508473aa3f3c946a6d1ee328ef3e1c5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 358,
      "id": "PR_kwDOCEWCXc5E-KrD",
      "title": "Add sentence about ~time-int for iat claim in Appendix D",
      "url": "https://github.com/ietf-rats-wg/eat/pull/358",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Proposed fix for #343.",
      "createdAt": "2022-12-10T04:46:06Z",
      "updatedAt": "2022-12-16T18:53:54Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c4d105e67c894b68872df56f1403b530d45f8fa",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "time-int",
      "headRefOid": "5a34310be3e2d4b3042af62da68c39dfd048e0bb",
      "closedAt": "2022-12-16T18:53:53Z",
      "mergedAt": "2022-12-16T18:53:53Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "fb0f824dcbf6357e323ae9f1d9ee00cd2ed1ff21"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5IWGur",
          "commit": {
            "abbreviatedOid": "42a1aa6"
          },
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-12T15:05:32Z",
          "updatedAt": "2022-12-12T15:05:32Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5IWPX4",
          "commit": {
            "abbreviatedOid": "42a1aa6"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM\r\n\r\n(I left a small editorial suggestion inline)",
          "createdAt": "2022-12-12T15:24:40Z",
          "updatedAt": "2022-12-12T15:25:19Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nNote that {{iat-claim}} requires that the iat claim be the type ~time-int ({{common-types}}), not the type ~time when it is used in an EAT as floating-point values are not allowed for the \"iat\" claim in EAT.\r\n```",
              "createdAt": "2022-12-12T15:24:40Z",
              "updatedAt": "2022-12-12T15:25:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 359,
      "id": "PR_kwDOCEWCXc5E_0kF",
      "title": "two minor edits",
      "url": "https://github.com/ietf-rats-wg/eat/pull/359",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-12-10T11:25:00Z",
      "updatedAt": "2023-02-06T13:48:59Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4bfd010f4508473aa3f3c946a6d1ee328ef3e1c5",
      "headRepository": "carl-wallace/eat",
      "headRefName": "minor_edit",
      "headRefOid": "47b11a2135a671f791ce049de0e62acd076a3ee9",
      "closedAt": "2022-12-10T16:07:17Z",
      "mergedAt": "2022-12-10T16:07:17Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b00940ef95f845b82c78997b42a273bd03a6b616"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 360,
      "id": "PR_kwDOCEWCXc5FX9-n",
      "title": "Remove sentence about section 4 claims passing through",
      "url": "https://github.com/ietf-rats-wg/eat/pull/360",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The idea is to be silent on this because who ever builds a system that might or might not pass these claims through will probably know more than we do.\r\n\r\nTo me, there are clearly cases were these claims might pass through and clearly cases where they won't. For example the verifier might be a light-touch verifier only doing the signature verification so it makes sense to pass through intended use and profile. In other cases the evidence token and attestation results token might be completely different in nature. I don't see what value we can add by speculating about this.\r\n\r\nThe discussion in 1.3, particularly 1.3.1 applies here. I think that's all we need to say.\r\n\r\nI don't see any security risks by being silent here. There's no obvious attacks that might happen if these are passed through.\r\n ",
      "createdAt": "2022-12-13T22:19:35Z",
      "updatedAt": "2022-12-19T17:46:19Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "fb0f824dcbf6357e323ae9f1d9ee00cd2ed1ff21",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "no-pass",
      "headRefOid": "5e434b9ab0886cbbbe1b684facede119bc2df9ad",
      "closedAt": "2022-12-19T17:46:19Z",
      "mergedAt": "2022-12-19T17:46:18Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "839edd3f619b9f88dd8b88938c497851f43d37da"
      },
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> I don't see any security risks by being silent here. There's no obvious attacks that might happen if these are passed through.\r\n\r\nNot fully sure about this.  E.g., If `iat` is used as an input to the appraisal policy and there is confusion about what it refers to (evidence generation vs evidence appraisal), then - in principle - there may be a \"security\" problem.",
          "createdAt": "2022-12-14T11:18:42Z",
          "updatedAt": "2022-12-14T11:18:42Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, a mixed up iat could be a security issues, but to me anyone implementing EAT, particularly anyone creating a profile and/or creating a key distribution/identification system for EAT will face a many issues like this that we can't do anything about. We've kind of already assumed they are this smart. Also don't think that token ID's are a subtle issue that they might miss compared to others like those about the use of crypto that we often put in security considerations.",
          "createdAt": "2022-12-14T17:26:22Z",
          "updatedAt": "2022-12-14T17:26:22Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'd be happier with better / safer recommendations (e.g., \"if you need to passthrough, then clearly separate contexts -- e.g., by isolating them in their own sub-map\").  However, I can live with just being silent and hope that the reader is a competent person.",
          "createdAt": "2022-12-14T18:08:25Z",
          "updatedAt": "2022-12-14T18:08:25Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Maybe someday we do an information RFC that is more of a cook book guidance on some of the ways that EATs get nested, ID'd... There's clearly a lot to it. Appreciate your comments, Thomas!",
          "createdAt": "2022-12-14T18:50:48Z",
          "updatedAt": "2022-12-14T18:50:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5ImOH9",
          "commit": {
            "abbreviatedOid": "cc52c39"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-12-14T18:02:19Z",
          "updatedAt": "2022-12-14T18:02:19Z",
          "comments": []
        }
      ]
    },
    {
      "number": 361,
      "id": "PR_kwDOCEWCXc5FkhwV",
      "title": "avoid redefining pre-existing bib entry",
      "url": "https://github.com/ietf-rats-wg/eat/pull/361",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Signed-off-by: Thomas Fossati <thomas.fossati@arm.com>",
      "createdAt": "2022-12-15T18:27:11Z",
      "updatedAt": "2022-12-16T17:32:55Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "f4b7209b362657c857de3d1a2ea2727adc275c94",
      "headRepository": "thomas-fossati/eat",
      "headRefName": "master",
      "headRefOid": "b42885b7f1e9dc9b6b6c7932c59e378dffb244bf",
      "closedAt": "2022-12-16T17:32:55Z",
      "mergedAt": "2022-12-16T17:32:54Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "30a90d608893373d8e4076053bacaabd6255d27d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5ItJpK",
          "commit": {
            "abbreviatedOid": "069a109"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-15T19:04:48Z",
          "updatedAt": "2022-12-15T19:04:48Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "this should be DOI.10.1109/IEEESTD.2014.6847097 ",
              "createdAt": "2022-12-15T19:04:48Z",
              "updatedAt": "2022-12-15T19:04:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 362,
      "id": "PR_kwDOCEWCXc5FqtOS",
      "title": "Update IANA Assignments Section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/362",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This addresses #357. All comments to IANA that are to be removed are in one paragraph.\r\n\r\nIt also combines the sections for to-be-assigned and early-assigned claims and removes boiler plate text for early assignments.\r\n\r\nThe section numbering in the IANA section is adjusted.",
      "createdAt": "2022-12-16T18:53:01Z",
      "updatedAt": "2022-12-19T17:48:21Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "839edd3f619b9f88dd8b88938c497851f43d37da",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "iana-fix",
      "headRefOid": "c553f64dc1d5dab3f752b6e55acbb1a9a4e082c2",
      "closedAt": "2022-12-19T17:48:21Z",
      "mergedAt": "2022-12-19T17:48:21Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "08c91d843ec80293c91717be8c8704c3cd5ac926"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 363,
      "id": "PR_kwDOCEWCXc5Fu0gb",
      "title": "Typo in section 6.2.11",
      "url": "https://github.com/ietf-rats-wg/eat/pull/363",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "require not requires",
      "createdAt": "2022-12-18T17:19:48Z",
      "updatedAt": "2022-12-18T17:20:11Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "fb0f824dcbf6357e323ae9f1d9ee00cd2ed1ff21",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "type621",
      "headRefOid": "4e9ded912749448d1566c30bba3131bdfc1e034c",
      "closedAt": "2022-12-18T17:20:11Z",
      "mergedAt": "2022-12-18T17:20:11Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "6d66ca63142a989e9bb6bc157d504ce91bb4885b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 364,
      "id": "PR_kwDOCEWCXc5JWEAo",
      "title": "address base64url padding issue raised by Thomas",
      "url": "https://github.com/ietf-rats-wg/eat/pull/364",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://mailarchive.ietf.org/arch/msg/rats/qR-udRdc0kFx3ZeGeiypmYv8su0/",
      "createdAt": "2023-02-06T14:27:29Z",
      "updatedAt": "2023-03-20T15:45:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "08c91d843ec80293c91717be8c8704c3cd5ac926",
      "headRepository": "carl-wallace/eat",
      "headRefName": "b64",
      "headRefOid": "97f8cb2cd380366d19a94e0c0eb2d8ffdf2f23bc",
      "closedAt": "2023-03-18T22:07:18Z",
      "mergedAt": "2023-03-18T22:07:18Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b90503b7200c033f7489dca9bd0074b0a5dcbdca"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "+1\r\n",
          "createdAt": "2023-02-06T18:46:59Z",
          "updatedAt": "2023-02-06T18:46:59Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "\\\\ is what is used in Section 3.8.3 of RFC8610. Doesn't matter much to me which way it goes though. This came up while trying the updated cddlc (even though this may not be new in that tool). [.] also makes cddlc happy too.",
          "createdAt": "2023-02-07T14:10:37Z",
          "updatedAt": "2023-02-07T14:10:37Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> \\ is what is used in Section 3.8.3 of RFC8610. Doesn't matter much to me which way it goes though. This came up while trying the updated cddlc (even though this may not be new in that tool). [.] also makes cddlc happy too.\r\n\r\nI'll leave it at your (editor) discretion.  I am happy either way.",
          "createdAt": "2023-02-07T14:34:02Z",
          "updatedAt": "2023-02-07T14:34:02Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5MnpAa",
          "commit": {
            "abbreviatedOid": "8a67795"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-06T15:36:24Z",
          "updatedAt": "2023-02-06T15:36:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5MnqzL",
          "commit": {
            "abbreviatedOid": "8a67795"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "\ud83d\udea2 it!",
          "createdAt": "2023-02-06T15:39:39Z",
          "updatedAt": "2023-02-06T15:39:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5Mt9t9",
          "commit": {
            "abbreviatedOid": "97f8cb2"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thanks!\r\n\r\nThough I find the `\\\\.` CDDL-ism is a bit distracting.  Carsten's suggestion to use `[.]` would seem more readable?",
          "createdAt": "2023-02-07T13:37:21Z",
          "updatedAt": "2023-02-07T13:37:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 366,
      "id": "PR_kwDOCEWCXc5KwZwo",
      "title": "add CBOR tags to table in section 6.3 per Dave Thaler's suggestion",
      "url": "https://github.com/ietf-rats-wg/eat/pull/366",
      "state": "CLOSED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-02-25T12:38:42Z",
      "updatedAt": "2023-03-18T22:39:49Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "08c91d843ec80293c91717be8c8704c3cd5ac926",
      "headRepository": "carl-wallace/eat",
      "headRefName": "profile_table",
      "headRefOid": "699549246f377264fa8c19394147a20e27c36bd6",
      "closedAt": "2023-03-18T22:39:49Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 367,
      "id": "PR_kwDOCEWCXc5MCMvZ",
      "title": "minor edits to submods section and to appendix f",
      "url": "https://github.com/ietf-rats-wg/eat/pull/367",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- change text in submods section to refer to an attester generating evidence (instead of attestation results). \r\n- typo fix in submods section. \r\n- delete a sentence in appendix f per feedback from dave thaler (sentence mentioned inclusion of reference values in an endorsement, which is not consistent with definition of endorsement)",
      "createdAt": "2023-03-14T19:23:06Z",
      "updatedAt": "2023-03-20T15:43:11Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "08c91d843ec80293c91717be8c8704c3cd5ac926",
      "headRepository": "carl-wallace/eat",
      "headRefName": "minor_edits",
      "headRefOid": "9a574f3ae1b894a4ce60ec5005d733f348684c20",
      "closedAt": "2023-03-18T22:08:07Z",
      "mergedAt": "2023-03-18T22:08:07Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "10a73736583bd4ab42177cc3c31ccd19803d9eec"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5QJDhR",
          "commit": {
            "abbreviatedOid": "9a574f3"
          },
          "author": "dthaler",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-03-16T19:11:04Z",
          "updatedAt": "2023-03-16T19:11:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 368,
      "id": "PR_kwDOCEWCXc5Med4J",
      "title": "address editorial items from AD review",
      "url": "https://github.com/ietf-rats-wg/eat/pull/368",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-03-20T17:45:30Z",
      "updatedAt": "2023-04-24T19:53:49Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "91c3c2124602b5d3336e4591d81d1c662086bd3a",
      "headRepository": "carl-wallace/eat",
      "headRefName": "adrev1",
      "headRefOid": "3b116ac6ea8fe2005220268386e95922cd02dd25",
      "closedAt": "2023-04-24T19:53:48Z",
      "mergedAt": "2023-04-24T19:53:48Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "e1c82ab645f1463e1871116188aa5fbde1c287a1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Qa7Im",
          "commit": {
            "abbreviatedOid": "883d690"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-03-20T19:08:20Z",
          "updatedAt": "2023-04-14T00:03:08Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Probably should take the same approach as this: https://www.iana.org/assignments/media-types/application/vnd.cyclonedx+xml  which references the overall website and a specific version.",
              "createdAt": "2023-03-20T19:08:20Z",
              "updatedAt": "2023-04-14T00:03:08Z"
            },
            {
              "originalPosition": 183,
              "body": "\"eat_nonce\" is only the name for JWTs, not for CWTs. We didn't change it for CWT to \"eat_nonce\" because it was pre-registered as \"nonce\" (and perhaps some other reason I can't recall; there are probably email threads or previous GitHub issues for this). The document primarily use the term \"EAT nonce\".",
              "createdAt": "2023-03-20T19:26:29Z",
              "updatedAt": "2023-04-14T00:03:08Z"
            },
            {
              "originalPosition": 77,
              "body": "The normative text addressing this is in section 4. It is text copied from CWT and JWT and I think it is very good. The text here in section 1.2 is just introductory non-normative. I'd like this change to be reversed. ",
              "createdAt": "2023-04-13T04:17:27Z",
              "updatedAt": "2023-04-14T00:03:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5SnbTi",
          "commit": {
            "abbreviatedOid": "883d690"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-14T19:11:54Z",
          "updatedAt": "2023-04-14T19:12:03Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "https://github.com/ietf-rats-wg/eat/pull/387",
              "createdAt": "2023-04-14T19:11:54Z",
              "updatedAt": "2023-04-14T19:12:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Sq5Uj",
          "commit": {
            "abbreviatedOid": "883d690"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-16T14:27:16Z",
          "updatedAt": "2023-04-16T14:27:16Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "No change given this is going away in #386 anyway.",
              "createdAt": "2023-04-16T14:27:16Z",
              "updatedAt": "2023-04-16T14:27:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Sq5Ze",
          "commit": {
            "abbreviatedOid": "883d690"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-16T14:29:26Z",
          "updatedAt": "2023-04-16T14:29:26Z",
          "comments": [
            {
              "originalPosition": 183,
              "body": "Changed to \"EAT nonce\".",
              "createdAt": "2023-04-16T14:29:26Z",
              "updatedAt": "2023-04-16T14:29:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Sq5bt",
          "commit": {
            "abbreviatedOid": "883d690"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-16T14:30:29Z",
          "updatedAt": "2023-04-16T14:30:29Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Reverted per your request.",
              "createdAt": "2023-04-16T14:30:29Z",
              "updatedAt": "2023-04-16T14:30:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Sq5ng",
          "commit": {
            "abbreviatedOid": "883d690"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-16T14:32:17Z",
          "updatedAt": "2023-04-16T14:32:17Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "I am assuming you are saying \"leave it as-is and #387 will apply changes I prefer\".",
              "createdAt": "2023-04-16T14:32:17Z",
              "updatedAt": "2023-04-16T14:32:17Z"
            }
          ]
        }
      ]
    },
    {
      "number": 369,
      "id": "PR_kwDOCEWCXc5MsVfG",
      "title": "Clarifications for UEIDs",
      "url": "https://github.com/ietf-rats-wg/eat/pull/369",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This splits the requires for creation of UEIDs from the requirements for consumption. There is some other rearrangement of the text.\r\n\r\nThis changes nothing about the definition of a UEID. It is just clarifications in the definition and requirements.",
      "createdAt": "2023-03-23T01:42:41Z",
      "updatedAt": "2023-04-24T19:35:24Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "143cc15ecddc10a5a315ec08c271a7595dcdf2c7",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ueid-clarify",
      "headRefOid": "504a0ec1ed4e3efc5d2b7529e8ccb466e058f9b5",
      "closedAt": "2023-04-24T19:35:20Z",
      "mergedAt": "2023-04-24T19:35:20Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "91c3c2124602b5d3336e4591d81d1c662086bd3a"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 370,
      "id": "PR_kwDOCEWCXc5NIGn2",
      "title": "Terminology cleanup for 'format' and 'encoding'",
      "url": "https://github.com/ietf-rats-wg/eat/pull/370",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Use \"encoding\" not \"format\" when referring to CBOR or JSON serialization. \r\n\r\nA few other related improvements.",
      "createdAt": "2023-03-29T05:18:16Z",
      "updatedAt": "2023-04-24T18:55:46Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "10a73736583bd4ab42177cc3c31ccd19803d9eec",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "cbor-format",
      "headRefOid": "f311a3ba07e0d0cdcf222cfa8245b82a4590b12e",
      "closedAt": "2023-04-24T18:55:41Z",
      "mergedAt": "2023-04-24T18:55:41Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "dca73e6cee7d1732323ccad8faae12ad983305b7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 371,
      "id": "PR_kwDOCEWCXc5NIKku",
      "title": "Fixes for the location claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/371",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This makes the main references for the location claim the W3C API rather than WGS84. WGS84 doesn't define things like altitude accuracy.\r\n\r\nThis clarifies the need for a ticker for the age claim and that it is in seconds.\r\n\r\nNote also that there was a question about the basis of the timestamp claim. No change was made because it is defined in the CDDL as referring to RFC 8949 for the definition of time (1970 epoch).",
      "createdAt": "2023-03-29T05:39:54Z",
      "updatedAt": "2023-04-24T20:04:36Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "e1c82ab645f1463e1871116188aa5fbde1c287a1",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ticker",
      "headRefOid": "02fecdde36f601bf266c799a19aef0755045b9f4",
      "closedAt": "2023-04-24T20:04:36Z",
      "mergedAt": "2023-04-24T20:04:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "cf59c1e6507ead961a3cb0837eb8805a1bbb6352"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5SIKwA",
          "commit": {
            "abbreviatedOid": "bc1a866"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-10T17:34:30Z",
          "updatedAt": "2023-04-10T17:34:31Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Suggested change:\r\nIf the entity doesn't have a clock with the current time but has a means to measure the time interval between the acquisition of the location and the token creation, then age may be reported instead.\r\n\r\nHow would the entity know if the time is \"current\"? The earlier text re: no clock or an unset clock seemed better.",
              "createdAt": "2023-04-10T17:34:30Z",
              "updatedAt": "2023-04-10T17:34:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Sxp7b",
          "commit": {
            "abbreviatedOid": "bc1a866"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-17T18:44:39Z",
          "updatedAt": "2023-04-17T18:44:40Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Made change. Tx.",
              "createdAt": "2023-04-17T18:44:39Z",
              "updatedAt": "2023-04-17T18:44:40Z"
            }
          ]
        }
      ]
    },
    {
      "number": 372,
      "id": "PR_kwDOCEWCXc5N2VLK",
      "title": "Fixes for manifest section and manifest type registrations",
      "url": "https://github.com/ietf-rats-wg/eat/pull/372",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-07T17:19:29Z",
      "updatedAt": "2023-05-02T17:49:37Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "de12f4d97d935bfbedff29dba997ae2bdd895930",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "manifest-fix",
      "headRefOid": "f67322af8b315e9b635e43087adf4ff8aec248b4",
      "closedAt": "2023-05-02T17:49:37Z",
      "mergedAt": "2023-05-02T17:49:37Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "90d9102108a997813887d1a7d096b09e1305635d"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Don't think this addresses the original AD comment.  Can we remove all media type registrations specific to SBOM formats?  See https://github.com/ietf-rats-wg/eat/issues/378.",
          "createdAt": "2023-04-10T16:51:22Z",
          "updatedAt": "2023-04-10T16:51:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5SIQc6",
          "commit": {
            "abbreviatedOid": "a3b5de0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-10T17:54:04Z",
          "updatedAt": "2023-04-10T17:54:04Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "This doesn't really address the comment from the AD review \"If the manufacturer's signature isn't included, how would one know that it is signed?\" Maybe delete this sentence and restate to say a signature MAY be removed.\r\n\r\nManifest signatures MAY be removed in cases where an EAT's signature is deemed sufficient.",
              "createdAt": "2023-04-10T17:54:04Z",
              "updatedAt": "2023-04-10T17:54:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5SIuWM",
          "commit": {
            "abbreviatedOid": "a3b5de0"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-10T19:26:11Z",
          "updatedAt": "2023-04-10T19:26:11Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I don't think it is necessary for the consumer to know that the manifest had a signature and it was removed when it was put I the EAT. We don't need any protocol items or even any discussion for that. All this is trying to say is is that the manifest signature is valuable even though EAT is signed and that sometimes the only thing will be the EAT signature.",
              "createdAt": "2023-04-10T19:26:11Z",
              "updatedAt": "2023-04-10T19:26:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5SIw_Z",
          "commit": {
            "abbreviatedOid": "a3b5de0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-10T19:36:09Z",
          "updatedAt": "2023-04-10T19:36:09Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "OK. Then drop the mention of signatures and leave that to CoSWID (or other). That also would address the comment. It seems odd to me to address the comment \"If the manufacturer's signature isn't included, how would one know that it is signed?\" with a sentence that beings \"When signed manifests are put into an EAT\" and concludes by noting the signature might be stripped. If the signature is not there, how does one know \"a signed manifest\" was put into the EAT?",
              "createdAt": "2023-04-10T19:36:09Z",
              "updatedAt": "2023-04-10T19:36:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 373,
      "id": "PR_kwDOCEWCXc5N5H9h",
      "title": "submod -> submodule",
      "url": "https://github.com/ietf-rats-wg/eat/pull/373",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix a few occurrences of \"submod\".",
      "createdAt": "2023-04-09T18:50:50Z",
      "updatedAt": "2023-04-24T18:56:10Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "10a73736583bd4ab42177cc3c31ccd19803d9eec",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "submod-word",
      "headRefOid": "a444ec21ff4c6ded6e026036a8e7adb2c219321f",
      "closedAt": "2023-04-24T18:56:05Z",
      "mergedAt": "2023-04-24T18:56:05Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2af1fdaa1a9bd35b4aafe9ef41660058cb370722"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 374,
      "id": "PR_kwDOCEWCXc5N5Iqd",
      "title": "Remove suggestion about debug claims absence",
      "url": "https://github.com/ietf-rats-wg/eat/pull/374",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is to address Roman's AD review comment.\r\n\r\nThe alternative would be to add text like this:\r\n\r\n> Knowing debug status may be very important for some high-security use cases. If the dbgstat\r\n> claim is absent, those use cases may consider assuming absence means that the debug facilities are enabled.",
      "createdAt": "2023-04-09T19:02:59Z",
      "updatedAt": "2023-04-24T18:57:38Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "10a73736583bd4ab42177cc3c31ccd19803d9eec",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "debug-default",
      "headRefOid": "f5d04c20b8b8c32aa05d6c1de6d89b285782ccfc",
      "closedAt": "2023-04-24T18:57:32Z",
      "mergedAt": "2023-04-24T18:57:32Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "143cc15ecddc10a5a315ec08c271a7595dcdf2c7"
      },
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "The proposed deletion seems sufficient to me.",
          "createdAt": "2023-04-10T17:59:07Z",
          "updatedAt": "2023-04-10T17:59:07Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 375,
      "id": "PR_kwDOCEWCXc5N5KwL",
      "title": "Remove hash-based OEMID",
      "url": "https://github.com/ietf-rats-wg/eat/pull/375",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The hash-based OEMID is removed because I think many may get it wrong and it is hard to explain how to get it right.\r\n\r\nThe input to the hash needs to identify the OEM globally.  The text about 96 bits of entropy is confusing. It's not 96 bits as in the output of an RNG. It's 96 bits in some space of global OEM identifiers.\r\n\r\nThe one use I can think of for it is when the the device has a domain name of the OEM handy. They can run that through the hash and get a good globally unique OEM ID. The uniqueness is coming from the fact that domain names are managed to be globally unique by a central authority.\r\n\r\nBut maybe we should just have an OEM ID type that is a DNS name or the hash of a DNS name?\r\n\r\n",
      "createdAt": "2023-04-09T19:48:00Z",
      "updatedAt": "2023-04-25T19:56:07Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "cf59c1e6507ead961a3cb0837eb8805a1bbb6352",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "oemid-hash",
      "headRefOid": "7ff37373c6f5622bbf3eadf870c0b3665486caf8",
      "closedAt": "2023-04-25T19:56:06Z",
      "mergedAt": "2023-04-25T19:56:06Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9c66c70cc0d9365ff13fb2a3ba952832b90e5a50"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 376,
      "id": "PR_kwDOCEWCXc5N5LOA",
      "title": "require presence of hwmodel, swname claims",
      "url": "https://github.com/ietf-rats-wg/eat/pull/376",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This change requires the presence of the \"oemid\" claim if the \"hwmodel\" is present and the present of the \"hwmodel\" claim is the \"hwversion\" claim is present. Same for \"swversion\" and \"swname\".\r\n\r\nAt first I was thinking to be flexible and generous to allow variability here, but now I'm thinking it is better to be more specific and strict. It will make the token ecosystem more useful to the consumer.",
      "createdAt": "2023-04-09T19:57:39Z",
      "updatedAt": "2023-04-25T20:12:56Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9c66c70cc0d9365ff13fb2a3ba952832b90e5a50",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "hwmodel",
      "headRefOid": "3309e3fe30f2ceed36054b34d5921290b096e4eb",
      "closedAt": "2023-04-25T20:12:51Z",
      "mergedAt": "2023-04-25T20:12:51Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "83b4d8918a4047ebda8621ee25555d225bcda6ed"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 381,
      "id": "PR_kwDOCEWCXc5N9btQ",
      "title": "Add further info on DLOA retrieval security",
      "url": "https://github.com/ietf-rats-wg/eat/pull/381",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is to address AD review comment.\r\n\r\n(I had to review the DLOAs document myself to be sure all was well. It was. This is only describes how the security is achieved. No change).",
      "createdAt": "2023-04-10T19:48:28Z",
      "updatedAt": "2023-05-02T03:49:56Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "10a73736583bd4ab42177cc3c31ccd19803d9eec",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "dloa_sec",
      "headRefOid": "86d4c392e634f641a5c904a3cd0b20e015670f88",
      "closedAt": "2023-05-02T03:49:33Z",
      "mergedAt": "2023-05-02T03:49:33Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "33116be3365a0c0c16e7886fe37a2df3d455032e"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "The DLOA download is made by the Verifier or RP. Can't think of why that would be SHOULD NOT for them.",
          "createdAt": "2023-04-17T18:48:09Z",
          "updatedAt": "2023-04-17T18:48:09Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "OK. Then probably worth mentioning that the consumer of the claim MAY be able to mutually authenticate to the resource to obtain the DLOA.",
          "createdAt": "2023-04-17T19:24:40Z",
          "updatedAt": "2023-04-17T19:24:40Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "TLS server authentication here is so that the Verifier knows the DLOA is authentic. That's really important so we're just mentioning it so thoughtful readers will have that question answered without going to the DLOA document. The actual requirement comes from DLOA.\r\n\r\nI don't think we need to mention client auth here one way or the other. It's not critical to the security of the DLOA and the DLOA document covers it. (The TLS client authentication here is in case the DLOA registrar wishes to restrict who can see DLOAs or a particular DLOA. Since many products that might have DLOAs proudly publish there certifications in the product literature, this doesn't seem important to mention. It is discussed in the DLOA document)\r\n\r\nI think the text is fine as is.",
          "createdAt": "2023-04-26T18:02:02Z",
          "updatedAt": "2023-04-26T18:02:02Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "OK",
          "createdAt": "2023-05-01T19:14:46Z",
          "updatedAt": "2023-05-01T19:14:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Sq6Xx",
          "commit": {
            "abbreviatedOid": "86d4c39"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "The TLS recommendation in the DLOA spec specifically references mutually authenticated TLS for use in some cases. Ought that be a SHOULD NOT in the EAT context?",
          "createdAt": "2023-04-16T14:53:28Z",
          "updatedAt": "2023-04-16T14:53:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 382,
      "id": "PR_kwDOCEWCXc5N-2a1",
      "title": "Normative language for standard constrained profile",
      "url": "https://github.com/ietf-rats-wg/eat/pull/382",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses AD review comment.",
      "createdAt": "2023-04-11T02:48:43Z",
      "updatedAt": "2023-04-25T20:28:47Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "83b4d8918a4047ebda8621ee25555d225bcda6ed",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "con-dev-pro",
      "headRefOid": "043723b288bbd0f6272a5f4f82076649132d2fcf",
      "closedAt": "2023-04-25T20:28:42Z",
      "mergedAt": "2023-04-25T20:28:42Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "c5903eb63cd1af1ed119ade03134abb5a62493f1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5S5B-O",
          "commit": {
            "abbreviatedOid": "3cf4d28"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T18:10:23Z",
          "updatedAt": "2023-04-18T18:11:35Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nFor example, if a kid (key identifier) or UEID is not used for key identification, it is not in conformance with this profile.\r\n```",
              "createdAt": "2023-04-18T18:10:23Z",
              "updatedAt": "2023-04-18T18:11:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 383,
      "id": "PR_kwDOCEWCXc5ODrzn",
      "title": "Rename and clarify scope of Appendix E",
      "url": "https://github.com/ietf-rats-wg/eat/pull/383",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-11T19:58:24Z",
      "updatedAt": "2023-04-25T20:35:52Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "c5903eb63cd1af1ed119ade03134abb5a62493f1",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "claims-char",
      "headRefOid": "946b852be4e1a3a77329206da12ed0613d6ab1db",
      "closedAt": "2023-04-25T20:35:46Z",
      "mergedAt": "2023-04-25T20:35:46Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "80e03290deae1185dfdce03daaf3336566f51560"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 384,
      "id": "PR_kwDOCEWCXc5OKP0v",
      "title": "Expand on difference between authentiation and attestation",
      "url": "https://github.com/ietf-rats-wg/eat/pull/384",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I'm trying to convey this: if you the reader do not understand the security model for attestation, you should go read about it elsewhere to help you understand EAT.\r\n\r\nI'm trying to use contrast with authentication to make that point. I'm not sure if it is working. Maybe a different approach would work better? \r\n\r\nHow about this?\r\n\r\n> In the payment example just mentioned, the payment limit from limited trust is because of limited security of the payment terminal, phone or device used to make the payment, not the user's credit rating or bank account balance.\r\n\r\nI also do not wish to put a definition of the attestation security model in EAT. EAT is just a protocol document. The RATS architecture document is where the attestation security model is defined.  If we had to, we could put a definition of the attestation security model in EAT, but I would want it in an appendix.\r\n\r\n\r\n",
      "createdAt": "2023-04-12T18:35:27Z",
      "updatedAt": "2023-04-26T18:07:41Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "10a73736583bd4ab42177cc3c31ccd19803d9eec",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "att-auth",
      "headRefOid": "d4f32907d46f90ddf33dde0f7e435e700395ddfa",
      "closedAt": "2023-04-26T18:07:32Z",
      "mergedAt": "2023-04-26T18:07:32Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8c9f541bb9a8ed25aac8f082837d0d8f54947150"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Added the commas. Thx.\r\n\r\nPub keys in TLS server certs, PGP keys and such are long-lived authentication keys.",
          "createdAt": "2023-04-17T18:53:13Z",
          "updatedAt": "2023-04-17T18:53:13Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "One addition might be to say something like \"In the financial transaction example, authentication is what sets up for bank balance check and credit risk check and attestation is what sets up for a limit based on the type of terminal is being used\". \r\n\r\nI'm also wondering if this should move to an appendix that goes on for several paragraphs about what attestation (in the broad non-TPM) sense is about rather than trying to rely on RATS Architecture.",
          "createdAt": "2023-04-17T18:56:12Z",
          "updatedAt": "2023-04-17T18:56:12Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Server keys for TLS are generally much shorter lived than keys in an attestation. I don't see where the financial example adds any clarity and would not add those words.",
          "createdAt": "2023-04-17T19:30:42Z",
          "updatedAt": "2023-04-17T19:30:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Sq6lI",
          "commit": {
            "abbreviatedOid": "4788f36"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Add a comma after \"For authentication\" and \"For attestation\". Since lifecycle is mentioned in the first new sentence, it's probably worth mentioning authentication keys typically have a relatively short life compared to attestation keys.",
          "createdAt": "2023-04-16T14:59:05Z",
          "updatedAt": "2023-04-16T14:59:05Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5S5ArB",
          "commit": {
            "abbreviatedOid": "d4f3290"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T18:06:31Z",
          "updatedAt": "2023-04-18T18:06:59Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nFor attestation, the device identity keys are associated with specific devices and are configured by device manufacturers.\r\n```",
              "createdAt": "2023-04-18T18:06:31Z",
              "updatedAt": "2023-04-18T18:06:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5TCMex",
          "commit": {
            "abbreviatedOid": "d4f3290"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-20T01:35:12Z",
          "updatedAt": "2023-04-20T01:35:13Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "While I know device identity is a commonly used term in some circles, neither RATS Architecture nor EAT define it or use it, so I'd prefer not to make this change.",
              "createdAt": "2023-04-20T01:35:13Z",
              "updatedAt": "2023-04-20T01:35:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 385,
      "id": "PR_kwDOCEWCXc5OMMXp",
      "title": "Improved bundle definition and improved use of the terms 'token' and 'message'",
      "url": "https://github.com/ietf-rats-wg/eat/pull/385",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\"Message\" is used very sparingly to help describe what a token and for a detached EAT bundle.\r\n\r\n\"EAT\" and \"token\" are used interchangeably and refer to a CWT or JWT (and a UCCS and UJCS).\r\n\r\nRemoved most use of \"full token\".",
      "createdAt": "2023-04-13T03:30:27Z",
      "updatedAt": "2023-05-03T21:19:08Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "34d6b17f7e377c9a801f23ec126b28dd5dd8ca50",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "msg-tok",
      "headRefOid": "8188bc91a289ddefac7fb7c8b96912e8b27e3cd9",
      "closedAt": "2023-05-03T21:18:58Z",
      "mergedAt": "2023-05-03T21:18:58Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "026191cf3b0b679ea34f858feca1dd686dd8af8c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5S43U6",
          "commit": {
            "abbreviatedOid": "f46c54d"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T17:44:10Z",
          "updatedAt": "2023-04-18T17:54:56Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nIt can occur any place that a CWT or JWT occurs.\r\n```",
              "createdAt": "2023-04-18T17:44:10Z",
              "updatedAt": "2023-04-18T17:54:56Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nIt may be contained within an EAT submodule.\r\n```",
              "createdAt": "2023-04-18T17:45:29Z",
              "updatedAt": "2023-04-18T17:54:56Z"
            },
            {
              "originalPosition": 82,
              "body": "```suggestion\r\nThe first part is encoded as a traditional EAT.\r\n```",
              "createdAt": "2023-04-18T17:48:21Z",
              "updatedAt": "2023-04-18T17:54:56Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nThis EAT MUST have at least one submodule that is a digest of a detached EAT bundle.\r\n```",
              "createdAt": "2023-04-18T17:49:29Z",
              "updatedAt": "2023-04-18T17:54:56Z"
            },
            {
              "originalPosition": 84,
              "body": "Is isn't clear if the detatched claims set must be encoded using the same encoding as was used for the bounding EAT. Can the detatched EAT bundle be JSON encoded, while the EAT containing the digest of the bundle be CBOR encoded?",
              "createdAt": "2023-04-18T17:51:10Z",
              "updatedAt": "2023-04-18T17:54:56Z"
            },
            {
              "originalPosition": 85,
              "body": "Does 'it' refer to the EAT token or the detached EAT bundle? ",
              "createdAt": "2023-04-18T17:53:02Z",
              "updatedAt": "2023-04-18T17:54:56Z"
            },
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nThe second part is a map/object containing the detached Claims-Sets corresponding to their digests in the EAT.\r\n```",
              "createdAt": "2023-04-18T17:54:20Z",
              "updatedAt": "2023-04-18T17:54:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5TmlyL",
          "commit": {
            "abbreviatedOid": "f46c54d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T19:04:25Z",
          "updatedAt": "2023-04-26T19:04:25Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "I think \"is an encoded EAT\" is quite accurate, but a little hard to get your head around.\r\n\r\nIt can be either JSON or CBOR-encoded. When CBOR is can be either a CWT or a UCCS and it is bstr wrapped. When JSON it is either a JWT or a UJCS. Note that UCCS and UJCS are not defined in this document. It could also be something else defined outside this document.\r\n\r\nI tried using the term \"full top-level token\" to emphasize this, but I think \"encoded EAT\" is more accurate.\r\n\r\nI don't like \"traditional EAT\" because the first part can be something not defined in the EAT document (e.g., UCCS or other future things (that I hope we don't defined)).\r\n\r\nI don't want to change the wording here because I think it is precise and clean and the CDDL unfolds all the options here.\r\n\r\n\r\n\r\n",
              "createdAt": "2023-04-26T19:04:25Z",
              "updatedAt": "2023-04-26T19:04:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Tmt52",
          "commit": {
            "abbreviatedOid": "f46c54d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T19:25:02Z",
          "updatedAt": "2023-04-26T19:25:02Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "Added a reference to detached submodule digest section.",
              "createdAt": "2023-04-26T19:25:02Z",
              "updatedAt": "2023-04-26T19:25:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5TmuNa",
          "commit": {
            "abbreviatedOid": "f46c54d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T19:26:01Z",
          "updatedAt": "2023-04-26T19:26:01Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "Added a comment that the bundle can be either CBOR or JSON which should clarify that mixing is allowed.\r\n\r\nThe mixing of encoding is very explicitly allowed here to accommodate composite devices where you don't control the serialization format of attesters in the components used to make up the composite device.",
              "createdAt": "2023-04-26T19:26:01Z",
              "updatedAt": "2023-04-26T19:26:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Tm1Uu",
          "commit": {
            "abbreviatedOid": "f46c54d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T19:43:21Z",
          "updatedAt": "2023-04-26T19:43:21Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "See latest commit.",
              "createdAt": "2023-04-26T19:43:21Z",
              "updatedAt": "2023-04-26T19:43:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Tm1bI",
          "commit": {
            "abbreviatedOid": "f46c54d"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T19:43:42Z",
          "updatedAt": "2023-04-26T19:43:42Z",
          "comments": [
            {
              "originalPosition": 85,
              "body": "See latest commit",
              "createdAt": "2023-04-26T19:43:42Z",
              "updatedAt": "2023-04-26T19:43:42Z"
            }
          ]
        }
      ]
    },
    {
      "number": 386,
      "id": "PR_kwDOCEWCXc5OWtFM",
      "title": "Remove registration and other use of SPDX and CycloneDX",
      "url": "https://github.com/ietf-rats-wg/eat/pull/386",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This doesn't preclude the user of SPDX and CycloneDX at all. Manifests is a pluggable claim so any SBOM can be used as long as a CoAP content type is registered for it.\r\n\r\nIt seems that these registrations are better done elsewhere and by people expert with these two SBOMs.\r\n\r\nThis also simplifies and shortens the EAT draft which is a good thing.",
      "createdAt": "2023-04-14T18:31:25Z",
      "updatedAt": "2023-04-26T19:55:21Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8c9f541bb9a8ed25aac8f082837d0d8f54947150",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "no-sbom",
      "headRefOid": "0ada3685d055dc470700b9d2ca5c35129da4edf8",
      "closedAt": "2023-04-26T19:55:16Z",
      "mergedAt": "2023-04-26T19:55:16Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9e64965f62dc30dd82badaddbd78776ad2f5795d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 387,
      "id": "PR_kwDOCEWCXc5OW3Qm",
      "title": "Clarify relation to RFC 4949 terms",
      "url": "https://github.com/ietf-rats-wg/eat/pull/387",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "RFC 4949 system component == EAT entity\r\nRFC 4949 system entity ~= EAT entity\r\nRFC 4949 entity ~= EAT entity\r\n\r\nNote that RFC 4949 system entity can be an RFC 4949 subsystem which in turn can contain an RFC 4949 system component. So the equivalences above work.",
      "createdAt": "2023-04-14T19:11:24Z",
      "updatedAt": "2023-05-02T03:55:26Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9e64965f62dc30dd82badaddbd78776ad2f5795d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "4949",
      "headRefOid": "13bc6b176cd849472a30e85c309fdbe6493e7ab2",
      "closedAt": "2023-05-02T03:55:20Z",
      "mergedAt": "2023-05-02T03:55:20Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "de12f4d97d935bfbedff29dba997ae2bdd895930"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "@nedsmith and @carl-wallace -- this is a compromise between various proposals you made relative to draft-19. Note that the diff of this PR is not the same as against draft-19 because Carl's proposal already got merged.",
          "createdAt": "2023-04-27T05:16:11Z",
          "updatedAt": "2023-04-27T05:16:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5StNsw",
          "commit": {
            "abbreviatedOid": "f996574"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-17T08:57:25Z",
          "updatedAt": "2023-04-17T08:57:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5S40Gj",
          "commit": {
            "abbreviatedOid": "f996574"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T17:36:57Z",
          "updatedAt": "2023-04-18T17:40:31Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nNote that {{RFC4949}} defines  \"entity\" and \"system entity\" as synonyms, and may be a person or organization in addition to being a system component.\r\n```",
              "createdAt": "2023-04-18T17:36:58Z",
              "updatedAt": "2023-04-18T17:40:31Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2023-04-18T17:37:11Z",
              "updatedAt": "2023-04-18T17:40:31Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nThe hardware and software that implement a web site server or service may be an entity in the EAT sense, but the organization that operates, maintains or hosts the web site is not an entity.\r\n```",
              "createdAt": "2023-04-18T17:40:22Z",
              "updatedAt": "2023-04-18T17:40:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5T6_1M",
          "commit": {
            "abbreviatedOid": "13bc6b1"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-01T19:12:44Z",
          "updatedAt": "2023-05-01T19:12:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 388,
      "id": "PR_kwDOCEWCXc5OXAYR",
      "title": "Clarify measurement result-id",
      "url": "https://github.com/ietf-rats-wg/eat/pull/388",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Text was a little vague...\r\n\r\nThis also renames \"results-id\" to \"result-id\" as it seems much more correct.",
      "createdAt": "2023-04-14T19:46:03Z",
      "updatedAt": "2023-05-02T17:52:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "90d9102108a997813887d1a7d096b09e1305635d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "results-id",
      "headRefOid": "6017961720a2fc9c2b5a5c19b1b7c893e3bc006a",
      "closedAt": "2023-05-02T17:51:43Z",
      "mergedAt": "2023-05-02T17:51:43Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "ae4c78f6243643fca572c9121999457b8ac9c685"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5StNZb",
          "commit": {
            "abbreviatedOid": "9a0c9ad"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-17T08:56:42Z",
          "updatedAt": "2023-04-17T08:56:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5S4vlV",
          "commit": {
            "abbreviatedOid": "9a0c9ad"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T17:24:12Z",
          "updatedAt": "2023-04-18T17:26:34Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nAn individual measurement result (individual-result) is an array consisting of two elements, an identifier of the measurement (result-id) and an enumerated type of the result (result).\r\n```",
              "createdAt": "2023-04-18T17:24:12Z",
              "updatedAt": "2023-04-18T17:26:34Z"
            },
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nDifferent measurement systems may measure different Target Environments, or perhaps measure the same Target Environment differently.\r\n```",
              "createdAt": "2023-04-18T17:25:17Z",
              "updatedAt": "2023-04-18T17:26:34Z"
            },
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nIt is up to each Attesting Environment to define the measurement identifiers (result-id) for the measurements it reports.\r\n```",
              "createdAt": "2023-04-18T17:26:27Z",
              "updatedAt": "2023-04-18T17:26:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5To3HF",
          "commit": {
            "abbreviatedOid": "9a0c9ad"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-27T05:26:45Z",
          "updatedAt": "2023-04-27T05:26:45Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "While the target of an attestation is a target environment, the target of a measurement system here is not necessary a target environment. This is for use in many other contexts than measured boot or measurements in the TCG sense.",
              "createdAt": "2023-04-27T05:26:45Z",
              "updatedAt": "2023-04-27T05:26:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5To3TW",
          "commit": {
            "abbreviatedOid": "9a0c9ad"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-27T05:27:47Z",
          "updatedAt": "2023-04-27T05:27:48Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Same comment as above. What is a measurement system is very open-ended here.",
              "createdAt": "2023-04-27T05:27:48Z",
              "updatedAt": "2023-04-27T05:27:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 389,
      "id": "PR_kwDOCEWCXc5OX33s",
      "title": "AD review:  clarify extensibility of \"intuse\" claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/389",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/ietf-rats-wg/eat/issues/379",
      "createdAt": "2023-04-15T03:32:57Z",
      "updatedAt": "2023-04-30T18:12:58Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "10a73736583bd4ab42177cc3c31ccd19803d9eec",
      "headRepository": "gmandyam/eat",
      "headRefName": "Issue-379",
      "headRefOid": "9afdcb583d0c38ebca8589a00f97b14adbef4597",
      "closedAt": "2023-04-30T18:12:58Z",
      "mergedAt": "2023-04-30T18:12:58Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "89193e4170ad40671c3d5a2ad0939e957f40b4bc"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Agree that it should be possible to define new values.\r\n\r\nI don't know if we can get away with saying that a registry can be created in the future, but am fine trying that.\r\n\r\nAnother thing possible here might be to say values above 64K are proprietary and below are reserved for a future IANA registry.\r\n\r\nAgree with the wording suggestions.",
          "createdAt": "2023-04-17T19:02:11Z",
          "updatedAt": "2023-04-17T19:02:11Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "There's a draft in LAMPS that has language on establishing a registry in the future (draft-ietf-lamps-header-protection).",
          "createdAt": "2023-04-17T19:32:01Z",
          "updatedAt": "2023-04-17T19:32:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Sq7CQ",
          "commit": {
            "abbreviatedOid": "c8df8ae"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-16T15:12:03Z",
          "updatedAt": "2023-04-16T15:12:03Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "EAT's should be EATs in the first sentence. I'd change the wording on the new language slightly:\r\n\r\n```\r\nFive possible values for \"intuse\" are currently defined, providing 5 different intended use indications. However, additional values can be defined and registered pending IANA-administered expert review (see {{iana-cons}}).\r\n```\r\n\r\nI don't think just referencing \"expert review\" answers the question regarding a registry, so I'd also add something about a possible future registry.\r\n\r\n```\r\nAt present, there is not a registry for \"intuse\" values. If a future Internet Draft defines any additional values, a registry should be created and initialized with the five values defined in this document plus any new values.\r\n```",
              "createdAt": "2023-04-16T15:12:03Z",
              "updatedAt": "2023-04-16T15:12:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Sq85T",
          "commit": {
            "abbreviatedOid": "c8df8ae"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-16T16:12:42Z",
          "updatedAt": "2023-04-16T16:12:42Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Please review updates",
              "createdAt": "2023-04-16T16:12:42Z",
              "updatedAt": "2023-04-16T16:12:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5StMoZ",
          "commit": {
            "abbreviatedOid": "13d1ac0"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-17T08:55:19Z",
          "updatedAt": "2023-04-17T08:55:33Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "\"additional values above 5\" reads slightly awkwardly to me. Maybe just \"additional values\"?",
              "createdAt": "2023-04-17T08:55:19Z",
              "updatedAt": "2023-04-17T08:55:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Stsq2",
          "commit": {
            "abbreviatedOid": "c8df8ae"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-17T10:10:03Z",
          "updatedAt": "2023-04-17T10:10:03Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Works for me. Thanks.",
              "createdAt": "2023-04-17T10:10:03Z",
              "updatedAt": "2023-04-17T10:10:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5SvS6j",
          "commit": {
            "abbreviatedOid": "13d1ac0"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-17T13:52:25Z",
          "updatedAt": "2023-04-17T13:52:26Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "@quic-jodonogh change made.",
              "createdAt": "2023-04-17T13:52:26Z",
              "updatedAt": "2023-04-17T13:52:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Tm9VY",
          "commit": {
            "abbreviatedOid": "ff00f58"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Agree in concept, but please make a few wording improvements.",
          "createdAt": "2023-04-26T20:01:20Z",
          "updatedAt": "2023-04-26T20:04:53Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Wording could improve here with less use of \"use\".",
              "createdAt": "2023-04-26T20:01:20Z",
              "updatedAt": "2023-04-26T20:04:53Z"
            },
            {
              "originalPosition": 10,
              "body": "Could improve the wording here and shorten a lot I think. Something like An IANA registry could be created to extend past the 5 values defined here.\"",
              "createdAt": "2023-04-26T20:04:16Z",
              "updatedAt": "2023-04-26T20:04:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5T3ZR7",
          "commit": {
            "abbreviatedOid": "ff00f58"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-29T22:04:22Z",
          "updatedAt": "2023-04-29T22:04:22Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Please see latest changes",
              "createdAt": "2023-04-29T22:04:22Z",
              "updatedAt": "2023-04-29T22:04:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5T33z4",
          "commit": {
            "abbreviatedOid": "9afdcb5"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-30T18:06:17Z",
          "updatedAt": "2023-04-30T18:06:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 390,
      "id": "PR_kwDOCEWCXc5OX4Zv",
      "title": "AD review:  clarify sec cons discussion on nonces",
      "url": "https://github.com/ietf-rats-wg/eat/pull/390",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/ietf-rats-wg/eat/issues/377",
      "createdAt": "2023-04-15T03:45:32Z",
      "updatedAt": "2023-05-03T03:35:45Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "10a73736583bd4ab42177cc3c31ccd19803d9eec",
      "headRepository": "gmandyam/eat",
      "headRefName": "Issue-377",
      "headRefOid": "d497d5ec4d2602c1bd600b65f690bada75a890d3",
      "closedAt": "2023-05-03T03:35:45Z",
      "mergedAt": "2023-05-03T03:35:45Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "fd1bc8d796c779b1c06e17fda7c958f90d26d03d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Sq7Ed",
          "commit": {
            "abbreviatedOid": "b33048c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-16T15:13:06Z",
          "updatedAt": "2023-04-16T15:13:06Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5StLqs",
          "commit": {
            "abbreviatedOid": "b33048c"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-17T08:52:53Z",
          "updatedAt": "2023-04-17T08:52:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5StL3p",
          "commit": {
            "abbreviatedOid": "b33048c"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-17T08:53:25Z",
          "updatedAt": "2023-04-17T08:53:25Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5Tu3g2",
          "commit": {
            "abbreviatedOid": "b33048c"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-04-27T20:01:16Z",
          "updatedAt": "2023-04-27T20:02:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Don't think cryptographically-verifiable should be hyphenated.",
              "createdAt": "2023-04-27T20:01:16Z",
              "updatedAt": "2023-04-27T20:02:30Z"
            },
            {
              "originalPosition": 6,
              "body": "Maybe mention COSE encrypted too since that's in the above example and because the role of TLS here is more about privacy than authentication/integrity.",
              "createdAt": "2023-04-27T20:02:23Z",
              "updatedAt": "2023-04-27T20:02:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5T8daN",
          "commit": {
            "abbreviatedOid": "d497d5e"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-05-02T03:57:29Z",
          "updatedAt": "2023-05-02T03:57:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 391,
      "id": "PR_kwDOCEWCXc5OZAAQ",
      "title": "Rework entity definition to align with RAT architecture",
      "url": "https://github.com/ietf-rats-wg/eat/pull/391",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-15T17:03:36Z",
      "updatedAt": "2023-05-03T03:54:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "de12f4d97d935bfbedff29dba997ae2bdd895930",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "entity_entity",
      "headRefOid": "b4531d39ca29883856ac5e4cd9bbb1967ed72cb5",
      "closedAt": "2023-05-03T03:54:30Z",
      "mergedAt": "2023-05-03T03:54:29Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "1371f9e3c8d4b944ec83908d2409b24b73f6e3ed"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Do we need to say anything at all about layered attestation as defined in RFC 9334?\r\n\r\nFor instance, with layered attestation the following requirement appears in the definition in RFC 9334:  \"The bottom layer of an Attester has an Attesting Environment that is typically designed to be immutable or difficult to modify by malicious code.\"  It is conceivable that a mutable attester that may be vulnerable to runtime modification by an attacker  (e.g. Android SafetyNet) could provide a EAT token with nesting.  It would not be an ideal implementation of EAT, but depending on the application it may be considered sufficient.  Tying EAT nesting to the 9334 definition of layered attestation may restrict intended applications of EAT.",
          "createdAt": "2023-04-16T16:22:34Z",
          "updatedAt": "2023-04-16T16:22:34Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I know layered attestation in 9334 is not the best description, but I think the text I proposed works OK and doesn't cause any problems. We'll definitely sail through better if we align as much as we can with 9334 and particularly if we don't make any fuss about it.\r\n\r\nLet me know if you think the text I propose has any problems.\r\n",
          "createdAt": "2023-04-17T19:08:34Z",
          "updatedAt": "2023-04-17T19:08:34Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5StLOF",
          "commit": {
            "abbreviatedOid": "2086efc"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-17T08:51:52Z",
          "updatedAt": "2023-04-17T08:51:53Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "This reads a bit awkwardly to me. Something like \"This mechanism allows one EAT to have several submodule EATs and supports multiple layers of nesting\".",
              "createdAt": "2023-04-17T08:51:52Z",
              "updatedAt": "2023-04-17T08:51:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Sxzl_",
          "commit": {
            "abbreviatedOid": "2086efc"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-17T19:05:09Z",
          "updatedAt": "2023-04-17T19:05:10Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Fixed.",
              "createdAt": "2023-04-17T19:05:09Z",
              "updatedAt": "2023-04-17T19:05:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5SyBUS",
          "commit": {
            "abbreviatedOid": "0997b31"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-04-17T19:47:26Z",
          "updatedAt": "2023-04-17T19:47:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5S4sNa",
          "commit": {
            "abbreviatedOid": "0997b31"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T17:14:53Z",
          "updatedAt": "2023-04-18T17:20:25Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nAn entity is equivalent to a Target Environment in an Attester as defined in [RATS.architecture].\r\n```",
              "createdAt": "2023-04-18T17:14:53Z",
              "updatedAt": "2023-04-18T17:20:25Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nLayered attestation and composite devices, as described in [RATS.architecture], are supported by a submodule mechanism (see {{submods}}).\r\n```",
              "createdAt": "2023-04-18T17:15:30Z",
              "updatedAt": "2023-04-18T17:20:25Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nThis mechanism allows one EAT to have nested submodules, each containing additional EAT structures that model a hierarchy of components.\r\n```",
              "createdAt": "2023-04-18T17:20:03Z",
              "updatedAt": "2023-04-18T17:20:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 392,
      "id": "PR_kwDOCEWCXc5Ogcnq",
      "title": "Clearly mark instructions to RFC Editor",
      "url": "https://github.com/ietf-rats-wg/eat/pull/392",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-17T18:24:17Z",
      "updatedAt": "2023-04-25T20:39:09Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "80e03290deae1185dfdce03daaf3336566f51560",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "rfc-editor",
      "headRefOid": "0083a2aa0402b0f94862238dd0a90b53d531ebeb",
      "closedAt": "2023-04-25T20:39:05Z",
      "mergedAt": "2023-04-25T20:39:05Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a16c03459ba2022685e94b7c87e09ad5b6dd866b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 393,
      "id": "PR_kwDOCEWCXc5OgfmW",
      "title": "Move verification key origin paragraph from appendix to sec cons",
      "url": "https://github.com/ietf-rats-wg/eat/pull/393",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-04-17T18:35:14Z",
      "updatedAt": "2023-05-03T21:01:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "ae4c78f6243643fca572c9121999457b8ac9c685",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "verf-key-sc",
      "headRefOid": "26243bb43f7149d637de44707fb963ec2b3309f2",
      "closedAt": "2023-05-03T21:01:29Z",
      "mergedAt": "2023-05-03T21:01:29Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "34d6b17f7e377c9a801f23ec126b28dd5dd8ca50"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5S4pnB",
          "commit": {
            "abbreviatedOid": "0900578"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-18T17:07:55Z",
          "updatedAt": "2023-04-18T17:12:07Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nFor example, the verifier may be configured with a root certificate or a master key by a trusted entity such as the verifier system administrator.\r\n```",
              "createdAt": "2023-04-18T17:07:55Z",
              "updatedAt": "2023-04-18T17:12:07Z"
            },
            {
              "originalPosition": 11,
              "body": "An X.509 certificate could be regarded as an Endorsement conceptual message. ",
              "createdAt": "2023-04-18T17:09:28Z",
              "updatedAt": "2023-04-18T17:12:07Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nOften an Endorsement, such as an X.509 certificate, carries more than just the verification key.\r\n```",
              "createdAt": "2023-04-18T17:10:20Z",
              "updatedAt": "2023-04-18T17:12:07Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nFor example, an X.509 certificate might have key usage constraints and an Endorsement might have Reference Values.\r\n```",
              "createdAt": "2023-04-18T17:11:12Z",
              "updatedAt": "2023-04-18T17:12:07Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nWhen this is the case, the key identifier must be either a protected header or in the payload, such that it is cryptographically bound to the EAT.\r\n```",
              "createdAt": "2023-04-18T17:11:41Z",
              "updatedAt": "2023-04-18T17:12:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5TmQjP",
          "commit": {
            "abbreviatedOid": "0900578"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T18:04:27Z",
          "updatedAt": "2023-04-26T18:04:27Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "The suggestion to capitalize these terms is contrary to comments received and acted upon last summer (from Eliot I think). The change took effect in -15.",
              "createdAt": "2023-04-26T18:04:27Z",
              "updatedAt": "2023-04-26T18:04:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Tu4r_",
          "commit": {
            "abbreviatedOid": "0900578"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-27T20:05:08Z",
          "updatedAt": "2023-04-27T20:05:09Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "The word \"trusted\" is intentionally never used in the EAT document because to me it is too subjective. Trusted for what purpose and against what level of attack?",
              "createdAt": "2023-04-27T20:05:09Z",
              "updatedAt": "2023-04-27T20:05:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Tu5Kt",
          "commit": {
            "abbreviatedOid": "0900578"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-27T20:06:48Z",
          "updatedAt": "2023-04-27T20:06:48Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Yes, probably lots of endorsements will be X.509, but we only have a conceptual definition of endorsement  yet so I prefer to leave it open.",
              "createdAt": "2023-04-27T20:06:48Z",
              "updatedAt": "2023-04-27T20:08:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Tu5vc",
          "commit": {
            "abbreviatedOid": "0900578"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-27T20:08:46Z",
          "updatedAt": "2023-04-27T20:08:46Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "Prefer to leave it open since we have only a conceptual definition of endorsement.",
              "createdAt": "2023-04-27T20:08:46Z",
              "updatedAt": "2023-04-27T20:08:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5Tu5zd",
          "commit": {
            "abbreviatedOid": "0900578"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-27T20:09:00Z",
          "updatedAt": "2023-04-27T20:09:00Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "Yes, we're using lower case.",
              "createdAt": "2023-04-27T20:09:00Z",
              "updatedAt": "2023-04-27T20:09:00Z"
            }
          ]
        }
      ]
    },
    {
      "number": 394,
      "id": "PR_kwDOCEWCXc5Sz--q",
      "title": "Clarification on new UEID types",
      "url": "https://github.com/ietf-rats-wg/eat/pull/394",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-12T20:01:39Z",
      "updatedAt": "2023-06-13T17:53:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "026191cf3b0b679ea34f858feca1dd686dd8af8c",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ueid-no-iana",
      "headRefOid": "2caf7556f02ff25ecef4690fe369d197c0827eb6",
      "closedAt": "2023-06-13T17:52:56Z",
      "mergedAt": "2023-06-13T17:52:56Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "598c287697a6ef30a229b94f1d1628f54a105a44"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": ">The different types of UEIDs accommodate different manufacturing processes, accommodate small UEIDs, provide an option that doesn't require registration fees and central administration.\r\n\r\nPlease add back 1), 2), 3).  ",
          "createdAt": "2023-06-12T23:10:03Z",
          "updatedAt": "2023-06-12T23:10:03Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 395,
      "id": "PR_kwDOCEWCXc5T88yA",
      "title": "Spelling / grammar fixes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/395",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-26T18:46:17Z",
      "updatedAt": "2023-06-29T17:52:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "598c287697a6ef30a229b94f1d1628f54a105a44",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "spelling",
      "headRefOid": "e1f3609bef540a6d69b2cc5369a9641bf2960f9e",
      "closedAt": "2023-06-29T17:52:31Z",
      "mergedAt": "2023-06-29T17:52:31Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "85bee9dd130dc85b3ae11cebf2aa01ebb685a89c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Zd5oJ",
          "commit": {
            "abbreviatedOid": "e1f3609"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-27T14:20:11Z",
          "updatedAt": "2023-06-27T14:20:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5ZpR-q",
          "commit": {
            "abbreviatedOid": "e1f3609"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-28T20:41:16Z",
          "updatedAt": "2023-06-28T20:41:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 396,
      "id": "PR_kwDOCEWCXc5T8814",
      "title": "MUST rather than must for freshness",
      "url": "https://github.com/ietf-rats-wg/eat/pull/396",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-26T18:46:28Z",
      "updatedAt": "2023-06-29T17:53:40Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "85bee9dd130dc85b3ae11cebf2aa01ebb685a89c",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "must-fresh",
      "headRefOid": "ce970afb573220c45e3469c835f977ee196ffa7e",
      "closedAt": "2023-06-29T17:53:36Z",
      "mergedAt": "2023-06-29T17:53:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "0c785a32de25946f50a156b7fdfa7be8239346cc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5ZY81x",
          "commit": {
            "abbreviatedOid": "df3cd76"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-26T23:45:30Z",
          "updatedAt": "2023-06-26T23:45:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5Zd6CV",
          "commit": {
            "abbreviatedOid": "df3cd76"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-27T14:20:44Z",
          "updatedAt": "2023-06-27T14:20:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5ZpS49",
          "commit": {
            "abbreviatedOid": "df3cd76"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-28T20:42:04Z",
          "updatedAt": "2023-06-28T20:42:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 397,
      "id": "PR_kwDOCEWCXc5T9BDM",
      "title": "Require equivalent encryption when relaying between multiple EAT cons\u2026",
      "url": "https://github.com/ietf-rats-wg/eat/pull/397",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026umers",
      "createdAt": "2023-06-26T18:56:55Z",
      "updatedAt": "2023-06-29T17:54:29Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "0c785a32de25946f50a156b7fdfa7be8239346cc",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "decrypt-recrypt",
      "headRefOid": "a3cf80ce8223133efa6a2e257e3600934da08cef",
      "closedAt": "2023-06-29T17:54:25Z",
      "mergedAt": "2023-06-29T17:54:25Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "454617749916738e8f9d92334f25b8cdbfdc5c2a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Zd6aa",
          "commit": {
            "abbreviatedOid": "73b8b3c"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-27T14:21:13Z",
          "updatedAt": "2023-06-27T14:21:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5ZpTp5",
          "commit": {
            "abbreviatedOid": "73b8b3c"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-28T20:42:45Z",
          "updatedAt": "2023-06-28T20:42:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 398,
      "id": "PR_kwDOCEWCXc5T9Fm1",
      "title": "Clarity that DLOAs must be authentic",
      "url": "https://github.com/ietf-rats-wg/eat/pull/398",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-26T19:06:36Z",
      "updatedAt": "2023-06-29T17:55:54Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "454617749916738e8f9d92334f25b8cdbfdc5c2a",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "dloa-c",
      "headRefOid": "88d32a63bb6890f2db05bb43a9b0b871f3795a61",
      "closedAt": "2023-06-29T17:55:50Z",
      "mergedAt": "2023-06-29T17:55:50Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "6548b6f81edcdf7aef415bd034c991fe7210e7bc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5Zd7dg",
          "commit": {
            "abbreviatedOid": "e59a54f"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "A very minor nit - possibly not worth changing the PR for:\r\n\"Clarity that DLOAs must be authentic\" -> \"Clarify that...\"\r\nI've approved anyway as this is such a small thing.",
          "createdAt": "2023-06-27T14:22:27Z",
          "updatedAt": "2023-06-27T14:22:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5ZpVkj",
          "commit": {
            "abbreviatedOid": "e59a54f"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-28T20:44:26Z",
          "updatedAt": "2023-06-28T20:44:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 399,
      "id": "PR_kwDOCEWCXc5T9H_2",
      "title": "Add comment that MAC-based UEIDs are shorter than UUIDs",
      "url": "https://github.com/ietf-rats-wg/eat/pull/399",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-26T19:13:07Z",
      "updatedAt": "2023-06-29T17:56:51Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "6548b6f81edcdf7aef415bd034c991fe7210e7bc",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "uuid-too-long",
      "headRefOid": "a04ec1fecd1d0ca2f6bd48961eabded9481a377b",
      "closedAt": "2023-06-29T17:56:47Z",
      "mergedAt": "2023-06-29T17:56:47Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2c34deda08105e90c94bc957e7f62e9ed19254d7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5ZY8x4",
          "commit": {
            "abbreviatedOid": "0f647e9"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-26T23:45:03Z",
          "updatedAt": "2023-06-26T23:45:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5Zd_Mn",
          "commit": {
            "abbreviatedOid": "0f647e9"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-27T14:26:51Z",
          "updatedAt": "2023-06-27T14:26:51Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5ZpfXh",
          "commit": {
            "abbreviatedOid": "0f647e9"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-28T20:55:30Z",
          "updatedAt": "2023-06-28T20:55:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 400,
      "id": "PR_kwDOCEWCXc5T9NDh",
      "title": "Uniformly use term \"base64url-encoded\"",
      "url": "https://github.com/ietf-rats-wg/eat/pull/400",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Per Carsten's comment on list.",
      "createdAt": "2023-06-26T19:27:30Z",
      "updatedAt": "2023-06-29T17:57:59Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "2c34deda08105e90c94bc957e7f62e9ed19254d7",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "b64url",
      "headRefOid": "28d29a68bf178599379633e0adacd8d4642f9d61",
      "closedAt": "2023-06-29T17:57:56Z",
      "mergedAt": "2023-06-29T17:57:55Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "46060d2a92c472cd1b3575da9cfa69a5f3417b5d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5ZY8vo",
          "commit": {
            "abbreviatedOid": "ff26218"
          },
          "author": "OR13",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-26T23:44:47Z",
          "updatedAt": "2023-06-26T23:44:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5Zd_xE",
          "commit": {
            "abbreviatedOid": "ff26218"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-27T14:27:35Z",
          "updatedAt": "2023-06-27T14:27:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5Zpfuw",
          "commit": {
            "abbreviatedOid": "ff26218"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-28T20:56:09Z",
          "updatedAt": "2023-06-28T20:56:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 401,
      "id": "PR_kwDOCEWCXc5T9435",
      "title": "Make nonce example more realistic - all different",
      "url": "https://github.com/ietf-rats-wg/eat/pull/401",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Each nonce example now has a different random value. The lengths also vary between 8 and 32 bytes.",
      "createdAt": "2023-06-26T21:23:12Z",
      "updatedAt": "2023-06-29T17:58:38Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "598c287697a6ef30a229b94f1d1628f54a105a44",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "nonce-ex",
      "headRefOid": "c60e901c83b96cea55de4bd410000bd8cc07e8aa",
      "closedAt": "2023-06-29T17:58:34Z",
      "mergedAt": "2023-06-29T17:58:34Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "fba63153ed34b4b50d49034fc6bb5f40015e6f41"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5ZeAVt",
          "commit": {
            "abbreviatedOid": "c60e901"
          },
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-27T14:28:19Z",
          "updatedAt": "2023-06-27T14:28:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5ZpgQk",
          "commit": {
            "abbreviatedOid": "c60e901"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-28T20:57:09Z",
          "updatedAt": "2023-06-28T20:57:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 402,
      "id": "PR_kwDOCEWCXc5XmNsM",
      "title": "Fixes requested by IANA",
      "url": "https://github.com/ietf-rats-wg/eat/pull/402",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-10T04:27:30Z",
      "updatedAt": "2023-08-16T18:05:19Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "fba63153ed34b4b50d49034fc6bb5f40015e6f41",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "iana-fixes",
      "headRefOid": "b63a53d54d72dc7cc8213e7201585396f5239e82",
      "closedAt": "2023-08-16T18:05:14Z",
      "mergedAt": "2023-08-16T18:05:14Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "2b34e387de31203f450b1e115ba9bd133838187c"
      },
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "This looks fine but you missed one item from the review (i.e., Authortised). \r\n\r\n```\r\nIANA QUESTION -> Should the Claim Name be changed to \"OEM Authorized Boot\" instead, or is \"OEM Authortised Boot\" correct? Also, should the description be changed to \"Indicates whether the software booted was OEM authorized\"?\r\n```",
          "createdAt": "2023-08-10T11:20:58Z",
          "updatedAt": "2023-08-10T11:53:35Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5dumQY",
          "commit": {
            "abbreviatedOid": "b63a53d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-10T18:26:15Z",
          "updatedAt": "2023-08-10T18:26:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 403,
      "id": "PR_kwDOCEWCXc5Xqx2C",
      "title": "Fixes for genart review",
      "url": "https://github.com/ietf-rats-wg/eat/pull/403",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-08-10T18:58:37Z",
      "updatedAt": "2023-08-16T18:10:38Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "2b34e387de31203f450b1e115ba9bd133838187c",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "genart",
      "headRefOid": "3a56593d7d5ea6643bfe3bc68f6bb5f1d179adcd",
      "closedAt": "2023-08-16T18:10:34Z",
      "mergedAt": "2023-08-16T18:10:34Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "e0186a65cccf1bf439f61cad04945795d17a6cfe"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5du31L",
          "commit": {
            "abbreviatedOid": "b971a54"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-08-10T19:09:51Z",
          "updatedAt": "2023-08-10T19:09:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 404,
      "id": "PR_kwDOCEWCXc5ZgjrM",
      "title": "Add section on partial and full profiles",
      "url": "https://github.com/ietf-rats-wg/eat/pull/404",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-04T18:24:25Z",
      "updatedAt": "2023-10-06T17:50:02Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "caa9fb8378885f4baa6308c9e20741fbd17ab2f7",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "partial-profile",
      "headRefOid": "40c887e6a2c684d76b57d547b2acbf1df15beeb9",
      "closedAt": "2023-10-06T17:49:58Z",
      "mergedAt": "2023-10-06T17:49:58Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "ea77640afa9693e90f2e3ca23fb70dece1241496"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Lack of a specific alg. identifier does not imply that interoperability is not possible.  For instance, https://datatracker.ietf.org/doc/html/rfc8152#appendix-A.1 discusses the use of implicit algorithms.  In my interpretation of the PQC example, if the alg. field is left empty but the kid points to a PQC keypair then interoperability is still possible without having to re-define the profile to explicitly include the PQC algm.",
          "createdAt": "2023-09-12T19:50:27Z",
          "updatedAt": "2023-09-12T19:50:27Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Re: specific algorithm and interoperability being possible, my point was that \"fully guaranteed\" doesn't fit because the recipient might have no idea where to get the verification key material. The \"fully guaranteed\" verbiage is new, and doesn't strike me as quite right without considering that. Likewise for decryption key.",
          "createdAt": "2023-09-12T22:27:34Z",
          "updatedAt": "2023-09-12T22:27:34Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "> Lack of a specific alg. identifier does not imply that interoperability is not possible. For instance, https://datatracker.ietf.org/doc/html/rfc8152#appendix-A.1 discusses the use of implicit algorithms. In my interpretation of the PQC example, if the alg. field is left empty but the kid points to a PQC keypair then interoperability is still possible without having to re-define the profile to explicitly include the PQC algm.\r\n\r\nYes, this is true and with the it's OK to to not have an alg ID in a full profile.",
          "createdAt": "2023-09-17T21:54:53Z",
          "updatedAt": "2023-09-17T21:54:53Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Please take a look at my recent update here. It tightens up a lot and I think makes the notion of a full profile much more clear. Also this hopefully addresses Simon's comment too.",
          "createdAt": "2023-09-20T19:42:34Z",
          "updatedAt": "2023-09-20T19:42:34Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5gizxO",
          "commit": {
            "abbreviatedOid": "53368e6"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T11:14:33Z",
          "updatedAt": "2023-09-11T11:14:33Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Should a profile include trust anchor key material or a reference to key material? This is required to \"fully guarantee  interoperability\". At present, only a key ID is included.",
              "createdAt": "2023-09-11T11:14:33Z",
              "updatedAt": "2023-09-11T11:14:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5gi0BZ",
          "commit": {
            "abbreviatedOid": "53368e6"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T11:15:14Z",
          "updatedAt": "2023-09-11T11:15:14Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Should this be MUST NOT? When would it be OK to use eat_profile to identify a partial profile?",
              "createdAt": "2023-09-11T11:15:14Z",
              "updatedAt": "2023-09-11T11:15:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5guV1x",
          "commit": {
            "abbreviatedOid": "53368e6"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T17:20:40Z",
          "updatedAt": "2023-09-12T17:20:40Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "#417 \r\n\r\nIt seems like a slippery slope to start discussing key formats, key distribution and key trust.",
              "createdAt": "2023-09-12T17:20:40Z",
              "updatedAt": "2023-09-12T17:20:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5gusq8",
          "commit": {
            "abbreviatedOid": "53368e6"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T18:07:43Z",
          "updatedAt": "2023-09-12T18:07:43Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "There's no need to get into discussing key formats, etc. Maybe something like:\r\n\r\n```\r\nA \"full\" profile is one that fully guarantees interoperability when a sender and receiver both adhere to it and have access to any necessary verification, decryption or MAC key(s), as discussed in sections 6.2.9 and 9.6.\r\n```",
              "createdAt": "2023-09-12T18:07:43Z",
              "updatedAt": "2023-09-12T18:07:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5gz5hs",
          "commit": {
            "abbreviatedOid": "485172e"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-13T10:26:59Z",
          "updatedAt": "2023-09-13T10:27:07Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "FYI, we've reviewed the text in the PSA (partial!) profile and will be making changes to clarify the baseline vs implementation specifics. PRs in preparation. \r\nPerhaps this (L1304) statement instead could say something like:\r\nPartial profiles are allowed, but MUST make clear that they are only used as a source to derive deployment specific profiles.",
              "createdAt": "2023-09-13T10:26:59Z",
              "updatedAt": "2023-09-13T10:27:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5hiY0Y",
          "commit": {
            "abbreviatedOid": "3a67218"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T20:03:37Z",
          "updatedAt": "2023-09-20T20:03:37Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "_OOP is back on track!_ \ud83d\ude04 \r\n\r\nJust a clarification: from this example I understand that \"deriving\" allows overriding what is inherited?\r\n\r\nAn alternative would be to define a partial profile as an abstract class with a \"pure virtual\" signing algorithm that full profiles must instantiate.",
              "createdAt": "2023-09-20T20:03:37Z",
              "updatedAt": "2023-09-20T20:03:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5hqyRk",
          "commit": {
            "abbreviatedOid": "3a67218"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T19:58:10Z",
          "updatedAt": "2023-09-21T19:58:10Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Hi Thomas,\r\n\r\nThis paragraph is just an example, not normative so you can do what you want.\r\n\r\nSo, yes, a derived profile can override another or you can do an abstract class profile.\r\n\r\nPersonally, I have a preference to avoid partial profiles because I prefer to go directly from the abstraction that EAT is to a fully specified protocol in one step because I think it is less confusing for the implementors, but no objection for folks that want them.",
              "createdAt": "2023-09-21T19:58:10Z",
              "updatedAt": "2023-09-21T19:58:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5h953N",
          "commit": {
            "abbreviatedOid": "3a67218"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-09-26T08:03:23Z",
          "updatedAt": "2023-09-26T08:03:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 405,
      "id": "PR_kwDOCEWCXc5ZuBK-",
      "title": "Expand most acronyms; other fixes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/405",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Expands most acronyms on first use.\r\n\r\nAn exception for these because they are widely know and used only in a minor way\r\nASCII \r\nCPU \r\nHTTP\r\nTLS \r\n\r\n\r\nFixed use of \"URI\" and \"URL\" for DLOA claim\r\n\r\nReplaces \"TEEP Manifest\" (wrong) with \"SUIT manifest\" (right)\r\n\r\nCOAP -> CoAP\r\n\r\n\r\n\r\n\r\n",
      "createdAt": "2023-09-06T20:16:08Z",
      "updatedAt": "2023-09-17T21:34:37Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9f7af71d58adde495b972bd233eda3e203784df",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "acronyms",
      "headRefOid": "b121311f6a4a4734cefb96033659a4b43d7fdcbc",
      "closedAt": "2023-09-17T21:34:32Z",
      "mergedAt": "2023-09-17T21:34:32Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8d38f1feb4de7ca09dc522e0b37821e83b115301"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5gixfI",
          "commit": {
            "abbreviatedOid": "b121311"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-11T11:09:01Z",
          "updatedAt": "2023-09-11T11:09:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 406,
      "id": "PR_kwDOCEWCXc5Zu4Mi",
      "title": "clarify OEMID lifetimes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/406",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-07T01:06:01Z",
      "updatedAt": "2023-09-17T21:56:03Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "98f9deed318ec7b33ed759ccb891408ccaf47fff",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "oem-lifetime",
      "headRefOid": "f4c512082ea21ecb264ce89ab72deb09d77c90a8",
      "closedAt": "2023-09-17T21:55:59Z",
      "mergedAt": "2023-09-17T21:55:59Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a29b1118fbfea3129be7af1bedf498025ef65327"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5gixDv",
          "commit": {
            "abbreviatedOid": "75b2866"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T11:07:49Z",
          "updatedAt": "2023-09-11T11:07:50Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Should there be a similar requirement for oemid to be present when dbgstat or hwmodel are present as #407 added for oemboot?",
              "createdAt": "2023-09-11T11:07:50Z",
              "updatedAt": "2023-09-11T11:07:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5guJYi",
          "commit": {
            "abbreviatedOid": "75b2866"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-12T16:48:42Z",
          "updatedAt": "2023-09-12T16:48:43Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "There is a requirement for hwmodel and hwversion. Added one for dbgstat.",
              "createdAt": "2023-09-12T16:48:42Z",
              "updatedAt": "2023-09-12T16:48:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 407,
      "id": "PR_kwDOCEWCXc5Zy7gd",
      "title": "oemid MUST be present if oemboot is",
      "url": "https://github.com/ietf-rats-wg/eat/pull/407",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-07T15:40:26Z",
      "updatedAt": "2023-09-17T21:38:47Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "8d38f1feb4de7ca09dc522e0b37821e83b115301",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "oemboot-must",
      "headRefOid": "9eb6dac5d1f3307f9a8dc4ba873051ad8b31b083",
      "closedAt": "2023-09-17T21:38:41Z",
      "mergedAt": "2023-09-17T21:38:41Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "98f9deed318ec7b33ed759ccb891408ccaf47fff"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5giv7r",
          "commit": {
            "abbreviatedOid": "51d7c64"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-11T11:04:53Z",
          "updatedAt": "2023-09-11T11:04:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 408,
      "id": "PR_kwDOCEWCXc5ZzJft",
      "title": "Clarfiy that Appendix B1 applies only to type 0x01 UEIDS",
      "url": "https://github.com/ietf-rats-wg/eat/pull/408",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-07T16:18:38Z",
      "updatedAt": "2023-09-17T21:56:34Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9f7af71d58adde495b972bd233eda3e203784df",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ueid-128-b1",
      "headRefOid": "2f54bc2fdeb33120cf939281163d910be434215f",
      "closedAt": "2023-09-17T21:56:30Z",
      "mergedAt": "2023-09-17T21:56:30Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a99f6a3eac63fd91f4a146d14db7d89239e0f3c0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5givzQ",
          "commit": {
            "abbreviatedOid": "2f54bc2"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-11T11:04:31Z",
          "updatedAt": "2023-09-11T11:04:31Z",
          "comments": []
        }
      ]
    },
    {
      "number": 409,
      "id": "PR_kwDOCEWCXc5ZzMZg",
      "title": "Wording improvement for uptime claim",
      "url": "https://github.com/ietf-rats-wg/eat/pull/409",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-07T16:28:34Z",
      "updatedAt": "2023-09-17T21:57:13Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9f7af71d58adde495b972bd233eda3e203784df",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "uptime-wording",
      "headRefOid": "b0580f8d30c2e6341340acc5b2b5a8791c1a55fd",
      "closedAt": "2023-09-17T21:57:12Z",
      "mergedAt": "2023-09-17T21:57:12Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "456ca7bd91d45856cf871613a317ffb08e5a5659"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5givhs",
          "commit": {
            "abbreviatedOid": "b0580f8"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-11T11:03:49Z",
          "updatedAt": "2023-09-11T11:03:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 410,
      "id": "PR_kwDOCEWCXc5ZzztI",
      "title": "RATS.Architecture -> RFC9334 and normative",
      "url": "https://github.com/ietf-rats-wg/eat/pull/410",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Makes the reference to RATS Architecture normative\r\n\r\nRefer to 9334 instead of the draft.\r\n",
      "createdAt": "2023-09-07T18:38:59Z",
      "updatedAt": "2023-09-17T22:02:20Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "160540230258542d4484c68f86dba30a2caabaa5",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ra-normative",
      "headRefOid": "9f51177a91edd739d908d6dead0bed31427002d9",
      "closedAt": "2023-09-17T22:02:16Z",
      "mergedAt": "2023-09-17T22:02:16Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3d7faf1012991754044859dbe75dfb4723e5ccdf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5givao",
          "commit": {
            "abbreviatedOid": "36c2f2e"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-11T11:03:32Z",
          "updatedAt": "2023-09-11T11:03:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 411,
      "id": "PR_kwDOCEWCXc5Z56FS",
      "title": "change issue name from Nonce to Freshess ",
      "url": "https://github.com/ietf-rats-wg/eat/pull/411",
      "state": "MERGED",
      "author": "carl-wallace",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "To align with section 6.2.11 (per Thomas Fossati's comment)",
      "createdAt": "2023-09-08T19:13:14Z",
      "updatedAt": "2023-09-17T21:57:46Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9f7af71d58adde495b972bd233eda3e203784df",
      "headRepository": "carl-wallace/eat",
      "headRefName": "freshness",
      "headRefOid": "f5129fe282f71d8c910191358c4afe0256799520",
      "closedAt": "2023-09-17T21:57:46Z",
      "mergedAt": "2023-09-17T21:57:46Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "160540230258542d4484c68f86dba30a2caabaa5"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 412,
      "id": "PR_kwDOCEWCXc5Z8AWa",
      "title": "Improve wording in privacy section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/412",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-09T18:07:03Z",
      "updatedAt": "2023-09-17T22:02:43Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9f7af71d58adde495b972bd233eda3e203784df",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "privacy-nit",
      "headRefOid": "b92a5a090805600dd7c481919542c7d2ae141289",
      "closedAt": "2023-09-17T22:02:43Z",
      "mergedAt": "2023-09-17T22:02:43Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7644bd58941602a54b46d2c06aa051901c8c5769"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5givQc",
          "commit": {
            "abbreviatedOid": "b92a5a0"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-11T11:03:08Z",
          "updatedAt": "2023-09-11T11:03:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 413,
      "id": "PR_kwDOCEWCXc5Z8BEG",
      "title": "Little intro for UEID types 2 and 3",
      "url": "https://github.com/ietf-rats-wg/eat/pull/413",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarifies where IEEE EUI and IMEI come from.",
      "createdAt": "2023-09-09T18:21:40Z",
      "updatedAt": "2023-09-18T17:38:16Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "dde54af2ebece6947a5c512c2b18bdfc6c98dfbe",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ueid-description",
      "headRefOid": "a41906faebd6557b880d913d6077d5601b83f87f",
      "closedAt": "2023-09-18T17:38:13Z",
      "mergedAt": "2023-09-18T17:38:13Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "124d4e2425b09926974d21d48e41af2abc8fe9d5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5giu-v",
          "commit": {
            "abbreviatedOid": "7f1f923"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T11:02:26Z",
          "updatedAt": "2023-09-11T11:02:26Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "\"and other\" what? Same comment in first sentence below. Both are missing a word or two.",
              "createdAt": "2023-09-11T11:02:26Z",
              "updatedAt": "2023-09-11T11:02:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5gnFp9",
          "commit": {
            "abbreviatedOid": "7f1f923"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T21:28:02Z",
          "updatedAt": "2023-09-11T21:28:02Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "See if you like the update better. Thx for reviewing.",
              "createdAt": "2023-09-11T21:28:02Z",
              "updatedAt": "2023-09-11T21:28:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5gutnr",
          "commit": {
            "abbreviatedOid": "3621c85"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T18:10:10Z",
          "updatedAt": "2023-09-12T18:10:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 414,
      "id": "PR_kwDOCEWCXc5Z8DHD",
      "title": "Wording improvements suggestd by D Miguault",
      "url": "https://github.com/ietf-rats-wg/eat/pull/414",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-09T19:05:28Z",
      "updatedAt": "2023-09-18T17:24:43Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "5aba2fc9de234699aa194fc116361397704ea30d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "migault-nits",
      "headRefOid": "791d00052748c42a15070a06245750990cf2d025",
      "closedAt": "2023-09-18T17:24:39Z",
      "mergedAt": "2023-09-18T17:24:39Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "dde54af2ebece6947a5c512c2b18bdfc6c98dfbe"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5giqjq",
          "commit": {
            "abbreviatedOid": "3bb42ee"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-11T10:51:18Z",
          "updatedAt": "2023-09-11T10:51:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 415,
      "id": "PR_kwDOCEWCXc5Z8D4l",
      "title": "Why manifest sigs should be retained",
      "url": "https://github.com/ietf-rats-wg/eat/pull/415",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-09T19:22:00Z",
      "updatedAt": "2023-09-18T17:16:03Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "7644bd58941602a54b46d2c06aa051901c8c5769",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "manifest-sig",
      "headRefOid": "f4b85faadf2589edd3b39c3c873a3db99a1e5303",
      "closedAt": "2023-09-18T17:15:59Z",
      "mergedAt": "2023-09-18T17:15:59Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "5aba2fc9de234699aa194fc116361397704ea30d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5gir9r",
          "commit": {
            "abbreviatedOid": "52c981e"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T10:55:02Z",
          "updatedAt": "2023-09-11T10:55:02Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "The phrase \"directly with\" connotes some interaction with the manufacturer that isn't necessary. Maybe \"This allows the receiver to verify the manufacturer originated the manifest\"",
              "createdAt": "2023-09-11T10:55:02Z",
              "updatedAt": "2023-09-11T10:55:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5gnEFf",
          "commit": {
            "abbreviatedOid": "52c981e"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-11T21:22:17Z",
          "updatedAt": "2023-09-11T21:22:18Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Thx Carl. Think I fixed. Let me know what you think.",
              "createdAt": "2023-09-11T21:22:17Z",
              "updatedAt": "2023-09-11T21:22:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5gutbM",
          "commit": {
            "abbreviatedOid": "186e08c"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-12T18:09:34Z",
          "updatedAt": "2023-09-12T18:09:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 416,
      "id": "PR_kwDOCEWCXc5Z8FU9",
      "title": "Fill in missing parts of dev URN definition",
      "url": "https://github.com/ietf-rats-wg/eat/pull/416",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This addresses comment by Jari Arrko.",
      "createdAt": "2023-09-09T19:55:26Z",
      "updatedAt": "2023-09-18T17:42:30Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9f7af71d58adde495b972bd233eda3e203784df",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "devurn",
      "headRefOid": "d97da15029349c9258f265e96a410c80f626fc99",
      "closedAt": "2023-09-18T17:42:26Z",
      "mergedAt": "2023-09-18T17:42:26Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "caa9fb8378885f4baa6308c9e20741fbd17ab2f7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5git5B",
          "commit": {
            "abbreviatedOid": "131c29a"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-11T10:59:51Z",
          "updatedAt": "2023-09-11T10:59:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 417,
      "id": "PR_kwDOCEWCXc5aJxHB",
      "title": "clarify verification key in standard profile",
      "url": "https://github.com/ietf-rats-wg/eat/pull/417",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-12T17:18:45Z",
      "updatedAt": "2023-10-06T17:50:38Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9f7af71d58adde495b972bd233eda3e203784df",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "prof-kid",
      "headRefOid": "8bae26fd181b6cd91744276ee342d38d71b66e12",
      "closedAt": "2023-10-06T17:50:34Z",
      "mergedAt": "2023-10-06T17:50:34Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "fd64a1bd9749cf49082091de38895f48a6d41c95"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "I have this text and also text in the full/partial profile PR. I like having both because I think it gives more clarity on something that is confusing. Will keep them both unless there is strong objection.\r\n\r\nThanks as always for the reviews.",
          "createdAt": "2023-09-20T19:47:05Z",
          "updatedAt": "2023-09-20T19:47:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5guq7L",
          "commit": {
            "abbreviatedOid": "5445c55"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I think you mean:\r\n```\r\n (It is assumed the receiver has access to a database of trusted verification keys which allows lookup of a key given a verification key ID; the key format and means of distribution are beyond the scope of this profile) \r\n```\r\nBut, I think I'd address this not here but where \"fully guaranteed\" is introduced.",
          "createdAt": "2023-09-12T18:03:02Z",
          "updatedAt": "2023-09-12T18:03:02Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5iuL8R",
          "commit": {
            "abbreviatedOid": "8bae26f"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2023-10-03T23:06:05Z",
          "updatedAt": "2023-10-03T23:06:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 418,
      "id": "PR_kwDOCEWCXc5acSnr",
      "title": "minor typo fix in the \"constrained profile\" table",
      "url": "https://github.com/ietf-rats-wg/eat/pull/418",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Also, while we are in the area, there's an opportunity to shorten the profile identifier using [RFC2648](https://datatracker.ietf.org/doc/rfc2648/) URNs, i.e.: `urn:ietf:id:ietf-rats-eat-21` and `urn:ietf:rfc:XXXX` on publication.\r\n",
      "createdAt": "2023-09-15T13:34:37Z",
      "updatedAt": "2023-09-15T13:56:12Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d9f7af71d58adde495b972bd233eda3e203784df",
      "headRepository": "thomas-fossati/eat",
      "headRefName": "patch-4",
      "headRefOid": "1642fe669628a31a5c707230d57831641c52e777",
      "closedAt": "2023-09-15T13:56:11Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "This looks like a duplicate of #411 ",
          "createdAt": "2023-09-15T13:41:50Z",
          "updatedAt": "2023-09-15T13:41:50Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Oops, yes, I hadn't seen it, sorry!",
          "createdAt": "2023-09-15T13:56:11Z",
          "updatedAt": "2023-09-15T13:56:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 420,
      "id": "PR_kwDOCEWCXc5amQ8C",
      "title": "Use urn:ietf for profile ID",
      "url": "https://github.com/ietf-rats-wg/eat/pull/420",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address #419 \r\n\r\nThis saves a lot of bytes and is prettier\r\n",
      "createdAt": "2023-09-18T17:58:17Z",
      "updatedAt": "2023-09-26T18:59:41Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "caa9fb8378885f4baa6308c9e20741fbd17ab2f7",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "profile-urn",
      "headRefOid": "483501cb2b7b7dbc836b6e3129b3cec985e89157",
      "closedAt": "2023-09-26T18:59:36Z",
      "mergedAt": "2023-09-26T18:59:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "b96536acd56e5bf38d6a4cf2e924cdfced2f36cb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5hQ0Jx",
          "commit": {
            "abbreviatedOid": "483501c"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "\ud83d\udc4d ",
          "createdAt": "2023-09-18T19:10:17Z",
          "updatedAt": "2023-09-18T19:10:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5h-Alv",
          "commit": {
            "abbreviatedOid": "483501c"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "+1",
          "createdAt": "2023-09-26T08:17:06Z",
          "updatedAt": "2023-09-26T08:17:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 421,
      "id": "PR_kwDOCEWCXc5a7dIX",
      "title": "Improve JSON nonce min and max size",
      "url": "https://github.com/ietf-rats-wg/eat/pull/421",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A private comment from Thomas (thx) caused me to think through the size of nonces for JSON-encoded tokens again. The new text is more obvious and gives more flexibility.\r\n\r\nThe main point of restricting a size range of the nonce is to help developers. The max size makes it clear what size buffer they need to allocate.  The min size makes sure they are at least trying to get enough entropy.",
      "createdAt": "2023-09-21T20:35:10Z",
      "updatedAt": "2023-10-09T19:13:37Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "caa9fb8378885f4baa6308c9e20741fbd17ab2f7",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "nonce-size",
      "headRefOid": "819259ab9775c3aa796d0e8ec3ce674fb550f33c",
      "closedAt": "2023-10-09T19:13:33Z",
      "mergedAt": "2023-10-09T19:13:33Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4b6206204df9444892b3c0e1aa4eea6a9924d99f"
      },
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "Who determines if base64 encoding is used for a JSON nonce, the nonce generator/verifier or the attester? Would it be more clear if this were always base64 encoded for JSON?",
          "createdAt": "2023-09-26T12:32:40Z",
          "updatedAt": "2023-09-26T12:32:40Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This is just a random value, not an encoding of any data. There is no need to reverse the text encoding here unlike other uses of base 64. The receiver just uses the text data as the nonce directly.\r\n\r\nThis allows the sender to use the full range of bytes and bits in UTF-8 to make the random value as small as possible if they want.\r\n\r\nMaybe we need more text here to say this? Particularly, that the JSON receiver MUST use the UTF-8 text as random bytes directly. \r\n\r\n",
          "createdAt": "2023-09-26T19:03:52Z",
          "updatedAt": "2023-09-26T19:03:52Z"
        },
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "I think that'd be a good addition.",
          "createdAt": "2023-09-26T19:26:39Z",
          "updatedAt": "2023-09-26T19:26:39Z"
        },
        {
          "author": "setrofim",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">There is no need to reverse the text encoding here\r\n\r\nThe encoding ought to be reversed so that it matches the CBOR resporsentation. Insisting that UTF-8 is used directly as a random value makes certain random values impossible to represent in JSON (e.g. those that start with 0x80 -- a continuation byte).",
          "createdAt": "2023-09-28T06:21:49Z",
          "updatedAt": "2023-09-28T06:21:49Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "> > There is no need to reverse the text encoding here\r\n> \r\n> The encoding ought to be reversed so that it matches the CBOR resporsentation. Insisting that UTF-8 is used directly as a random value makes certain random values impossible to represent in JSON (e.g. those that start with 0x80 -- a continuation byte).\r\n\r\nI've added an update that explains why the B64 encoding must not be remove/reversed. \r\n\r\nNote also that this there is no need to translate this claim to/from CBOR.\r\n",
          "createdAt": "2023-09-28T17:45:58Z",
          "updatedAt": "2023-09-28T17:45:58Z"
        },
        {
          "author": "setrofim",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> > > There is no need to reverse the text encoding here\r\n> > \r\n> > \r\n> > The encoding ought to be reversed so that it matches the CBOR resporsentation. Insisting that UTF-8 is used directly as a random value makes certain random values impossible to represent in JSON (e.g. those that start with 0x80 -- a continuation byte).\r\n> \r\n> I've added an update that explains why the B64 encoding must not be remove/reversed.\r\n> \r\n> Note also that this there is no need to translate this claim to/from CBOR.\r\n\r\nJSON and CBOR are both just encodings of some conceptual structure. If nonce is a sequence of arbitrary bytes, and is represent as a UTF-8 string in JSON, then it cannot be written directly and must be encoded (with base64 probably being the most common encoding, followed by hex); when parsing JSON, then nonce must be then decoded into its original form. If it is used as-is then the nonce value will be different from the original. Conversely, if the nonce is defined as a UTF-8 string, rather than an arbitrary sequence of bytes, then the same restriction must be applied to the CBOR encoding (i.e. should be encoded as a text string rather than byte string).\r\n\r\nA particular implementation may need to work with both CBOR and JSON encodings (e.g. receiving external input as CBOR, but using JSON internally for RPC, logging,  persisting state, etc.). The values of EAT fields should be stable across conversions CBOR<->internal<->JSON.\r\n\r\nFor example, a CBOR-encoded EAT containing nonce value `{0x80, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07}` is read by an application. The application then persists it to disk as JSON. Then nonce value is not a valid UTF-8 byte sequence, so cannot be written to JSON as-is, and must be encoded. If base64 encoding is used, then it is written as `\"gAECAwQFBgc=\"`. At a later point, the application restores the previously persisted state (or some other applications reads the JSON). If the nonce is not decoded when it is read, then  it is now  `{0x67, 0x41, 0x45, 0x43, 0x41, 0x77, 0x51, 0x46, 0x42, 0x67, 0x63, 0x3d}`, which is not the original value.\r\n\r\n",
          "createdAt": "2023-09-28T20:10:08Z",
          "updatedAt": "2023-09-28T20:10:08Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Setrofim,\r\n\r\nThe EAT nonce for JSON is like the OpenID nonce (https://openid.net/specs/openid-connect-core-1_0.html#IDToken). The text string is used directly as the nonce.\r\n\r\nA nonce is just some bytes that are compared for equality. It doesn\u2019t matter if they are text or binary when comparing for equality.\r\n\r\nIt is true that we could change the JSON EAT nonce to be a byte string that is sent as a bstr in CBOR and a b64-encoded text string in JSON. This is exactly how ueid, oemid and other work in EAT. This also gives translatability between CBOR and JSON.\r\n\r\nThe very big reason for not doing this now is because it would break backwards compatibility with all of EAT for the last four years of development. B64 encoding would be a MUST. Implementations of any EAT draft up to now would not interoperate.\r\n\r\nThe other reason for not doing this is because the OpenID nonce doesn\u2019t do it.\r\n\r\nWhile translatability between CBOR and JSON claims is useful and does work for most EAT claims, the nonce is one claim where it isn\u2019t critical.\r\n\r\nIn the latest update to the PR, we\u2019ve removed mention of b64 encoding because we think it is confusing and because OpenID doesn\u2019t use it. The length still allows for b64 encoding as a convenient technique to turn random binary bytes into text bytes.\r\n",
          "createdAt": "2023-10-03T19:28:53Z",
          "updatedAt": "2023-10-03T19:28:53Z"
        },
        {
          "author": "setrofim",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> A nonce is just some bytes that are compared for equality. It doesn\u2019t matter if they are text or binary when comparing for equality.\r\n\r\nSure. I'm not arguing for nonce being a binary byte sequence. I'm arguing for \"EAT nonce\" definition being independent of a specific serialization.\r\n\r\n> While translatability between CBOR and JSON claims is useful and does work for most EAT claims, the nonce is one claim where it isn\u2019t critical.\r\n\r\nTranslatability of individual claims is one thing. However, there is either a single \"EAT\" format representable as both JSON and CBOR, or there are two incompatible \"JSON EAT\" and \"CBOR EAT\" formats. I would argue the former would be more useful, but from your reply I understand the intent is for the latter?\r\n\r\n> In the latest update to the PR, we\u2019ve removed mention of b64 encoding because we think it is confusing and because OpenID doesn\u2019t use it. The length still allows for b64 encoding as a convenient technique to turn random binary bytes into text bytes.\r\n\r\nCool. As long as the text does not restrict how a nonce claim is to be interpreted, implementations that needs to work with the same tokens as both CBOR and JSON can at least do so (even if the two serializations of the same token would not necessarily be identifiable as such outside of those implementations, since the encoding is not standard).\r\n",
          "createdAt": "2023-10-04T08:52:41Z",
          "updatedAt": "2023-10-04T08:52:41Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "> > A nonce is just some bytes that are compared for equality. It doesn\u2019t matter if they are text or binary when comparing for equality.\r\n> \r\n> Sure. I'm not arguing for nonce being a binary byte sequence. I'm arguing for \"EAT nonce\" definition being independent of a specific serialization.\r\n> \r\n> > While translatability between CBOR and JSON claims is useful and does work for most EAT claims, the nonce is one claim where it isn\u2019t critical.\r\n> \r\n> Translatability of individual claims is one thing. However, there is either a single \"EAT\" format representable as both JSON and CBOR, or there are two incompatible \"JSON EAT\" and \"CBOR EAT\" formats. I would argue the former would be more useful, but from your reply I understand the intent is for the latter?\r\n\r\nThere's a single EAT data model that can be serialized as JSON or CBOR. That is true even if the nonce is slightly different and can't be translated directly.\r\n\r\nPretty much everything else can translated between JSON and CBOR deterministically, so it is pretty much what you call a \"single EAT format\". \r\n\r\nIf this were a two years ago before all the last calls and IESG review and this were not an incompatible protocol change, I'd be much more open to a change.\r\n\r\n> \r\n> > In the latest update to the PR, we\u2019ve removed mention of b64 encoding because we think it is confusing and because OpenID doesn\u2019t use it. The length still allows for b64 encoding as a convenient technique to turn random binary bytes into text bytes.\r\n> \r\n> Cool. As long as the text does not restrict how a nonce claim is to be interpreted, implementations that needs to work with the same tokens as both CBOR and JSON can at least do so (even if the two serializations of the same token would not necessarily be identifiable as such outside of those implementations, since the encoding is not standard).\r\n\r\nIt kind of does restrict it. If someone sends you a nonce that isn't base64 encoded, the decode will fail. Your implementation will be incorrect.\r\n\r\nYou could write an EAT profile that requires the nonce to be b64 encoded if you must. So you do have an out if you really need translatability, but the profile would not be generally interoperable with those not following the profile.\r\n\r\nCan you describe a detailed, concrete and compelling situation where the nonce needs to be translated?\r\n\r\nNote that you can't translate a JWT to CWT without re signing. It's not something you just happen to do. Similarly, the nonce is not like other claims. It's in a section by itself for this reason. It generally doesn't flow through.\r\n\r\nWe've been working on EAT for 5 years. Translatability between JSON and CBOR of any sort has never come up. This tells me it is not so important to make an incompatible protocol change this late in the work.",
          "createdAt": "2023-10-04T18:19:36Z",
          "updatedAt": "2023-10-04T18:19:36Z"
        },
        {
          "author": "setrofim",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> There's a single EAT data model that can be serialized as JSON or CBOR. \r\n\r\nIf thas is the initent....\r\n\r\n>  [...] the nonce is slightly different and can't be translated directly.\r\n\r\n...then this is a bug.\r\n\r\nIf there is a single data model, what is the definition of the nonce within that data model? If it is arbitrary bytes, then the JSON serialization is bugged; if it is UTF-8, then CBOR serialization is bugged. If it's bytes for CBOR and UTF-8 for JSON, then there are two models.\r\n\r\n> Pretty much everything else can translated between JSON and CBOR deterministically, so it is pretty much what you call a \"single EAT format\".\r\n\r\nIf I can _almost_ write the same token as both formats, save for one claim, then I can't do it.\r\n\r\n> Can you describe a detailed, concrete and compelling situation where the nonce needs to be translated?\r\n\r\n[EAT Attestation Result](https://www.ietf.org/archive/id/draft-fv-rats-ear-01.html#name-cbor-serialization)  and [PSA attestation token profile](https://thomas-fossati.github.io/draft-psa-token/draft-tschofenig-rats-psa-token.html#name-nonce)  are both EAT-based profiles that utilize the nonce claim. The former specifies both JSON and CBOR representations, the latter is CBOR only.\r\n\r\nVeraison verifier [establishes a nonce](https://github.com/veraison/docs/tree/main/api/challenge-response) with the client, which is then used to generate the PSA token, and eventually gets written inside EAR as well. The verifier needs to able to compare the established nonce with the one it extracts from the attestation token. Further, the relying part later should be able to check that the nonce in the EAR (JSON) matches the nonce in the PSA token it got from the attester (CBOR).\r\n\r\n> It kind of does restrict it. If someone sends you a nonce that isn't base64 encoded, the decode will fail. Your implementation will be incorrect.\r\n\r\nWell, the implementation would need to be anticipate that case; but nothing to stop it from rejecting tokens that don't contain b64 nonces. As long as the spec does not mandate specific handling thereof (which, as of the latest update, it no longer does), the implementation is not incorrect with respect to the spec. This is no different than rejecting tokens whose nonce didn't match the expected value.\r\n\r\n> If this were a two years ago before all the last calls and IESG review and this were not an incompatible protocol change, I'd be much more open to a change.\r\n\r\n> We've been working on EAT for 5 years. Translatability between JSON and CBOR of any sort has never come up. This tells me it is not so important to make an incompatible protocol change this late in the work.\r\n\r\nSure, I get that I'm pretty late to the party here. And now that the language that the \"UTF-8 string MUST be used directly as nonce\" has been removed, I think things are fine as they are. Though, it might be worth at least adding explicit language somewhere that JSON EAT and CBOR EAT representations are not intended to be compatible.\r\n\r\n> You could write an EAT profile that requires the nonce to be b64 encoded if you must. So you do have an out if you really need translatability, but the profile would not be generally interoperable with those not following the profile.\r\n\r\nYup, I guess this will have to be the workround. Specify b64 as part of EAR instead.\r\n\r\n\r\n\r\n",
          "createdAt": "2023-10-04T20:25:37Z",
          "updatedAt": "2023-10-04T20:25:37Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "> > There's a single EAT data model that can be serialized as JSON or CBOR.\r\n> \r\n> If thas is the initent....\r\n> \r\n> > [...] the nonce is slightly different and can't be translated directly.\r\n> \r\n> ...then this is a bug.\r\n> \r\n> If there is a single data model, what is the definition of the nonce within that data model? If it is arbitrary bytes, then the JSON serialization is bugged; if it is UTF-8, then CBOR serialization is bugged. If it's bytes for CBOR and UTF-8 for JSON, then there are two models.\r\n> \r\n> > Pretty much everything else can translated between JSON and CBOR deterministically, so it is pretty much what you call a \"single EAT format\".\r\n> \r\n> If I can _almost_ write the same token as both formats, save for one claim, then I can't do it.\r\n\r\nCarsten uses the term data model. I'm not sure if the official definition of it includes translatability between encodings or not. I kind of assumed not, but maybe it should.\r\n\r\nEAT is one of the first and most thorough attempts at specifying CBOR and JSON simultaneously. We kind of got Carsten to help out too. A lot people said we shouldn't even try. Some still suggesting taking JSON out now.\r\n\r\nProbably this is a lesson for the CBOR-JSON world. That we should make translatability a goal of all CBOR-JSON work. Would be interesting what the CBOR mailing list would say to this.\r\n\r\nThere are other issues with CBOR-JSON that we didn't have to deal with here, like the simple types. We had to work around the CBOR tag issues.\r\n\r\n\r\n> > Can you describe a detailed, concrete and compelling situation where the nonce needs to be translated?\r\n> \r\n> [EAT Attestation Result](https://www.ietf.org/archive/id/draft-fv-rats-ear-01.html#name-cbor-serialization) and [PSA attestation token profile](https://thomas-fossati.github.io/draft-psa-token/draft-tschofenig-rats-psa-token.html#name-nonce) are both EAT-based profiles that utilize the nonce claim. The former specifies both JSON and CBOR representations, the latter is CBOR only.\r\n> \r\n> Veraison verifier [establishes a nonce](https://github.com/veraison/docs/tree/main/api/challenge-response) with the client, which is then used to generate the PSA token, and eventually gets written inside EAR as well. The verifier needs to able to compare the established nonce with the one it extracts from the attestation token. Further, the relying part later should be able to check that the nonce in the EAR (JSON) matches the nonce in the PSA token it got from the attester (CBOR).\r\n\r\nI didn't follow the flow fully, but it doesn't sound like you have a use case where the same nonce must be represented in both CBOR and JSON.\r\n\r\n\r\n> > It kind of does restrict it. If someone sends you a nonce that isn't base64 encoded, the decode will fail. Your implementation will be incorrect.\r\n> \r\n> Well, the implementation would need to be anticipate that case; but nothing to stop it from rejecting tokens that don't contain b64 nonces. As long as the spec does not mandate specific handling thereof (which, as of the latest update, it no longer does), the implementation is not incorrect with respect to the spec. This is no different than rejecting tokens whose nonce didn't match the expected value.\r\n> \r\n> > If this were a two years ago before all the last calls and IESG review and this were not an incompatible protocol change, I'd be much more open to a change.\r\n> \r\n> > We've been working on EAT for 5 years. Translatability between JSON and CBOR of any sort has never come up. This tells me it is not so important to make an incompatible protocol change this late in the work.\r\n> \r\n> Sure, I get that I'm pretty late to the party here. And now that the language that the \"UTF-8 string MUST be used directly as nonce\" has been removed, I think things are fine as they are. Though, it might be worth at least adding explicit language somewhere that JSON EAT and CBOR EAT representations are not intended to be compatible.\r\n> \r\n> > You could write an EAT profile that requires the nonce to be b64 encoded if you must. So you do have an out if you really need translatability, but the profile would not be generally interoperable with those not following the profile.\r\n> \r\n> Yup, I guess this will have to be the workround. Specify b64 as part of EAR instead.\r\n\r\nOK. Plan to merge this as is soon. \r\n\r\nWill also comment on EAR.\r\n",
          "createdAt": "2023-10-05T19:14:48Z",
          "updatedAt": "2023-10-05T19:14:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5h-BSH",
          "commit": {
            "abbreviatedOid": "28bd1a7"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "+1",
          "createdAt": "2023-09-26T08:18:34Z",
          "updatedAt": "2023-09-26T08:18:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5h-BdJ",
          "commit": {
            "abbreviatedOid": "28bd1a7"
          },
          "author": "SimonFrost-Arm",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "+1",
          "createdAt": "2023-09-26T08:18:56Z",
          "updatedAt": "2023-09-26T08:18:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 422,
      "id": "PR_kwDOCEWCXc5bELFO",
      "title": "Correct the JSON DEB example",
      "url": "https://github.com/ietf-rats-wg/eat/pull/422",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The JSON DEB example is now a correct JWT with correct content that can be validated.\r\n\r\nAlso checked in the JSON files used to construct the example.\r\n\r\nThere was a \"TODO\" tag for this that no noticed. Searching for \"TODO\" now has no results.",
      "createdAt": "2023-09-24T21:10:05Z",
      "updatedAt": "2023-10-04T19:45:44Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "caa9fb8378885f4baa6308c9e20741fbd17ab2f7",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "json-example",
      "headRefOid": "a0a58ad5fcee0034bd20c7db0aec21451e4d052d",
      "closedAt": "2023-10-04T19:45:40Z",
      "mergedAt": "2023-10-04T19:45:39Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8c17ace3d2cfd7c7cd78bdd39d3f6c236dc332a2"
      },
      "comments": [
        {
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "body": "The nonces in the example are Type 1 but are only 112 bits. The prose for type 1 requires 128, 192 or 256. The values in the examples are:\r\n```\r\n01 98 F5 0A 40 36 C0 58 61 C8 86 0D 13 A6 38\r\n```\r\n```\r\n01 BE D4 02 2E F2 7D F0 7A EB 6D FC B3 3C F3\r\n```",
          "createdAt": "2023-09-26T12:40:49Z",
          "updatedAt": "2023-09-26T12:40:49Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> The nonces\r\n\r\ns/nonces/ueids/\r\n\r\n\r\n> in the example are Type 1 but are only 112 bits. The prose for type 1 requires 128, 192 or 256. The values in the examples are:\r\n> \r\n> ```\r\n> 01 98 F5 0A 40 36 C0 58 61 C8 86 0D 13 A6 38\r\n> ```\r\n> \r\n>  ```\r\n> 01 BE D4 02 2E F2 7D F0 7A EB 6D FC B3 3C F3\r\n> ```\r\n\r\nyep, these need a couple more bytes",
          "createdAt": "2023-09-26T12:58:18Z",
          "updatedAt": "2023-09-26T12:58:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5h19bt",
          "commit": {
            "abbreviatedOid": "d62e710"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "\ud83d\udc4d ",
          "createdAt": "2023-09-25T07:51:10Z",
          "updatedAt": "2023-09-25T07:51:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 423,
      "id": "PR_kwDOCEWCXc5bJq11",
      "title": "Fix UEID length and add simple example to intro",
      "url": "https://github.com/ietf-rats-wg/eat/pull/423",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A 48-bit mac address formats to 7 binary bytes. b64url encoding of 7 bytes is 10 bytes, not 12. The previous mistake was to include the padding for b64 encoding which is not present with b64 encoding.\r\n\r\nWarren Kumari suggested a simple example be added early in the document as part of the larger review. Seems like a good idea! Make it easier for people to understand that aren't very familiar with attestation, which is a lot of people since attestation is not widely used yet.",
      "createdAt": "2023-09-25T17:44:09Z",
      "updatedAt": "2023-10-04T18:20:36Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "caa9fb8378885f4baa6308c9e20741fbd17ab2f7",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "early-example",
      "headRefOid": "4071cecd4bbe783424c98a3594865f6c853537f1",
      "closedAt": "2023-10-04T18:20:31Z",
      "mergedAt": "2023-10-04T18:20:31Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "25bae3ffa6a24df49982bc4c809c06c518ec304b"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes suggested by Carl and Thomas for b64 and ueid.",
          "createdAt": "2023-09-26T19:17:20Z",
          "updatedAt": "2023-09-26T19:17:20Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5h6rfq",
          "commit": {
            "abbreviatedOid": "ba9cc2d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-25T18:30:57Z",
          "updatedAt": "2023-09-25T18:30:58Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nThe software is identified by a simple string name and version.\r\n```",
              "createdAt": "2023-09-25T18:30:58Z",
              "updatedAt": "2023-09-25T18:30:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5h6rnF",
          "commit": {
            "abbreviatedOid": "ba9cc2d"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-25T18:31:19Z",
          "updatedAt": "2023-09-25T18:31:19Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5h7A9h",
          "commit": {
            "abbreviatedOid": "c31a342"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-25T19:31:35Z",
          "updatedAt": "2023-09-25T19:31:35Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "PR looks good. One minor comment. It may be worth calling out the type byte. Perhaps: \"This ueid is the base64 encoding of a 48-bit MAC address along with a type byte set to 0x02.\" ",
              "createdAt": "2023-09-25T19:31:35Z",
              "updatedAt": "2023-09-25T19:31:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5h7DPg",
          "commit": {
            "abbreviatedOid": "c31a342"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-25T19:38:36Z",
          "updatedAt": "2023-09-25T19:38:37Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "maybe it's also s good case for using the term `base64url-encoded` from the document glossary, as in:\r\n```\r\nThis nonce is the base64url-encoded representation of a 12 byte random binary byte string.\r\n```",
              "createdAt": "2023-09-25T19:38:37Z",
              "updatedAt": "2023-09-25T19:38:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc5h7DYJ",
          "commit": {
            "abbreviatedOid": "c31a342"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-25T19:39:01Z",
          "updatedAt": "2023-09-25T19:39:01Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "good catch!",
              "createdAt": "2023-09-25T19:39:01Z",
              "updatedAt": "2023-09-25T19:39:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 424,
      "id": "PR_kwDOCEWCXc5bNkJp",
      "title": "Constrain the content of a nested JSON token.",
      "url": "https://github.com/ietf-rats-wg/eat/pull/424",
      "state": "CLOSED",
      "author": "quic-jodonogh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is how I'd propose to constrain nested JSON to be a valid EAT token.\r\n\r\nI added a definition of the .json operator as this is currently only defined in an early-stage I-D.",
      "createdAt": "2023-09-26T09:57:17Z",
      "updatedAt": "2023-09-28T13:33:12Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "caa9fb8378885f4baa6308c9e20741fbd17ab2f7",
      "headRepository": "quic-jodonogh/eat",
      "headRefName": "master",
      "headRefOid": "fd9a9067cc1cdb3fc700a103e54ea72d03f5f9db",
      "closedAt": "2023-09-28T13:32:38Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "quic-jodonogh",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We have agreed not to do the JSON operator thing. I'll write a separate PR for the easy fixes.",
          "createdAt": "2023-09-28T13:33:11Z",
          "updatedAt": "2023-09-28T13:33:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 425,
      "id": "PR_kwDOCEWCXc5bNr5Z",
      "title": "Potential text defining partial profiles for TEE",
      "url": "https://github.com/ietf-rats-wg/eat/pull/425",
      "state": "CLOSED",
      "author": "quic-jodonogh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Alternate text using TEE as a motivating use-case for partial profiles.",
      "createdAt": "2023-09-26T10:17:55Z",
      "updatedAt": "2023-10-06T17:50:03Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "partial-profile",
      "baseRefOid": "3a67218afabb914622851d7dc8d448bfdc148a2d",
      "headRepository": "quic-jodonogh/eat",
      "headRefName": "partial-profile",
      "headRefOid": "881249587b438fc37ea433b801fd9ea46f6fa9d4",
      "closedAt": "2023-10-06T17:50:03Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 426,
      "id": "PR_kwDOCEWCXc5bYE1-",
      "title": "Minor fixes to example subsection names",
      "url": "https://github.com/ietf-rats-wg/eat/pull/426",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-27T20:13:38Z",
      "updatedAt": "2023-09-28T17:54:13Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "b96536acd56e5bf38d6a4cf2e924cdfced2f36cb",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "typos",
      "headRefOid": "bfb314467942d0429fda920219af0b9a96e69b08",
      "closedAt": "2023-09-28T17:54:09Z",
      "mergedAt": "2023-09-28T17:54:09Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "7fdb9a2c1a798efc7f8e4db3464651e302a7431c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 427,
      "id": "PR_kwDOCEWCXc5bcspL",
      "title": "Easy fixes, as discussed by editors + contributors",
      "url": "https://github.com/ietf-rats-wg/eat/pull/427",
      "state": "MERGED",
      "author": "quic-jodonogh",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "PR providing what I believe to be all of the \"easy fixes\" identified by authors and contributors.",
      "createdAt": "2023-09-28T13:47:00Z",
      "updatedAt": "2023-10-02T18:01:55Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "b96536acd56e5bf38d6a4cf2e924cdfced2f36cb",
      "headRepository": "quic-jodonogh/eat",
      "headRefName": "JOD---Easy-Fixes",
      "headRefOid": "c59ff5c3f63a72ed595296900c33511d1e798ce3",
      "closedAt": "2023-10-02T18:01:54Z",
      "mergedAt": "2023-10-02T18:01:54Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "954f68e70c0d552cea61901d163f7a7487bdb7cd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 428,
      "id": "PR_kwDOCEWCXc5beQH5",
      "title": "Miniscule typo",
      "url": "https://github.com/ietf-rats-wg/eat/pull/428",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-28T18:19:07Z",
      "updatedAt": "2023-12-16T03:20:20Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "7fdb9a2c1a798efc7f8e4db3464651e302a7431c",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "miniscule-typo",
      "headRefOid": "79ee2012a4370991ee7ccf910216177d3bfae706",
      "closedAt": "2023-09-28T18:20:43Z",
      "mergedAt": "2023-09-28T18:20:43Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "8ca784e71146c11db5b3a4652e046daa2809ba1f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 429,
      "id": "PR_kwDOCEWCXc5cLUWJ",
      "title": "Clarify varying MAC addresses can't be used as UEID",
      "url": "https://github.com/ietf-rats-wg/eat/pull/429",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-07T19:32:29Z",
      "updatedAt": "2023-10-12T18:53:04Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "fd64a1bd9749cf49082091de38895f48a6d41c95",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "mac-ueid",
      "headRefOid": "680452c68723cf0c7e80abef8811b017b09785c2",
      "closedAt": "2023-10-12T18:52:59Z",
      "mergedAt": "2023-10-12T18:52:59Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3b40ad889e554c15e232f1650b485457fb428909"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5jNSW6",
          "commit": {
            "abbreviatedOid": "d2e058e"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "The \"some devices\" part does not seem right. Suggest:\r\n\r\n```\r\nMAC addreses that not permanent in accordance with requirement in this document MUST not be used for the UEID\r\n```",
          "createdAt": "2023-10-09T13:14:08Z",
          "updatedAt": "2023-10-09T13:14:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 430,
      "id": "PR_kwDOCEWCXc5dyQXT",
      "title": "Rearrange profile section on cbor tags",
      "url": "https://github.com/ietf-rats-wg/eat/pull/430",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I believe the existing wording is mostly wrong. It encourages something we don't want to happen. It's better if profiles don't define how CBOR tags are used.\r\n\r\nI wrote the original words. Apologies that I got them wrong and didn't catch this until now.",
      "createdAt": "2023-10-25T18:32:15Z",
      "updatedAt": "2023-12-12T00:45:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3b40ad889e554c15e232f1650b485457fb428909",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "cbor-tags",
      "headRefOid": "17e65ecfd013e7cfdd690cd75d739e857155e4fa",
      "closedAt": "2023-12-12T00:45:22Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing this because it seems too difficult to get through this late in the process and there's not agreement among the authors.",
          "createdAt": "2023-12-12T00:45:22Z",
          "updatedAt": "2023-12-12T00:45:22Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5lNsKs",
          "commit": {
            "abbreviatedOid": "17e65ec"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-25T19:15:09Z",
          "updatedAt": "2023-10-25T19:15:09Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "I am mostly indifferent to this change (section 3 already makes the points made in the new text). I'd probably replace the last two sentences with: \r\n```\r\nEAT profiles may require use of CBOR tags, media types or new message type identifiers, provided any requirements of the carrying protocol are satisfied. \r\n```\r\nCWT and COSE are not the only requirements generators.",
              "createdAt": "2023-10-25T19:15:09Z",
              "updatedAt": "2023-10-25T19:15:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 431,
      "id": "PR_kwDOCEWCXc5emefR",
      "title": "Clean up json-selector CDDL.",
      "url": "https://github.com/ietf-rats-wg/eat/pull/431",
      "state": "MERGED",
      "author": "cabo",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-11-04T17:33:30Z",
      "updatedAt": "2023-12-10T17:59:36Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3b40ad889e554c15e232f1650b485457fb428909",
      "headRepository": "cabo/eat",
      "headRefName": "json-selector-cddl",
      "headRefOid": "f5e266aaf7c2472c3c9a31fd156afab32b0ec064",
      "closedAt": "2023-12-10T17:59:36Z",
      "mergedAt": "2023-12-10T17:59:36Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "edad41693614aad7831127e7ac7846bf430ebbd6"
      },
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "This looks reasonable to me. I want to see how the next steps go with Roman before merging. Thank you.",
          "createdAt": "2023-11-07T06:19:04Z",
          "updatedAt": "2023-11-07T06:19:04Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5mKVxR",
          "commit": {
            "abbreviatedOid": "f5e266a"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-05T13:32:20Z",
          "updatedAt": "2023-11-05T13:32:20Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5mXV8B",
          "commit": {
            "abbreviatedOid": "f5e266a"
          },
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "LGTM",
          "createdAt": "2023-11-07T10:50:50Z",
          "updatedAt": "2023-11-07T10:50:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 432,
      "id": "PR_kwDOCEWCXc5hjP-D",
      "title": "editor/iana instructions for examples",
      "url": "https://github.com/ietf-rats-wg/eat/pull/432",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-08T18:52:08Z",
      "updatedAt": "2023-12-16T03:20:25Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3b40ad889e554c15e232f1650b485457fb428909",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "examples-rfc-editor",
      "headRefOid": "7fa493d7a7fc2f5aab1f475acce3cd177419301e",
      "closedAt": "2023-12-10T17:59:59Z",
      "mergedAt": "2023-12-10T17:59:59Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "3cf77f72efe0e0eee7de77cc534094671a80f82f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5psBIP",
          "commit": {
            "abbreviatedOid": "7fa493d"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-08T20:38:32Z",
          "updatedAt": "2023-12-08T20:38:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 433,
      "id": "PR_kwDOCEWCXc5hl7Qo",
      "title": "Minor OID use clarification",
      "url": "https://github.com/ietf-rats-wg/eat/pull/433",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The RFC 9165 reference is needed for the CDDL .feature control operator.",
      "createdAt": "2023-12-09T17:45:48Z",
      "updatedAt": "2023-12-12T01:30:46Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3b40ad889e554c15e232f1650b485457fb428909",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "oid-ref",
      "headRefOid": "950e9f9db0d4be6d45fb1e63a47f72cce89f0de9",
      "closedAt": "2023-12-12T01:30:46Z",
      "mergedAt": "2023-12-12T01:30:46Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "51cbad0d49642a5ae076edd2afdf26b9de764308"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5p4iCg",
          "commit": {
            "abbreviatedOid": "950e9f9"
          },
          "author": "nedmsmith",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "All these changes are improvements IMO.",
          "createdAt": "2023-12-12T01:08:10Z",
          "updatedAt": "2023-12-12T01:08:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 434,
      "id": "PR_kwDOCEWCXc5hl8zH",
      "title": "Revise CoSWID reference to point to recently published RFC 9393",
      "url": "https://github.com/ietf-rats-wg/eat/pull/434",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-09T18:03:59Z",
      "updatedAt": "2023-12-16T03:19:54Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "3b40ad889e554c15e232f1650b485457fb428909",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "9393",
      "headRefOid": "86821582c370d4fb7f4c540d5017740fb1bbfb4a",
      "closedAt": "2023-12-12T00:47:25Z",
      "mergedAt": "2023-12-12T00:47:25Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "e9b3638a10d3735034cb3aa8fbd287ca425ef377"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 435,
      "id": "PR_kwDOCEWCXc5hvv5d",
      "title": "Update the updates-since section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/435",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-12T02:36:14Z",
      "updatedAt": "2023-12-12T02:36:42Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "51cbad0d49642a5ae076edd2afdf26b9de764308",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "23-updates",
      "headRefOid": "8363e240b637def5652afdb928f445e2cd8b6b2a",
      "closedAt": "2023-12-12T02:36:37Z",
      "mergedAt": "2023-12-12T02:36:37Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "5a945a689efb854d09a14dda30883912497a9e8e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 436,
      "id": "PR_kwDOCEWCXc5h-tSC",
      "title": "Correct to-be-removed foot notes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/436",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-14T09:21:48Z",
      "updatedAt": "2023-12-14T09:22:23Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "fc9f6ff66c6e586b20b9e7a48060fcb0e0bc06d3",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "t-b-r",
      "headRefOid": "a6f8bb5f4dd9f23c98c92cd29abcc4f3a714a08f",
      "closedAt": "2023-12-14T09:22:19Z",
      "mergedAt": "2023-12-14T09:22:19Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "fd4b772b78484d82f082106ac4eb9d8906acf976"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 437,
      "id": "PR_kwDOCEWCXc5iJ_iA",
      "title": "Fix mistake in and clarify OID specification",
      "url": "https://github.com/ietf-rats-wg/eat/pull/437",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-16T02:48:15Z",
      "updatedAt": "2023-12-16T02:52:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "fd4b772b78484d82f082106ac4eb9d8906acf976",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "oid-again",
      "headRefOid": "a6f8bb5f4dd9f23c98c92cd29abcc4f3a714a08f",
      "closedAt": "2023-12-16T02:48:59Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Not from right base",
          "createdAt": "2023-12-16T02:48:59Z",
          "updatedAt": "2023-12-16T02:48:59Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 438,
      "id": "PR_kwDOCEWCXc5iKBAQ",
      "title": "Fix and clarify OID definition",
      "url": "https://github.com/ietf-rats-wg/eat/pull/438",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-12-16T03:18:39Z",
      "updatedAt": "2023-12-16T16:10:42Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "fd4b772b78484d82f082106ac4eb9d8906acf976",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "oid-again3",
      "headRefOid": "37c8726f6e90e81386f4a7364ba035bbba749a6b",
      "closedAt": "2023-12-16T16:10:42Z",
      "mergedAt": "2023-12-16T16:10:42Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "1492d28c1cd445fe55f95936a0113da726ceb066"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5qZ24X",
          "commit": {
            "abbreviatedOid": "37c8726"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-16T10:53:34Z",
          "updatedAt": "2023-12-16T10:53:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc5qaHbn",
          "commit": {
            "abbreviatedOid": "37c8726"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-12-16T16:09:22Z",
          "updatedAt": "2023-12-16T16:09:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 439,
      "id": "PR_kwDOCEWCXc5jYxfZ",
      "title": "Types in CWT registry are all CDDL definitions",
      "url": "https://github.com/ietf-rats-wg/eat/pull/439",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://mailarchive.ietf.org/arch/msg/cbor/qMs19DfPFSOrQ-e0tRHk-3Zaer4/\r\n\r\nThe \"Claim Value Type(s)\" column is now all CDDL definitions.\r\n\r\nSome of the types were in error and corrected.\r\n\r\nThis only affected the IANA section and only parts of it that aren't really normative.",
      "createdAt": "2024-01-06T18:06:34Z",
      "updatedAt": "2024-01-07T19:53:53Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1492d28c1cd445fe55f95936a0113da726ceb066",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "iana-cddl",
      "headRefOid": "40219a38b2a5ca123066757ca506c8a876332ef3",
      "closedAt": "2024-01-07T19:53:52Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "FAIL with GitHub and other stuff. Will try again.",
          "createdAt": "2024-01-06T18:29:13Z",
          "updatedAt": "2024-01-06T18:29:13Z"
        },
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Still messed up...",
          "createdAt": "2024-01-07T19:53:52Z",
          "updatedAt": "2024-01-07T19:53:52Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 440,
      "id": "PR_kwDOCEWCXc5jaXxA",
      "title": "Make Types in CWT registry CDDL definitions",
      "url": "https://github.com/ietf-rats-wg/eat/pull/440",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See https://mailarchive.ietf.org/arch/msg/cbor/qMs19DfPFSOrQ-e0tRHk-3Zaer4/",
      "createdAt": "2024-01-07T20:00:47Z",
      "updatedAt": "2024-01-12T17:41:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1492d28c1cd445fe55f95936a0113da726ceb066",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "iana-cddl-2",
      "headRefOid": "a403cad295a01e0970b74af81ea12d0ae62c6d42",
      "closedAt": "2024-01-12T17:41:31Z",
      "mergedAt": "2024-01-12T17:41:31Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "079942494c781cf08df84cc87c52bf929a867ade"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 441,
      "id": "PR_kwDOCEWCXc5j3T3y",
      "title": "Resolve 'authorised' versus 'authorized'",
      "url": "https://github.com/ietf-rats-wg/eat/pull/441",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Will go with 'authorized\" to be consistent with other IETF specifications such as RFC 6749.",
      "createdAt": "2024-01-11T22:19:19Z",
      "updatedAt": "2024-01-12T17:40:52Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "1492d28c1cd445fe55f95936a0113da726ceb066",
      "headRepository": "gmandyam/eat",
      "headRefName": "branch_OEMAuthBoot",
      "headRefOid": "9fa45910eafdec9f9a35be8b9c866686fd73d77a",
      "closedAt": "2024-01-12T17:40:52Z",
      "mergedAt": "2024-01-12T17:40:52Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "74c6080c5f9570998018488f9cfbdf5a5c7b0adc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 442,
      "id": "PR_kwDOCEWCXc5j9ErE",
      "title": "Make SUIT reference non-normative",
      "url": "https://github.com/ietf-rats-wg/eat/pull/442",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It is an optional part of an optional claim.",
      "createdAt": "2024-01-12T17:50:04Z",
      "updatedAt": "2024-01-14T00:16:48Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "079942494c781cf08df84cc87c52bf929a867ade",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "suit-non-norm",
      "headRefOid": "0b9a74fd4ae944b8d0a4c7eea6dcf444a87682d5",
      "closedAt": "2024-01-14T00:16:44Z",
      "mergedAt": "2024-01-14T00:16:44Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "4817fb02f35f037def51216c7202b1387e69ba53"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5se-MA",
          "commit": {
            "abbreviatedOid": "0b9a74f"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-13T16:42:36Z",
          "updatedAt": "2024-01-13T16:42:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 443,
      "id": "PR_kwDOCEWCXc5kB2IR",
      "title": "Fix two \"byte string\" occurrences in IANA section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/443",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-14T18:26:08Z",
      "updatedAt": "2024-01-14T18:27:06Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4817fb02f35f037def51216c7202b1387e69ba53",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "bstr-again",
      "headRefOid": "9a0f6adf6cc850df5c9c76d25b61099448145f12",
      "closedAt": "2024-01-14T18:27:06Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Github problems; PR didn't come out right",
          "createdAt": "2024-01-14T18:27:06Z",
          "updatedAt": "2024-01-14T18:27:06Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 444,
      "id": "PR_kwDOCEWCXc5kB22D",
      "title": "'byte-string' -> 'bstr' in IANA section",
      "url": "https://github.com/ietf-rats-wg/eat/pull/444",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-14T18:33:32Z",
      "updatedAt": "2024-01-14T18:34:45Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "4817fb02f35f037def51216c7202b1387e69ba53",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "bstr-iana",
      "headRefOid": "d402ab6cc938371d86c0c363e08859ddfd048724",
      "closedAt": "2024-01-14T18:34:41Z",
      "mergedAt": "2024-01-14T18:34:41Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "a0f5db72bd1a7b3d93435f2a8e806f97e8ee0849"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 445,
      "id": "PR_kwDOCEWCXc5lfCcp",
      "title": "Remove SUIT reference entirely to break dependency",
      "url": "https://github.com/ietf-rats-wg/eat/pull/445",
      "state": "CLOSED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The suit reference was through a pluggable socket part of the manifests claim. It was in EAT as a convenience. SUIT manifest can still be used and it is obvious how it should work even without any text so there is no big loss here.\r\n",
      "createdAt": "2024-01-30T18:17:00Z",
      "updatedAt": "2024-02-08T01:11:05Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a0f5db72bd1a7b3d93435f2a8e806f97e8ee0849",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "no-suit",
      "headRefOid": "5a159d3b5571402618a83695cdd3e3c71b175676",
      "closedAt": "2024-02-08T01:11:05Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "body": "Decided not to do this.",
          "createdAt": "2024-02-08T01:11:05Z",
          "updatedAt": "2024-02-08T01:11:05Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 446,
      "id": "PR_kwDOCEWCXc5maN9F",
      "title": "Change SUIT Manifest reference back to normative",
      "url": "https://github.com/ietf-rats-wg/eat/pull/446",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-08T18:07:25Z",
      "updatedAt": "2024-04-01T18:37:15Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a0f5db72bd1a7b3d93435f2a8e806f97e8ee0849",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "restore-suit",
      "headRefOid": "f7d245e93fff65669a9e6b5f81062828f941fccc",
      "closedAt": "2024-04-01T18:37:15Z",
      "mergedAt": "2024-04-01T18:37:14Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "9ad92db03ee8f24a44c9f292b623636dd46bf959"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 449,
      "id": "PR_kwDOCEWCXc5rM3-t",
      "title": "Tbd based on iana",
      "url": "https://github.com/ietf-rats-wg/eat/pull/449",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-29T20:52:36Z",
      "updatedAt": "2024-04-01T17:23:58Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a0f5db72bd1a7b3d93435f2a8e806f97e8ee0849",
      "headRepository": "gmandyam/eat",
      "headRefName": "TBD_based_on_IANA",
      "headRefOid": "a74d6e90e689849f0420876b5c2accd16561bdd1",
      "closedAt": "2024-04-01T17:23:58Z",
      "mergedAt": "2024-04-01T17:23:57Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "15c32518235951957d1c998f2430df05788cb3a4"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "@laurencelundblade \r\n\r\nMakefile now runs on my end and rendered test has no TBD's.  Please re-run on your end, and if there are no further changes required then merge.  Thanks.",
          "createdAt": "2024-03-31T20:17:39Z",
          "updatedAt": "2024-03-31T20:17:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc51Zg0T",
          "commit": {
            "abbreviatedOid": "ee908ff"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Changes to deb.cddl are needed in the comments.\r\n\r\nChanges to the Makefile are needed where substitution is done for TBDs.\r\n\r\nBasically, search the rendered document and all the document source for \"TBD\" to make sure you got them all (except for the ones that are for the RFC editor to fix).\r\n\r\nGetting close to done with the whole thing :-)\r\n",
          "createdAt": "2024-03-29T21:28:11Z",
          "updatedAt": "2024-03-29T21:49:00Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Should remove this comment since it isn't true any more.",
              "createdAt": "2024-03-29T21:28:11Z",
              "updatedAt": "2024-03-29T21:49:00Z"
            },
            {
              "originalPosition": 5,
              "body": "Would be good to put these in numeric order.",
              "createdAt": "2024-03-29T21:28:52Z",
              "updatedAt": "2024-03-29T21:49:00Z"
            },
            {
              "originalPosition": 21,
              "body": "Maybe re-indent all the other lines to be the same as this line.",
              "createdAt": "2024-03-29T21:29:22Z",
              "updatedAt": "2024-03-29T21:49:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc51bIUW",
          "commit": {
            "abbreviatedOid": "a2f2bb2"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "There's still a TBD602 in the .md document.  Plus the Makefile doesn't build for me.",
          "createdAt": "2024-03-30T19:23:38Z",
          "updatedAt": "2024-03-30T19:25:32Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "For my build env, these lines have to be completely removed.",
              "createdAt": "2024-03-30T19:23:38Z",
              "updatedAt": "2024-03-30T19:25:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc51bRTz",
          "commit": {
            "abbreviatedOid": "a2f2bb2"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-31T02:50:15Z",
          "updatedAt": "2024-03-31T02:50:15Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "I have commented them out,  but I don't see how the nc-cddl directory gets created by doing so.  I am still debugging other parts of my env to get the Makefile running, but leaving in those lines allowed for the nc-cddl directory to be created.",
              "createdAt": "2024-03-31T02:50:15Z",
              "updatedAt": "2024-03-31T02:50:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOCEWCXc51cdVI",
          "commit": {
            "abbreviatedOid": "2b31e1e"
          },
          "author": "laurencelundblade",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-03-31T19:12:08Z",
          "updatedAt": "2024-03-31T19:12:15Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Just remove the two sed lines that do the \"TBD\" substitutions.",
              "createdAt": "2024-03-31T19:12:08Z",
              "updatedAt": "2024-03-31T19:12:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 450,
      "id": "PR_kwDOCEWCXc5rQh8n",
      "title": "Fix/update examples and CDDL validation",
      "url": "https://github.com/ietf-rats-wg/eat/pull/450",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This updates the examples with the IANA-assigned labels and tags.\r\n\r\nThis fixes some errors in the examples, mostly missing commas.\r\n\r\nThere is a change to the normative CDDL to compensate for a bug in the cddl tool. RFC 8610 says that there is a problem with generics nesting in the cddl tool. This is presumed to be the cause of the problem. The solution is to provide a non-nested version of the JC<> generic for use in contexts where the cddl validation gets confused. (It didn't produce an error, it just didn't validate correct input; the solution was found by extensive trial and error).",
      "createdAt": "2024-03-31T19:53:08Z",
      "updatedAt": "2024-04-01T18:35:35Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "a0f5db72bd1a7b3d93435f2a8e806f97e8ee0849",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "examples-update",
      "headRefOid": "ec107df5a4372d830d1e0396557ccc1af9ec6ea5",
      "closedAt": "2024-04-01T18:35:35Z",
      "mergedAt": "2024-04-01T18:35:35Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "62d256c424f1a17f7bda0f4ba302d0d112cc0f5e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 451,
      "id": "PR_kwDOCEWCXc5rl0sw",
      "title": "RFC nits",
      "url": "https://github.com/ietf-rats-wg/eat/pull/451",
      "state": "MERGED",
      "author": "gmandyam",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Resolving over-length lines",
      "createdAt": "2024-04-03T16:18:27Z",
      "updatedAt": "2024-04-04T19:14:53Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9ad92db03ee8f24a44c9f292b623636dd46bf959",
      "headRepository": "gmandyam/eat",
      "headRefName": "RFC_nits",
      "headRefOid": "462a8817def9e42eeeca2dda37bff78aa2162028",
      "closedAt": "2024-04-04T19:14:53Z",
      "mergedAt": "2024-04-04T19:14:53Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "b615298360e36493002e4558d06b7bbc1c3e9b33"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 452,
      "id": "PR_kwDOCEWCXc5rv5Yn",
      "title": "Make quote marks non-ascii",
      "url": "https://github.com/ietf-rats-wg/eat/pull/452",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-04-04T18:33:00Z",
      "updatedAt": "2024-04-04T18:49:00Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "9ad92db03ee8f24a44c9f292b623636dd46bf959",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "non-ascii",
      "headRefOid": "5180b6eab0ef008688d8a56528749a386f7f3791",
      "closedAt": "2024-04-04T18:48:56Z",
      "mergedAt": "2024-04-04T18:48:56Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "0f036c0dce08ca2b3be5e15799d97a7b469de25b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 453,
      "id": "PR_kwDOCEWCXc5soFY_",
      "title": "JSON-format example fixes",
      "url": "https://github.com/ietf-rats-wg/eat/pull/453",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Using latest cddl tool that can validate into b64 and json some issues with the JSON examples and b64 encoding were found.",
      "createdAt": "2024-04-15T05:29:33Z",
      "updatedAt": "2024-04-15T17:59:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "b615298360e36493002e4558d06b7bbc1c3e9b33",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "b64fixes",
      "headRefOid": "3e526bce0e7732638a56da10a41b5ae5d9649e02",
      "closedAt": "2024-04-15T17:58:57Z",
      "mergedAt": "2024-04-15T17:58:57Z",
      "mergedBy": "laurencelundblade",
      "mergeCommit": {
        "oid": "45891cbc221f76ee84501b06d95fdb1e98fac28d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 454,
      "id": "PR_kwDOCEWCXc5uTBWC",
      "title": "Remove suit manifests; get ready to publish draft 26",
      "url": "https://github.com/ietf-rats-wg/eat/pull/454",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-02T00:00:40Z",
      "updatedAt": "2024-05-05T17:57:13Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "45891cbc221f76ee84501b06d95fdb1e98fac28d",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "unsuit",
      "headRefOid": "aa22f36fc400b5c8e3e683579ed23b07e5eceb80",
      "closedAt": "2024-05-05T17:57:13Z",
      "mergedAt": "2024-05-05T17:57:13Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "d7be8b15b42dcae4e6765219d5c1bec1a5241334"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc55fvn5",
          "commit": {
            "abbreviatedOid": "642ddfe"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-03T15:05:03Z",
          "updatedAt": "2024-05-03T15:05:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc55hPTQ",
          "commit": {
            "abbreviatedOid": "aa22f36"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-03T18:09:03Z",
          "updatedAt": "2024-05-03T18:09:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 455,
      "id": "PR_kwDOCEWCXc5wOBNg",
      "title": "Fix minor spelling and grammar",
      "url": "https://github.com/ietf-rats-wg/eat/pull/455",
      "state": "MERGED",
      "author": "steven-bellock",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Signed-off-by: Steven Bellock <sbellock@nvidia.com>",
      "createdAt": "2024-05-22T15:17:30Z",
      "updatedAt": "2024-05-24T14:27:01Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d7be8b15b42dcae4e6765219d5c1bec1a5241334",
      "headRepository": "steven-bellock/eat",
      "headRefName": "fix-grammar",
      "headRefOid": "75c439780e35c36872284d409c08d07c8ceb364a",
      "closedAt": "2024-05-24T14:20:14Z",
      "mergedAt": "2024-05-24T14:20:14Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "d5bddf29e176d045791a252581d9a98467d87c64"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc57e379",
          "commit": {
            "abbreviatedOid": "75c4397"
          },
          "author": "carl-wallace",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-22T15:54:46Z",
          "updatedAt": "2024-05-22T15:54:46Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc57zYdh",
          "commit": {
            "abbreviatedOid": "75c4397"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-24T14:20:04Z",
          "updatedAt": "2024-05-24T14:20:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 456,
      "id": "PR_kwDOCEWCXc5wXl3M",
      "title": "Address Roman's May 2024 comments",
      "url": "https://github.com/ietf-rats-wg/eat/pull/456",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I believe the idnits complaint about  \"/    the    name\" is about comments in the CBOR diagnostic notation in the examples.\r\n\r\n- Reworded full profiles description to convey intent without using \"may not\"\r\n\r\n- Upated references for UUIDs and LDAP to non-obsolete documents.\r\n\r\n- Removed some non-ascii quote marks\r\n\r\n- \"MAY not\" -> \"MAY NOT\"",
      "createdAt": "2024-05-23T18:46:08Z",
      "updatedAt": "2024-05-24T19:42:48Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "d7be8b15b42dcae4e6765219d5c1bec1a5241334",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "may-nits",
      "headRefOid": "ab8484db5f6e3075fa626be233cc082d27ba3884",
      "closedAt": "2024-05-24T19:42:48Z",
      "mergedAt": "2024-05-24T19:42:48Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "5f5c0b1a4714139cd72cffdee28d922502194a3a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc57zZS8",
          "commit": {
            "abbreviatedOid": "cf6c775"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Return RFC 9334 to normative reference",
          "createdAt": "2024-05-24T14:21:24Z",
          "updatedAt": "2024-05-24T14:21:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOCEWCXc572CGe",
          "commit": {
            "abbreviatedOid": "ab8484d"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-24T19:42:18Z",
          "updatedAt": "2024-05-24T19:42:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 457,
      "id": "PR_kwDOCEWCXc5zNiRr",
      "title": "Address June 2024 AD comments",
      "url": "https://github.com/ietf-rats-wg/eat/pull/457",
      "state": "MERGED",
      "author": "laurencelundblade",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Address comments from Paul Wouters and Deb Cooley.\r\n\r\nRandom sources clarifications in Appendix B\u00b6\r\n\r\nMinor wording fixes\u00b6\r\n\r\nAdd certification examples for DLOAs\u00b6\r\n\r\nClarify nonce source in section 1.3\u00b6\r\n",
      "createdAt": "2024-06-21T18:14:22Z",
      "updatedAt": "2024-06-25T16:15:59Z",
      "baseRepository": "ietf-rats-wg/eat",
      "baseRefName": "master",
      "baseRefOid": "5f5c0b1a4714139cd72cffdee28d922502194a3a",
      "headRepository": "ietf-rats-wg/eat",
      "headRefName": "ad2",
      "headRefOid": "bea4a257b6ca3274c9c95dfc6fa447de9c33a405",
      "closedAt": "2024-06-25T16:15:59Z",
      "mergedAt": "2024-06-25T16:15:59Z",
      "mergedBy": "gmandyam",
      "mergeCommit": {
        "oid": "2150b4704fc7bcd5031f8f1f2a40d8de5df20f91"
      },
      "comments": [
        {
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "body": "Will merge and correct typo.",
          "createdAt": "2024-06-25T16:15:55Z",
          "updatedAt": "2024-06-25T16:15:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOCEWCXc5_W9Z8",
          "commit": {
            "abbreviatedOid": "bea4a25"
          },
          "author": "gmandyam",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": ">In particular, hardware randomness sources where introduced in CPUs between 2010 and 2015.\r\n\r\n'were introduced'?",
          "createdAt": "2024-06-24T20:53:19Z",
          "updatedAt": "2024-06-24T20:53:19Z",
          "comments": []
        }
      ]
    }
  ]
}